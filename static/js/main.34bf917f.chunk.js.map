{"version":3,"sources":["actions/index.js","reducers/app.js","data/evidences.js","data/ghosts.js","utils/index.js","reducers/picker.js","data/quests.js","reducers/loader.js","reducers/index.js","firebase.js","services/firebaseData.js","selectors/index.js","sagas/index.js","store.js","components/Picker/Buttons/styles.js","components/Picker/Buttons/CustomButton.jsx","components/Picker/GhostCard/styles.js","components/Picker/GhostCard/index.jsx","components/Picker/styles.js","components/Picker/index.jsx","components/Questions/styles.js","components/Questions/index.jsx","components/Loader/styles.js","components/Loader/index.jsx","components/Login/styles.js","components/Login/index.jsx","components/theme.js","components/App.jsx","index.jsx"],"names":["enterApp","page","sessionId","type","setSessionKey","sessionKey","setClientId","clientId","setPickerState","data","key","defaultState","app","state","action","EMF","ghosts","name","evidences","strength","weakness","cookies","Cookies","filterGhostsByEvidences","filter","ghost","difference","length","setSessionId","value","set","maxAge","getCurrentTimestamp","Date","now","getSessionById","id","objects","find","el","generateUuid","customAlphabet","nanoid","selectedEvidences","evidenceButtons","questButtons","talksToEveryOne","ghostName","picker","evidence","isActive","updatedButtonsState","push","filteredGhosts","remove","quest","get","loader","combineReducers","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","orderByChild","equalTo","once","session","child","update","sessionIdSelector","sessionKeySelector","clientIdSelector","pickerStateSelector","removeSession","handlePickerChange","rootSaga","updateDebounced","debounce","firebaseDataService","updateSession","createPickerStateObject","updatedAt","call","val","Object","keys","clients","put","select","objectToStore","createSession","newSessionKey","takeEvery","takeLatest","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","REACT_APP_ENV","composeWithDevTools","applyMiddleware","run","makeStyles","button","color","props","margin","buttonSelected","border","CustomButton","text","handleClick","css","useStyles","useSelector","isActiveButtonSelector","Button","className","onClick","root","width","padding","content","display","alignItems","accent","header","GhostCard","useState","isOpen","setIsOpen","useEffect","Fade","in","timeout","Box","Typography","variant","map","includes","palette","wrapper","flexDirection","justifyContent","minHeight","background","primary","main","contrastText","inputWrapper","flexWrap","evidencesButtonsWrapper","ghostsWrapper","alignContent","noEvidenceWrapper","marginTop","sessionControls","height","position","zIndex","sessionIdWrapper","marginRight","Picker","changePage","resetSession","dispatch","useDispatch","pickerState","copyHintText","setCopyHintText","handleEvidenceButtonClick","filterGhosts","handleQuestButtonClick","updateSelectedQuests","Slide","direction","mountOnEnter","unmountOnExit","Tooltip","title","clipboardCopy","then","setTimeout","IconButton","TextField","label","onChange","e","target","updateGhostName","updateAnswersEveryoneButton","isEmpty","overflowX","pageLabel","questionsWrapper","columnWrapper","questionHeader","Questions","questions","active","backgroundColor","disabled","Loader","selectorStyle","loaderStateSelector","CircularProgress","submitButton","Login","changeSessionId","setSession","error","setError","isJoinButtonPressed","setIsJoinButtonPressed","sessionIdCookie","handleClickJoin","helperText","test","preventDefault","createMuiTheme","grey","secondary","overrides","MuiTypography","body1","fontFamily","h3","h4","h5","h6","App","pageSelector","onAppExit","window","addEventListener","removeEventListener","getRef","on","handleChangePage","newPage","handleSessionReset","ThemeProvider","theme","renderPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34bf917f.chunk.js","sourcesContent":["export const ENTER_APP = 'ENTER_APP';\nexport const enterApp = (page, sessionId) => ({\n  type: ENTER_APP,\n  page,\n  sessionId,\n});\n\nexport const SET_SESSION_KEY = 'SET_SESSION_KEY';\nexport const setSessionKey = (sessionKey) => ({\n  type: SET_SESSION_KEY,\n  sessionKey,\n});\n\nexport const SET_CLIENT_ID = 'SET_CLIENT_ID';\nexport const setClientId = (clientId) => ({\n  type: SET_CLIENT_ID,\n  clientId,\n});\n\nexport const RESET_SESSION = 'RESET_SESSION';\nexport const resetSession = () => ({ type: RESET_SESSION });\n\nexport const RESET_SESSION_COMPLETE = 'RESET_SESSION_COMPLETE';\nexport const resetSessionComplete = () => ({ type: RESET_SESSION_COMPLETE });\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const changePage = (page) => ({\n  type: CHANGE_PAGE,\n  page,\n});\n\nexport const FILTER_GHOSTS = 'FILTER_GHOSTS';\nexport const filterGhosts = (evidence, isActive) => ({\n  type: FILTER_GHOSTS,\n  evidence,\n  isActive,\n});\n\nexport const UPDATE_SELECTED_QUESTS = 'UPDATE_SELECTED_QUESTS';\nexport const updateSelectedQuests = (quest, isActive) => ({\n  type: UPDATE_SELECTED_QUESTS,\n  quest,\n  isActive,\n});\n\nexport const UPDATE_GHOST_NAME = 'UPDATE_GHOST_NAME';\nexport const updateGhostName = (name) => ({\n  type: UPDATE_GHOST_NAME,\n  name,\n});\n\nexport const UPDATE_ANSWERS_EVERYONE_BUTTON = 'UPDATE_ANSWERS_EVERYONE_BUTTON';\nexport const updateAnswersEveryoneButton = (isActive) => ({\n  type: UPDATE_ANSWERS_EVERYONE_BUTTON,\n  isActive,\n});\n\nexport const RESET_PICKER = 'RESET_PICKER';\nexport const resetPicker = () => ({ type: RESET_PICKER });\n\nexport const SET_PICKER_STATE = 'SET_PICKER_STATE';\nexport const setPickerState = (data, key) => ({\n  type: SET_PICKER_STATE,\n  data,\n  key,\n});\n\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const showLoader = () => ({ type: SHOW_LOADER });\n\nexport const HIDE_LOADER = 'HIDE_LOADER';\nexport const hideLoader = () => ({ type: HIDE_LOADER });\n","import {\n  CHANGE_PAGE, ENTER_APP, RESET_SESSION_COMPLETE,\n  SET_SESSION_KEY, SET_CLIENT_ID,\n} from '../actions';\n\nconst defaultState = {\n  page: '',\n  sessionId: '',\n  sessionKey: null,\n  clientId: null,\n};\n\nconst app = (state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_PAGE: {\n      const { page } = action;\n\n      return ({\n        ...state,\n        page,\n      });\n    }\n\n    case ENTER_APP: {\n      const { page, sessionId } = action;\n\n      return ({\n        page,\n        sessionId,\n      });\n    }\n\n    case SET_CLIENT_ID: {\n      const { clientId } = action;\n\n      return {\n        ...state,\n        clientId,\n      };\n    }\n\n    case RESET_SESSION_COMPLETE: {\n      return defaultState;\n    }\n\n    case SET_SESSION_KEY: {\n      const { sessionKey } = action;\n\n      return {\n        ...state,\n        sessionKey,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","export const EMF = 'EMF';\nexport const FINGERPRINTS = 'Fingerprints';\nexport const TEMPERATURE = 'Temperature';\nexport const GHOST_WRITING = 'Ghost Writing';\nexport const SPIRIT_BOX = 'Spirit Box';\nexport const GHOST_ORB = 'Ghost Orb';\n","import {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, GHOST_ORB, SPIRIT_BOX,\n} from './evidences';\n\nconst ghosts = [\n  {\n    name: 'Banshee',\n    evidences: [EMF, FINGERPRINTS, TEMPERATURE],\n    strength: 'Only targets one player at a time',\n    weakness: 'Hates the Crucifix',\n  },\n\n  {\n    name: 'Demon',\n    evidences: [TEMPERATURE, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely aggressive',\n    weakness: 'Using the Ouija board to ask questions does not drain sanity',\n  },\n\n  {\n    name: 'Jinn',\n    evidences: [EMF, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Moves faster the further away you are from it',\n    weakness: 'Cutting off the location’s power supply will limit the Jinn’s speed',\n  },\n\n  {\n    name: 'Mare',\n    evidences: [TEMPERATURE, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Attacks more frequently in the dark, tends to switch off lights',\n    weakness: 'Keeping the lights on',\n  },\n\n  {\n    name: 'Oni',\n    evidences: [EMF, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely active and moves objects quickly',\n    weakness: 'Extreme activity with lots of players nearby makes it easy to identify',\n  },\n\n  {\n    name: 'Phantom',\n    evidences: [EMF, TEMPERATURE, GHOST_ORB],\n    strength: 'Looking at the Phantom will reduce your sanity',\n    weakness: 'Capturing a photo will cause it to disappear, not during a hunt',\n  },\n\n  {\n    name: 'Poltergeist',\n    evidences: [FINGERPRINTS, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Throws multiple objects about at once',\n    weakness: 'Rooms without any stuff in to throw',\n  },\n\n  {\n    name: 'Revenant',\n    evidences: [EMF, FINGERPRINTS, GHOST_WRITING],\n    strength: 'Attacks anyone, regardless of sanity levels',\n    weakness: 'Moves extremely slowly when players hide',\n  },\n\n  {\n    name: 'Shade',\n    evidences: [EMF, GHOST_WRITING, GHOST_ORB],\n    strength: 'Minimal activity, hard to find and detect',\n    weakness: 'Does not hunt if players are in a group',\n  },\n\n  {\n    name: 'Spirit',\n    evidences: [FINGERPRINTS, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'No strengths',\n    weakness: 'Using smudge sticks stops from starting for a long time',\n  },\n\n  {\n    name: 'Wraith',\n    evidences: [FINGERPRINTS, TEMPERATURE, SPIRIT_BOX],\n    strength: 'Can fly through walls and does not leave footprints',\n    weakness: 'Salt is toxic for Wraith',\n  },\n\n  {\n    name: 'Yurei',\n    evidences: [TEMPERATURE, GHOST_WRITING, GHOST_ORB],\n    strength: 'Drains player sanity especially quickly',\n    weakness: 'Smudge stick in the same room will stop the Yurei from moving',\n  },\n];\n\nexport default ghosts;\n","import { filter, find, difference } from 'lodash';\nimport { customAlphabet } from 'nanoid';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const filterGhostsByEvidences = (ghosts, evidences) => (\n  filter(ghosts, (ghost) => difference(evidences, ghost.evidences).length === 0)\n);\n\nexport const setSessionId = (value) => {\n  cookies.set('sessionId', value, { maxAge: 28800 });\n};\n\nexport const getSessionId = () => cookies.get('sessionId');\n\nexport const resetSessionId = () => cookies.remove('sessionId');\n\nexport const getCurrentTimestamp = () => Date.now();\n\nexport const getSessionById = (id, objects) => (\n  find(objects, (el) => el.sessionId === id) || null\n);\n\nexport const generateUuid = () => {\n  const nanoid = customAlphabet('123456789ABCD', 8);\n  return nanoid();\n};\n","import { get, remove } from 'lodash';\n\nimport {\n  FILTER_GHOSTS, UPDATE_SELECTED_QUESTS,\n  UPDATE_GHOST_NAME, RESET_PICKER, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  SET_PICKER_STATE,\n} from '../actions';\n\nimport ghosts from '../data/ghosts';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, TEMPERATURE as TEMPERATURE_QUEST,\n  CRUCIFIX, EVENT, MOTION, PHOTO, SINK, SMUDGE,\n} from '../data/quests';\n\nimport { filterGhostsByEvidences } from '../utils';\n\nconst defaultState = {\n  selectedEvidences: [],\n  ghosts,\n  evidenceButtons: {\n    [EMF]: false,\n    [FINGERPRINTS]: false,\n    [TEMPERATURE]: false,\n    [GHOST_WRITING]: false,\n    [SPIRIT_BOX]: false,\n    [GHOST_ORB]: false,\n  },\n  questButtons: {\n    [SINK]: false,\n    [PHOTO]: false,\n    [MOTION]: false,\n    [TEMPERATURE_QUEST]: false,\n    [CRUCIFIX]: false,\n    [EMF_QUEST]: false,\n    [SMUDGE]: false,\n    [EVENT]: false,\n  },\n  talksToEveryOne: false,\n  ghostName: '',\n};\n\nconst picker = (state = defaultState, action) => {\n  switch (action.type) {\n    case FILTER_GHOSTS: {\n      const { evidence, isActive } = action;\n      const { selectedEvidences } = state;\n\n      const updatedButtonsState = {\n        ...state.evidenceButtons,\n        [evidence]: isActive,\n      };\n\n      if (isActive) {\n        selectedEvidences.push(evidence);\n\n        const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n        return {\n          ...state,\n          ghosts: filteredGhosts,\n          selectedEvidences,\n          evidenceButtons: updatedButtonsState,\n        };\n      }\n\n      remove(selectedEvidences, (el) => el === evidence);\n\n      const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n      return {\n        ...state,\n        ghosts: filteredGhosts,\n        selectedEvidences,\n        evidenceButtons: updatedButtonsState,\n      };\n    }\n\n    case UPDATE_GHOST_NAME: {\n      const { name } = action;\n\n      return {\n        ...state,\n        ghostName: name,\n      };\n    }\n\n    case UPDATE_SELECTED_QUESTS: {\n      const { quest, isActive } = action;\n\n      return {\n        ...state,\n        questButtons: {\n          ...state.questButtons,\n          [quest]: isActive,\n        },\n      };\n    }\n\n    case UPDATE_ANSWERS_EVERYONE_BUTTON: {\n      const { isActive } = action;\n\n      return {\n        ...state,\n        talksToEveryOne: isActive,\n      };\n    }\n\n    case RESET_PICKER: {\n      return {\n        ...defaultState,\n        selectedEvidences: [],\n      };\n    }\n\n    case SET_PICKER_STATE: {\n      const { data } = action;\n      const selectedEvidences = get(data, 'selectedEvidences', []);\n\n      return {\n        ...state,\n        ...data,\n        selectedEvidences,\n        ghosts: filterGhostsByEvidences(ghosts, selectedEvidences),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default picker;\n","export const SINK = 'Sink';\nexport const PHOTO = 'Photo';\nexport const EVENT = 'Event';\nexport const MOTION = 'Motion';\nexport const TEMPERATURE = 'Temperature';\nexport const CRUCIFIX = 'Crucifix';\nexport const EMF = 'EMF';\nexport const SMUDGE = 'Smudge';\n","import {\n  SHOW_LOADER, HIDE_LOADER,\n} from '../actions';\n\nconst loader = (state = false, action) => {\n  switch (action.type) {\n    case SHOW_LOADER: {\n      return true;\n    }\n\n    case HIDE_LOADER: {\n      return false;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default loader;\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport picker from './picker';\nimport loader from './loader';\n\nexport default combineReducers({\n  app,\n  picker,\n  loader,\n});\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_API_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSANGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase.database();\n","import firebase from '../firebase';\n\nclass FirebaseDataService {\n  getSessionById(sessionId) {\n    return firebase.ref()\n      .orderByChild('sessionId')\n      .equalTo(sessionId)\n      .once('value');\n  }\n\n  createSession(session) {\n    return firebase.ref().push(session);\n  }\n\n  updateSession(key, value) {\n    return firebase.ref().child(key).update(value);\n  }\n\n  removeSession(key) {\n    return firebase.ref().child(key).remove();\n  }\n\n  getRef() {\n    return firebase.ref();\n  }\n}\n\nexport default new FirebaseDataService();\n","export const pageSelector = (state) => state.app.page;\n\nexport const sessionIdSelector = (state) => state.app.sessionId;\n\nexport const sessionKeySelector = (state) => state.app.sessionKey;\n\nexport const clientIdSelector = (state) => state.app.clientId;\n\nexport const selectedEvidencesSelector = (state) => state.picker.selectedEvidences;\n\nexport const questButtonsStateSelector = (state) => state.picker.questButtons;\n\nexport const isActiveButtonSelector = (state, type, name) => {\n  switch (type) {\n    case 'evidence': {\n      return state.picker.evidenceButtons[name];\n    }\n\n    case 'quest': {\n      return state.picker.questButtons[name];\n    }\n\n    case 'talksToEveryOne': {\n      return state.picker.talksToEveryOne;\n    }\n\n    default: {\n      return false;\n    }\n  }\n};\n\nexport const loaderStateSelector = (state) => state.loader;\n\nexport const pickerStateSelector = (state) => state.picker;\n","import {\n  call, put, takeEvery, select, takeLatest,\n} from 'redux-saga/effects';\n\nimport { get, remove, debounce } from 'lodash';\n\nimport firebaseDataService from '../services/firebaseData';\nimport {\n  sessionKeySelector, pickerStateSelector,\n  sessionIdSelector, clientIdSelector,\n} from '../selectors';\n\nimport { getSessionById, getCurrentTimestamp, generateUuid } from '../utils';\n\nimport {\n  ENTER_APP, RESET_SESSION, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  UPDATE_SELECTED_QUESTS, UPDATE_GHOST_NAME, FILTER_GHOSTS, RESET_PICKER,\n  setPickerState, resetSessionComplete, resetPicker, setSessionKey,\n  setClientId,\n} from '../actions';\n\nconst updateDebounced = debounce(firebaseDataService.updateSession, 800);\n\nconst createPickerStateObject = (picker, sessionId) => {\n  const {\n    selectedEvidences, evidenceButtons, questButtons,\n    talksToEveryOne, ghostName,\n  } = picker;\n\n  return {\n    sessionId,\n    selectedEvidences,\n    evidenceButtons,\n    questButtons,\n    talksToEveryOne,\n    ghostName,\n    updatedAt: getCurrentTimestamp(),\n  };\n};\n\nfunction* enterApp(action) {\n  const { sessionId } = action;\n  const clientId = generateUuid();\n\n  if (sessionId !== '') {\n    const data = yield call(firebaseDataService.getSessionById, sessionId);\n    const session = getSessionById(sessionId, data.val());\n\n    if (session) {\n      const key = Object.keys(data.val())[0];\n      const clients = get(session, 'clients', []);\n      clients.push(clientId);\n\n      yield call(\n        firebaseDataService.updateSession,\n        key,\n        {\n          ...session,\n          clients,\n          updatedAt: getCurrentTimestamp(),\n        },\n      );\n\n      yield put(setPickerState(session));\n      yield put(setSessionKey(key));\n    } else {\n      const picker = yield select(pickerStateSelector);\n      const objectToStore = createPickerStateObject(picker, sessionId);\n\n      const newSessionKey = yield call(\n        firebaseDataService.createSession,\n        {\n          ...objectToStore,\n          clients: [clientId],\n        },\n      );\n      yield put(setSessionKey(newSessionKey.key));\n    }\n\n    yield put(setClientId(clientId));\n  }\n}\n\nfunction* removeSession() {\n  const sessionId = yield select(sessionIdSelector);\n  const clientId = yield select(clientIdSelector);\n  const key = yield select(sessionKeySelector);\n\n  if (sessionId === '') {\n    yield put(resetSessionComplete());\n    yield put(resetPicker());\n    return;\n  }\n\n  const data = yield call(firebaseDataService.getSessionById, sessionId);\n  const session = getSessionById(sessionId, data.val());\n\n  const clients = get(session, 'clients', []);\n\n  if (clients.length === 1) {\n    yield call(firebaseDataService.removeSession, key);\n  } else {\n    remove(clients, (el) => el === clientId);\n\n    yield call(\n      firebaseDataService.updateSession,\n      key,\n      {\n        ...session,\n        clients,\n        updatedAt: getCurrentTimestamp(),\n      },\n    );\n  }\n\n  yield put(resetSessionComplete());\n  yield put(resetPicker());\n}\n\nfunction* handlePickerChange() {\n  const sessionKey = yield select(sessionKeySelector);\n  const sessionId = yield select(sessionIdSelector);\n  const picker = yield select(pickerStateSelector);\n\n  const objectToStore = createPickerStateObject(picker, sessionId);\n\n  if (sessionKey && sessionId !== '') {\n    yield call(updateDebounced, sessionKey, objectToStore);\n    return;\n  }\n\n  if (!sessionKey && sessionId.length > 0) {\n    const newSessionKey = yield call(firebaseDataService.createSession, objectToStore);\n    yield put(setSessionKey(newSessionKey.key));\n  }\n}\n\nfunction* rootSaga() {\n  yield takeEvery(ENTER_APP, enterApp);\n  yield takeEvery(RESET_SESSION, removeSession);\n  yield takeLatest([\n    UPDATE_GHOST_NAME,\n    UPDATE_SELECTED_QUESTS,\n    UPDATE_ANSWERS_EVERYONE_BUTTON,\n    FILTER_GHOSTS,\n    RESET_PICKER,\n  ], handlePickerChange);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\nimport rootSaga from './sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    reducer,\n    process.env.REACT_APP_ENV === 'dev'\n      ? composeWithDevTools(applyMiddleware(sagaMiddleware))\n      : applyMiddleware(sagaMiddleware),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  button: {\n    color: (props) => props.color,\n    margin: '0 5px',\n  },\n\n  buttonSelected: {\n    color: (props) => props.color,\n    border: '2px solid red',\n    margin: '0 2px',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nimport { isActiveButtonSelector } from '../../../selectors';\n\nconst CustomButton = ({\n  type, text, handleClick, ...props\n}) => {\n  const css = useStyles(props);\n\n  const isActive = useSelector((state) => isActiveButtonSelector(state, type, text));\n\n  return (\n    <Button\n      className={isActive ? css.buttonSelected : css.button}\n      onClick={() => handleClick(text, !isActive)}\n    >\n      {text}\n    </Button>\n  );\n};\n\nCustomButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default CustomButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    width: 200,\n    padding: 20,\n  },\n\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  accent: {\n    color: 'green',\n  },\n\n  header: {\n    color: 'red',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport useStyles from './styles';\n\nconst GhostCard = ({ data, selectedEvidences }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const css = useStyles();\n\n  const {\n    name, strength, weakness, evidences,\n  } = data;\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return (() => {\n      setIsOpen(false);\n    });\n  }, []);\n\n  return (\n    <Fade in={isOpen} timeout={1000}>\n      <Box className={css.root}>\n        <Typography variant=\"h4\" className={css.header}>{name}</Typography>\n        <Typography variant=\"h6\" color=\"secondary\">Evidences</Typography>\n        {\n          evidences.map((el) => (\n            <Box key={el}>\n              <Typography className={selectedEvidences.includes(el) ? css.accent : ''}>{el}</Typography>\n            </Box>\n          ))\n        }\n        <Typography variant=\"h6\">Strength</Typography>\n        <Typography className={css.content}>{strength}</Typography>\n        <Typography variant=\"h6\">Weakness</Typography>\n        <Typography className={css.content}>{weakness}</Typography>\n      </Box>\n    </Fade>\n  );\n};\n\nGhostCard.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    evidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n    strength: PropTypes.string.isRequired,\n    weakness: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GhostCard;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 20px',\n    flexWrap: 'wrap',\n  },\n\n  evidencesButtonsWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px px',\n    flexWrap: 'wrap',\n  },\n\n  ghostsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: '0 50px',\n  },\n\n  noEvidenceWrapper: {\n    padding: 50,\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n\n  sessionControls: {\n    display: 'flex',\n    height: 40,\n    width: '100%',\n    background: 'rgba(33, 33, 33, .6)',\n    justifyContent: 'flex-end',\n    position: 'fixed',\n    zIndex: 10,\n  },\n\n  sessionIdWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: 5,\n  },\n}));\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clipboardCopy from 'clipboard-copy';\n\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, TEMPERATURE as TEMPERATURE_QUEST,\n  CRUCIFIX, EVENT, MOTION, PHOTO, SINK, SMUDGE,\n} from '../../data/quests';\n\nimport { pickerStateSelector, sessionIdSelector } from '../../selectors';\n\nimport {\n  updateGhostName, filterGhosts, updateSelectedQuests,\n  resetPicker, updateAnswersEveryoneButton,\n} from '../../actions';\n\nimport CustomButton from './Buttons/CustomButton';\nimport GhostCard from './GhostCard';\n\nimport useStyles from './styles';\n\nconst Picker = ({ changePage, resetSession }) => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const pickerState = useSelector((state) => pickerStateSelector(state));\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n\n  const [copyHintText, setCopyHintText] = useState('Click to copy');\n\n  const handleGhostNameChange = (name) => {\n    dispatch(updateGhostName(name));\n  };\n\n  const handleEvidenceButtonClick = (evidence, isActive) => {\n    dispatch(filterGhosts(evidence, isActive));\n  };\n\n  const handleQuestButtonClick = (quest, isActive) => {\n    dispatch(updateSelectedQuests(quest, isActive));\n  };\n\n  const handleAnswersEveryoneButton = (text, isActive) => {\n    dispatch(updateAnswersEveryoneButton(isActive));\n  };\n\n  const handleReset = () => {\n    dispatch(resetPicker());\n  };\n\n  const handleCopySessionIdClick = () => {\n    clipboardCopy(sessionId).then(() => {\n      setCopyHintText('Copied to clipboard!');\n\n      setTimeout(() => {\n        setCopyHintText('Click to copy');\n      }, 5000);\n    });\n  };\n\n  const { ghostName, ghosts, selectedEvidences } = pickerState;\n\n  return (\n    <Slide direction=\"right\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.sessionControls}>\n          {\n            sessionId !== '' && (\n              <Box className={css.sessionIdWrapper}>\n                <Typography>Session id:</Typography>\n                <Tooltip title={copyHintText}>\n                  <Button onClick={handleCopySessionIdClick}>{sessionId}</Button>\n                </Tooltip>\n              </Box>\n            )\n          }\n          <Tooltip title=\"Exit room\">\n            <IconButton onClick={() => resetSession()}>\n              <ExitToAppIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"To questions\">\n            <IconButton onClick={() => changePage('questions')}>\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box className={css.header}>\n          <Typography variant=\"h3\">Ghost Picker</Typography>\n        </Box>\n        <Box className={css.inputWrapper}>\n          <TextField\n            id=\"ghost-name\"\n            label=\"Ghost Name\"\n            variant=\"outlined\"\n            value={ghostName}\n            onChange={(e) => handleGhostNameChange(e.target.value)}\n          />\n          <CustomButton type=\"talksToEveryOne\" color=\"grey\" text=\"Answers everyone\" handleClick={handleAnswersEveryoneButton} />\n          <CustomButton type=\"reset\" color=\"grey\" text=\"Reset\" handleClick={handleReset} />\n        </Box>\n        <Typography variant=\"h4\">Evidences</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"evidence\" color=\"red\" text={EMF} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"green\" text={FINGERPRINTS} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"dodgerblue\" text={TEMPERATURE} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"purple\" text={GHOST_WRITING} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"cadetblue\" text={SPIRIT_BOX} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"brown\" text={GHOST_ORB} handleClick={handleEvidenceButtonClick} />\n        </Box>\n        <Typography variant=\"h4\">Quests</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"quest\" color=\"grey\" text={CRUCIFIX} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EVENT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={MOTION} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={PHOTO} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EMF_QUEST} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SINK} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SMUDGE} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={TEMPERATURE_QUEST} handleClick={handleQuestButtonClick} />\n        </Box>\n        <Box className={css.ghostsWrapper}>\n          {\n            ghosts.map((ghost) => (\n              <GhostCard data={ghost} key={ghost.name} selectedEvidences={selectedEvidences} />\n            ))\n          }\n          {\n            isEmpty(ghosts) ? (\n              <Box className={css.noEvidenceWrapper}>\n                <Typography variant=\"h6\">\n                  No ghosts with such combination of evidences\n                </Typography>\n              </Box>\n            ) : null\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nPicker.propTypes = {\n  changePage: PropTypes.func.isRequired,\n  resetSession: PropTypes.func.isRequired,\n};\n\nexport default Picker;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n    overflowX: 'hidden',\n  },\n\n  sessionControls: {\n    display: 'flex',\n    height: 40,\n    width: '100%',\n    background: 'rgba(33, 33, 33, .6)',\n    justifyContent: 'flex-start',\n    position: 'fixed',\n    zIndex: 10,\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n\n  questionsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    alignItems: 'flex-start',\n    justifyContent: 'space-around',\n    '@media screen and (max-width: 880px)': {\n      justifyContent: 'flex-start',\n    },\n  },\n\n  columnWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    padding: '0 30px',\n  },\n\n  questionHeader: {\n    color: 'red',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from './styles';\n\nimport questions from '../../data/questions.json';\n\nconst Questions = ({ changePage }) => {\n  const css = useStyles();\n\n  return (\n    <Slide direction=\"left\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.sessionControls}>\n          <Tooltip title=\"To Picker\">\n            <IconButton onClick={() => changePage('picker')}>\n              <ArrowBackIosIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box className={css.header}>\n          <Typography variant=\"h3\" className={css.pageLabel}>Questions</Typography>\n        </Box>\n        <Box className={css.questionsWrapper}>\n          {\n            Object.keys(questions).map((key) => (\n              <Fade in timeout={1000} key={key}>\n                <Box className={css.columnWrapper} key={key}>\n                  <Typography variant=\"h4\" className={css.questionHeader} key={key}>{key}</Typography>\n                  {\n                    questions[key].map((el) => (\n                      <Typography key={el}>{el}</Typography>\n                    ))\n                  }\n                </Box>\n              </Fade>\n            ))\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nQuestions.propTypes = {\n  changePage: PropTypes.func.isRequired,\n};\n\nexport default Questions;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles({\n  active: {\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    zIndex: 20,\n    backgroundColor: 'rgba(0, 0, 0, .6)',\n  },\n\n  disabled: {\n    display: 'none',\n  },\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { loaderStateSelector } from '../../selectors';\n\nimport useStyles from './styles';\n\nconst Loader = () => {\n  const css = useStyles();\n  const isShown = useSelector((state) => loaderStateSelector(state));\n\n  const selectorStyle = isShown ? css.active : css.disabled;\n\n  return (\n    <div className={selectorStyle}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    minHeight: '100%',\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '10px 20px 10px 20px',\n  },\n\n  submitButton: {\n    marginTop: 5,\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { isEmpty } from 'lodash';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Loader from '../Loader';\n\nimport { enterApp, showLoader, hideLoader } from '../../actions';\nimport { getSessionId, setSessionId, generateUuid } from '../../utils';\nimport firebaseDataService from '../../services/firebaseData';\n\nimport useStyles from './styles';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const [sessionId, changeSessionId] = useState('');\n  const [session, setSession] = useState({});\n  const [error, setError] = useState(null);\n  const [isJoinButtonPressed, setIsJoinButtonPressed] = useState(false);\n\n  const sessionIdCookie = getSessionId();\n\n  useEffect(() => {\n    if (sessionIdCookie) {\n      dispatch(enterApp('picker', sessionIdCookie));\n    }\n  }, [dispatch, sessionIdCookie]);\n\n  useEffect(() => {\n    if (session && !isEmpty(session)) {\n      setSessionId(sessionId);\n      dispatch(enterApp('picker', sessionId));\n    }\n  });\n\n  useEffect(() => {\n    if (!session) {\n      setError('Session not found');\n    }\n  }, [session]);\n\n  const validate = () => {\n    if (sessionId.length !== 8) {\n      setError('Session id consists of 8 symbols');\n      return false;\n    }\n\n    if (!(/^[0-9A-D]+$/).test(sessionId)) {\n      setError('Wrong ID format');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSessionIdChange = (value) => {\n    setSession({});\n    setError(null);\n    changeSessionId(value);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    const id = generateUuid();\n    dispatch(enterApp('picker', id));\n    setSessionId(id);\n  };\n\n  const handleClickJoin = (state) => {\n    setIsJoinButtonPressed(state);\n  };\n\n  const handleJoinSession = () => {\n    if (validate()) {\n      dispatch(showLoader());\n      firebaseDataService.getSessionById(sessionId).then((data) => {\n        dispatch(hideLoader());\n        setSession(data.val());\n      });\n    }\n  };\n\n  const handleSoloLobby = () => {\n    setSessionId('');\n    dispatch(enterApp('picker', ''));\n  };\n\n  return (\n    <Box className={css.wrapper}>\n      {\n        isJoinButtonPressed ? (\n          <Box className={css.inputWrapper}>\n            <TextField\n              id=\"sessionID\"\n              label=\"Session ID\"\n              variant=\"outlined\"\n              value={sessionId}\n              error={!!error}\n              helperText={error}\n              onChange={(e) => handleSessionIdChange(e.target.value)}\n            />\n            <Button className={css.submitButton} onClick={handleJoinSession}>Join</Button>\n            <Button\n              className={css.submitButton}\n              onClick={() => handleClickJoin(false)}\n            >\n              Back\n            </Button>\n          </Box>\n        ) : (\n          <Box className={css.inputWrapper}>\n            <Button\n              className={css.submitButton}\n              onClick={handleCreateClick}\n            >\n              Create online lobby\n            </Button>\n            <Button\n              className={css.submitButton}\n              onClick={() => handleClickJoin(true)}\n            >\n              Join online lobby\n            </Button>\n            <Button\n              className={css.submitButton}\n              onClick={handleSoloLobby}\n            >\n              Enter solo lobby\n            </Button>\n          </Box>\n        )\n      }\n      <Loader />\n    </Box>\n  );\n};\n\nexport default Login;\n","// import { createMuiTheme } from '@material-ui/core/styles';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n\n    primary: {\n      main: grey[900],\n    },\n\n    secondary: {\n      main: grey[50],\n    },\n  },\n\n  overrides: {\n    MuiTypography: {\n      body1: {\n        fontFamily: 'SyneMono',\n        '@media screen and (max-width: 1000px)': {\n        },\n      },\n\n      h3: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h4: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h5: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h6: {\n        fontFamily: 'Teko-Medium',\n      },\n    },\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  changePage, resetSession, setPickerState,\n} from '../actions';\n\nimport { pageSelector, sessionIdSelector, sessionKeySelector } from '../selectors';\n\nimport { resetSessionId } from '../utils';\n\nimport Picker from './Picker';\nimport Questions from './Questions';\nimport Login from './Login';\n\nimport theme from './theme';\nimport firebaseDataService from '../services/firebaseData';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const page = useSelector((state) => pageSelector(state));\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n  const sessionKey = useSelector((state) => sessionKeySelector(state));\n\n  useEffect(() => {\n    const onAppExit = () => dispatch(resetSession());\n\n    window.addEventListener('beforeunload', onAppExit);\n\n    return () => {\n      window.removeEventListener('beforeunload', onAppExit);\n    };\n  }, [dispatch, sessionId]);\n\n  useEffect(() => {\n    if (sessionKey) {\n      firebaseDataService.getRef().child(sessionKey).on('value', (data) => {\n        dispatch(setPickerState(data.val()));\n      });\n    }\n  }, [dispatch, sessionId, sessionKey]);\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const handleSessionReset = () => {\n    resetSessionId();\n    dispatch(resetSession());\n  };\n\n  const renderPage = () => {\n    switch (page) {\n      case 'picker':\n        return (\n          <Picker\n            changePage={handleChangePage}\n            resetSession={handleSessionReset}\n          />\n        );\n      case 'questions':\n        return <Questions changePage={handleChangePage} />;\n      default:\n        return (\n          <Login />\n        );\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {renderPage()}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './store';\n\nimport App from './components/App';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}