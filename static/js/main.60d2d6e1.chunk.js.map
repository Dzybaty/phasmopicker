{"version":3,"sources":["firebase.js","actions/index.js","reducers/app.js","data/evidences.js","data/ghosts.js","data/quests.js","utils/session.js","utils/evidences.js","utils/misc.js","reducers/picker.js","constants/index.js","reducers/loader.js","reducers/index.js","services/firebaseData.js","selectors/index.js","sagas/index.js","store.js","components/LangSwitch/styles.js","components/LangSwitch/LangSwitch.jsx","components/Header/styles.js","components/Header/index.jsx","components/Picker/Buttons/styles.js","components/Picker/Buttons/CustomButton.jsx","components/Picker/Buttons/EvidenceButton.jsx","components/Picker/GhostCard/styles.js","components/Picker/GhostCard/index.jsx","components/Picker/Buttons/QuestButton.jsx","components/Picker/styles.js","components/Picker/index.jsx","data/questions.js","components/Questions/styles.js","components/Questions/index.jsx","components/Loader/styles.js","components/Loader/index.jsx","components/Login/styles.js","components/Login/index.jsx","components/theme.js","components/App.jsx","index.jsx"],"names":["analytics","enterApp","page","sessionId","type","setSessionKey","sessionKey","setClientId","clientId","changePage","setPickerState","data","key","setAppLang","newLang","defaultState","lang","app","state","action","EMF","DOTS","localizedMessageId","color","ghosts","name","evidences","strength","weakness","cookies","Cookies","setSessionId","value","set","maxAge","getSessionById","id","objects","find","el","saveUserLanguage","getUserLanguage","langFromCookies","get","navigator","language","userLanguage","split","getEvidenceNameByKey","evidence","EVIDENCES","e","filterGhostsByEvidences","selectedEvidences","excludedEvidences","filteredBySelected","filter","ghost","difference","length","intersection","generateUuid","customAlphabet","nanoid","generateTimestamp","moment","utc","format","evidenceButtons","forEach","prepareDefaultEvidenceState","questButtons","quests","QUESTS","quest","prepareDefaultQuestState","talksToEveryOne","ghostName","clients","picker","status","updatedButtonsState","filteredGhosts","push","remove","isActive","loader","combineReducers","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","database","ref","orderByChild","equalTo","once","session","last_updated","child","update","pageSelector","sessionIdSelector","sessionKeySelector","clientIdSelector","clientsSelector","buttonStatusSelector","pickerStateSelector","removeSession","handlePickerChange","init","updateUserLang","rootSaga","updateDebounced","debounce","firebaseDataService","updateSession","createPickerStateObject","call","val","Object","keys","put","select","objectToStore","createSession","newSessionKey","userLang","takeEvery","takeLatest","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","applyMiddleware","run","makeStyles","wrapper","height","alignItems","menuButton","borderRadius","LangSwitch","useState","anchorEl","setAnchorEl","css","useStyles","dispatch","useDispatch","formatMessage","useIntl","handleClose","handleMenuItemClick","className","Tooltip","title","IconButton","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","dense","header","display","width","background","justifyContent","position","zIndex","navWrapper","flexWrap","sessionWrapper","sessionIdWrapper","marginRight","headerButton","btnActive","borderBottom","Header","resetSession","useSelector","copyHintText","setCopyHintText","handleChangePage","newPage","Typography","Button","clipboardCopy","then","setTimeout","button","props","margin","buttonSelected","buttonExcluded","CustomButton","text","handleClick","EvidenceButton","currentEvidenceState","evidenceState","setEvidenceState","buttonStyle","setButtonStyle","useEffect","root","padding","content","accent","subHeader","GhostCard","isOpen","setIsOpen","Fade","in","timeout","Box","variant","map","includes","QuestButton","palette","flexDirection","minHeight","primary","main","contrastText","inputWrapper","evidencesButtonsWrapper","ghostsWrapper","alignContent","noEvidenceWrapper","marginTop","Picker","pickerState","logEvent","onUnload","window","addEventListener","removeEventListener","getRef","on","handleEvidenceButtonClick","filterGhosts","handleQuestButtonClick","updateSelectedQuests","Slide","direction","mountOnEnter","unmountOnExit","TextField","label","onChange","target","updateGhostName","updateAnswersEveryoneButton","isEmpty","SPIRIT_BOX","category","questions","OUIJA_BOARD","overflowX","pageLabel","questionsWrapper","toolWrapper","toolHeader","textAlign","toolContent","categoryTitle","categoryWrapper","Questions","renderCategory","useCallback","block","q","QUESTIONS","activeAbsolute","backgroundColor","activeBox","disabled","Loader","isShown","loaderStateSelector","wrapperStyle","LinearProgress","CircularProgress","subWrapper","submitButton","langSwitchWrapper","right","bottom","Login","changeSessionId","setSession","error","setError","isJoinButtonPressed","setIsJoinButtonPressed","sessionIdCookie","handleClickJoin","helperText","test","Divider","preventDefault","createMuiTheme","grey","secondary","overrides","MuiTypography","body1","fontFamily","h3","h4","h5","h6","App","currentLangSelector","handleSessionReset","messages","langEN","langRU","setUpMessagesLocale","locale","defaultLocale","ThemeProvider","theme","renderPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60d2d6e1.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\nimport { isDevEnv } from './utils';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_API_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSANGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(config);\n\n// eslint-disable-next-line import/no-mutable-exports\nlet analytics;\n\nif (isDevEnv()) {\n  analytics = {\n    logEvent: (eventName, options) => console.log('Mocked analytics request:', eventName, options),\n  };\n} else {\n  analytics = firebase.analytics();\n}\n\nexport const firebaseDB = firebase.database();\nexport { analytics };\n","export const INIT_APP = 'INIT_APP';\nexport const initApp = () => ({ type: INIT_APP });\n\nexport const ENTER_APP = 'ENTER_APP';\nexport const enterApp = (page, sessionId) => ({\n  type: ENTER_APP,\n  page,\n  sessionId,\n});\n\nexport const SET_SESSION_KEY = 'SET_SESSION_KEY';\nexport const setSessionKey = (sessionKey) => ({\n  type: SET_SESSION_KEY,\n  sessionKey,\n});\n\nexport const SET_CLIENT_ID = 'SET_CLIENT_ID';\nexport const setClientId = (clientId) => ({\n  type: SET_CLIENT_ID,\n  clientId,\n});\n\nexport const RESET_SESSION = 'RESET_SESSION';\nexport const resetSession = () => ({ type: RESET_SESSION });\n\nexport const RESET_SESSION_COMPLETE = 'RESET_SESSION_COMPLETE';\nexport const resetSessionComplete = () => ({ type: RESET_SESSION_COMPLETE });\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const changePage = (page) => ({\n  type: CHANGE_PAGE,\n  page,\n});\n\nexport const FILTER_GHOSTS = 'FILTER_GHOSTS';\nexport const filterGhosts = (evidence, status) => ({\n  type: FILTER_GHOSTS,\n  evidence,\n  status,\n});\n\nexport const UPDATE_SELECTED_QUESTS = 'UPDATE_SELECTED_QUESTS';\nexport const updateSelectedQuests = (quest, isActive) => ({\n  type: UPDATE_SELECTED_QUESTS,\n  quest,\n  isActive,\n});\n\nexport const UPDATE_GHOST_NAME = 'UPDATE_GHOST_NAME';\nexport const updateGhostName = (name) => ({\n  type: UPDATE_GHOST_NAME,\n  name,\n});\n\nexport const UPDATE_ANSWERS_EVERYONE_BUTTON = 'UPDATE_ANSWERS_EVERYONE_BUTTON';\nexport const updateAnswersEveryoneButton = (isActive) => ({\n  type: UPDATE_ANSWERS_EVERYONE_BUTTON,\n  isActive,\n});\n\nexport const RESET_PICKER = 'RESET_PICKER';\nexport const resetPicker = () => ({ type: RESET_PICKER });\n\nexport const SET_PICKER_STATE = 'SET_PICKER_STATE';\nexport const setPickerState = (data, key) => ({\n  type: SET_PICKER_STATE,\n  data,\n  key,\n});\n\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const showLoader = () => ({ type: SHOW_LOADER });\n\nexport const HIDE_LOADER = 'HIDE_LOADER';\nexport const hideLoader = () => ({ type: HIDE_LOADER });\n\nexport const SET_APP_LANG = 'SET_APP_LANG';\nexport const setAppLang = (newLang) => ({ type: SET_APP_LANG, newLang });\n","import {\n  CHANGE_PAGE, ENTER_APP, RESET_SESSION_COMPLETE,\n  SET_SESSION_KEY, SET_CLIENT_ID, SET_APP_LANG,\n} from '../actions';\n\nconst defaultState = {\n  page: '',\n  sessionId: '',\n  sessionKey: null,\n  clientId: null,\n  lang: 'en',\n};\n\nconst app = (state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_PAGE: {\n      const { page } = action;\n\n      return ({\n        ...state,\n        page,\n      });\n    }\n\n    case ENTER_APP: {\n      const { page, sessionId } = action;\n\n      return ({\n        ...state,\n        page,\n        sessionId,\n      });\n    }\n\n    case SET_CLIENT_ID: {\n      const { clientId } = action;\n\n      return {\n        ...state,\n        clientId,\n      };\n    }\n\n    case RESET_SESSION_COMPLETE: {\n      return defaultState;\n    }\n\n    case SET_SESSION_KEY: {\n      const { sessionKey } = action;\n\n      return {\n        ...state,\n        sessionKey,\n      };\n    }\n\n    case SET_APP_LANG: {\n      const { newLang } = action;\n\n      return {\n        ...state,\n        lang: newLang,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","export const EMF = 'EMF';\nexport const FINGERPRINTS = 'FINGERPRINTS';\nexport const TEMPERATURE = 'TEMPERATURE';\nexport const GHOST_WRITING = 'GHOST_WRITING';\nexport const SPIRIT_BOX = 'SPIRIT_BOX';\nexport const GHOST_ORB = 'GHOST_ORB';\nexport const DOTS = 'DOTS';\n\nexport default [\n  {\n    key: EMF,\n    localizedMessageId: 'evidence.emf',\n    color: 'red',\n  },\n  {\n    key: FINGERPRINTS,\n    localizedMessageId: 'evidence.fingerprints',\n    color: 'green',\n  },\n  {\n    key: TEMPERATURE,\n    localizedMessageId: 'evidence.temperature',\n    color: 'dodgerblue',\n  },\n  {\n    key: GHOST_WRITING,\n    localizedMessageId: 'evidence.ghostWriting',\n    color: 'purple',\n  },\n  {\n    key: SPIRIT_BOX,\n    localizedMessageId: 'evidence.spiritBox',\n    color: 'cadetblue',\n  },\n  {\n    key: GHOST_ORB,\n    localizedMessageId: 'evidence.ghostOrb',\n    color: 'brown',\n  },\n  {\n    key: DOTS,\n    localizedMessageId: 'evidence.dots',\n    color: 'white',\n  },\n];\n","import {\n  EMF, FINGERPRINTS, TEMPERATURE, DOTS,\n  GHOST_WRITING, GHOST_ORB, SPIRIT_BOX,\n} from './evidences';\n\nconst ghosts = [\n  {\n    name: 'ghost.banshee.name',\n    evidences: [FINGERPRINTS, GHOST_ORB, DOTS],\n    strength: 'ghost.banshee.strength',\n    weakness: 'ghost.banshee.weakness',\n  },\n\n  {\n    name: 'ghost.demon.name',\n    evidences: [FINGERPRINTS, GHOST_WRITING, TEMPERATURE],\n    strength: 'ghost.demon.strength',\n    weakness: 'ghost.demon.weakness',\n  },\n\n  {\n    name: 'ghost.jinn.name',\n    evidences: [EMF, FINGERPRINTS, TEMPERATURE],\n    strength: 'ghost.jinn.strength',\n    weakness: 'ghost.jinn.weakness',\n  },\n\n  {\n    name: 'ghost.mare.name',\n    evidences: [SPIRIT_BOX, GHOST_ORB, GHOST_WRITING],\n    strength: 'ghost.mare.strength',\n    weakness: 'ghost.mare.weakness',\n  },\n\n  {\n    name: 'ghost.oni.name',\n    evidences: [EMF, TEMPERATURE, DOTS],\n    strength: 'ghost.oni.strength',\n    weakness: 'ghost.oni.weakness',\n  },\n\n  {\n    name: 'ghost.phantom.name',\n    evidences: [SPIRIT_BOX, FINGERPRINTS, DOTS],\n    strength: 'ghost.phantom.strength',\n    weakness: 'ghost.phantom.weakness',\n  },\n\n  {\n    name: 'ghost.poltergeist.name',\n    evidences: [SPIRIT_BOX, FINGERPRINTS, GHOST_WRITING],\n    strength: 'ghost.poltergeist.strength',\n    weakness: 'ghost.poltergeist.weakness',\n  },\n\n  {\n    name: 'ghost.revenant.name',\n    evidences: [GHOST_ORB, GHOST_WRITING, TEMPERATURE],\n    strength: 'ghost.revenant.strength',\n    weakness: 'ghost.revenant.weakness',\n  },\n\n  {\n    name: 'ghost.shade.name',\n    evidences: [EMF, GHOST_WRITING, TEMPERATURE],\n    strength: 'ghost.shade.strength',\n    weakness: 'ghost.shade.weakness',\n  },\n\n  {\n    name: 'ghost.spirit.name',\n    evidences: [EMF, SPIRIT_BOX, GHOST_WRITING],\n    strength: 'ghost.spirit.strength',\n    weakness: 'ghost.spirit.weakness',\n  },\n\n  {\n    name: 'ghost.wraith.name',\n    evidences: [EMF, SPIRIT_BOX, DOTS],\n    strength: 'ghost.wraith.strength',\n    weakness: 'ghost.wraith.weakness',\n  },\n\n  {\n    name: 'ghost.yurei.name',\n    evidences: [GHOST_ORB, TEMPERATURE, DOTS],\n    strength: 'ghost.yurei.strength',\n    weakness: 'ghost.yurei.weakness',\n  },\n\n  {\n    name: 'ghost.yokai.name',\n    evidences: [SPIRIT_BOX, GHOST_ORB, DOTS],\n    strength: 'ghost.yokai.strength',\n    weakness: 'ghost.yokai.weakness',\n  },\n\n  {\n    name: 'ghost.hantu.name',\n    evidences: [FINGERPRINTS, GHOST_ORB, TEMPERATURE],\n    strength: 'ghost.hantu.strength',\n    weakness: 'ghost.hantu.weakness',\n  },\n\n  {\n    name: 'ghost.goryo.name',\n    evidences: [EMF, FINGERPRINTS, DOTS],\n    strength: 'ghost.goryo.strength',\n    weakness: 'ghost.goryo.weakness',\n  },\n\n  {\n    name: 'ghost.myling.name',\n    evidences: [EMF, FINGERPRINTS, GHOST_WRITING],\n    strength: 'ghost.myling.strength',\n    weakness: 'ghost.myling.weakness',\n  },\n];\n\nexport default ghosts;\n","const PHOTO = 'PHOTO';\nconst EVENT = 'EVENT';\nconst MOTION = 'MOTION';\nconst TEMPERATURE = 'TEMPERATURE';\nconst CRUCIFIX = 'CRUCIFIX';\nconst EMF = 'EMF';\nconst SMUDGE = 'SMUDGE';\nconst CANDLE = 'CANDLE';\nconst SALT = 'SALT';\nconst SANITY = 'SANITY';\nconst HUNT = 'HUNT';\nconst REPEL = 'REPEL';\n\nexport default [\n  {\n    key: PHOTO,\n    localizedMessageId: 'quests.photo',\n  },\n  {\n    key: EVENT,\n    localizedMessageId: 'quests.event',\n  },\n  {\n    key: MOTION,\n    localizedMessageId: 'quests.motion',\n  },\n  {\n    key: TEMPERATURE,\n    localizedMessageId: 'quests.temperature',\n  },\n  {\n    key: CRUCIFIX,\n    localizedMessageId: 'quests.crucifix',\n  },\n  {\n    key: EMF,\n    localizedMessageId: 'quests.emf',\n  },\n  {\n    key: SMUDGE,\n    localizedMessageId: 'quests.smudge',\n  },\n  {\n    key: CANDLE,\n    localizedMessageId: 'quests.candle',\n  },\n  {\n    key: SALT,\n    localizedMessageId: 'quests.salt',\n  },\n  {\n    key: SANITY,\n    localizedMessageId: 'quests.sanity',\n  },\n  {\n    key: HUNT,\n    localizedMessageId: 'quests.hunt',\n  },\n  {\n    key: REPEL,\n    localizedMessageId: 'quests.repel',\n  },\n];\n","import { find } from 'lodash';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const setSessionId = (value) => {\n  cookies.set('sessionId', value, { maxAge: 28800 });\n};\n\nexport const getSessionId = () => cookies.get('sessionId');\n\nexport const resetSessionId = () => cookies.remove('sessionId');\n\nexport const getSessionById = (id, objects) => (\n  find(objects, (el) => el.sessionId === id) || null\n);\n\nexport const saveUserLanguage = (lang) => {\n  cookies.set('userLang', lang, { maxAge: 28800 });\n};\n\nexport const getUserLanguage = () => {\n  const langFromCookies = cookies.get('userLang');\n\n  if (langFromCookies) {\n    return langFromCookies;\n  }\n\n  const fullLang = navigator.language || navigator.userLanguage;\n  const lang = fullLang.split('-');\n  return lang[0];\n};\n","import EVIDENCES from '../data/evidences';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const getEvidenceNameByKey = (key) => {\n  const evidence = EVIDENCES.find((e) => e.key === key);\n  if (evidence) {\n    return evidence.localizedMessageId;\n  }\n\n  return undefined;\n};\n","import { difference, filter, intersection } from 'lodash';\nimport { customAlphabet } from 'nanoid';\nimport moment from 'moment';\n\nexport const filterGhostsByEvidences = (ghosts, selectedEvidences, excludedEvidences) => {\n  const filteredBySelected = filter(\n    ghosts,\n    (ghost) => (difference(selectedEvidences, ghost.evidences).length === 0),\n  );\n  return filter(\n    filteredBySelected,\n    (ghost) => intersection(excludedEvidences, ghost.evidences).length === 0,\n  );\n};\n\nexport const generateUuid = () => {\n  const nanoid = customAlphabet('0123456789', 6);\n  return nanoid();\n};\n\nexport const generateTimestamp = () => moment.utc().format();\n\nexport const isDevEnv = () => process.env.REACT_APP_ENV === 'dev';\n","import { get, remove } from 'lodash';\n\nimport {\n  FILTER_GHOSTS, UPDATE_SELECTED_QUESTS,\n  UPDATE_GHOST_NAME, RESET_PICKER, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  SET_PICKER_STATE,\n} from '../actions';\n\nimport { EVIDENCE_STATUS_INIT, EVIDENCE_STATUS_SELECTED, EVIDENCE_STATUS_EXCLUDED } from '../constants';\n\nimport ghosts from '../data/ghosts';\n\nimport EVIDENCES from '../data/evidences';\nimport QUESTS from '../data/quests';\n\nimport { filterGhostsByEvidences } from '../utils';\n\nconst prepareDefaultEvidenceState = () => {\n  let evidences;\n  EVIDENCES.forEach((evidence) => {\n    evidences = {\n      ...evidences,\n      [evidence.key]: 'init',\n    };\n  });\n\n  return evidences;\n};\n\nconst prepareDefaultQuestState = () => {\n  let quests;\n  QUESTS.forEach((quest) => {\n    quests = {\n      ...quests,\n      [quest.key]: false,\n    };\n  });\n\n  return quests;\n};\n\nconst defaultState = {\n  selectedEvidences: [],\n  excludedEvidences: [],\n  ghosts,\n  evidenceButtons: prepareDefaultEvidenceState(),\n  questButtons: prepareDefaultQuestState(),\n  talksToEveryOne: false,\n  ghostName: '',\n  clients: [],\n};\n\nconst picker = (state = defaultState, action) => {\n  switch (action.type) {\n    case FILTER_GHOSTS: {\n      const { evidence, status } = action;\n      const { selectedEvidences, excludedEvidences } = state;\n\n      const updatedButtonsState = {\n        ...state.evidenceButtons,\n        [evidence]: status,\n      };\n\n      let filteredGhosts = [];\n\n      if (status === EVIDENCE_STATUS_SELECTED) {\n        selectedEvidences.push(evidence);\n\n        filteredGhosts = filterGhostsByEvidences(\n          ghosts, selectedEvidences, excludedEvidences,\n        );\n      }\n\n      if (status === EVIDENCE_STATUS_EXCLUDED) {\n        remove(selectedEvidences, (el) => el === evidence);\n        excludedEvidences.push(evidence);\n\n        filteredGhosts = filterGhostsByEvidences(\n          ghosts, selectedEvidences, excludedEvidences,\n        );\n      }\n\n      if (status === EVIDENCE_STATUS_INIT) {\n        remove(excludedEvidences, (el) => el === evidence);\n\n        filteredGhosts = filterGhostsByEvidences(\n          ghosts, selectedEvidences, excludedEvidences,\n        );\n      }\n\n      return {\n        ...state,\n        ghosts: filteredGhosts,\n        selectedEvidences,\n        evidenceButtons: updatedButtonsState,\n      };\n    }\n\n    case UPDATE_GHOST_NAME: {\n      const { name } = action;\n\n      return {\n        ...state,\n        ghostName: name,\n      };\n    }\n\n    case UPDATE_SELECTED_QUESTS: {\n      const { quest, isActive } = action;\n\n      return {\n        ...state,\n        questButtons: {\n          ...state.questButtons,\n          [quest]: isActive,\n        },\n      };\n    }\n\n    case UPDATE_ANSWERS_EVERYONE_BUTTON: {\n      const { isActive } = action;\n\n      return {\n        ...state,\n        talksToEveryOne: isActive,\n      };\n    }\n\n    case RESET_PICKER: {\n      return {\n        ...defaultState,\n        selectedEvidences: [],\n        excludedEvidences: [],\n      };\n    }\n\n    case SET_PICKER_STATE: {\n      const { data } = action;\n      const selectedEvidences = get(data, 'selectedEvidences', []);\n      const excludedEvidences = get(data, 'excludedEvidences', []);\n\n      return {\n        ...state,\n        ...data,\n        selectedEvidences,\n        excludedEvidences,\n        ghosts: filterGhostsByEvidences(ghosts, selectedEvidences, excludedEvidences),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default picker;\n","export const EVIDENCE_STATUS_INIT = 'init';\nexport const EVIDENCE_STATUS_SELECTED = 'selected';\nexport const EVIDENCE_STATUS_EXCLUDED = 'excluded';\n","import {\n  SHOW_LOADER, HIDE_LOADER,\n} from '../actions';\n\nconst loader = (state = false, action) => {\n  switch (action.type) {\n    case SHOW_LOADER: {\n      return true;\n    }\n\n    case HIDE_LOADER: {\n      return false;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default loader;\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport picker from './picker';\nimport loader from './loader';\n\nexport default combineReducers({\n  app,\n  picker,\n  loader,\n});\n","import { firebaseDB } from '../firebase';\nimport { generateTimestamp } from '../utils';\n\nclass FirebaseDataService {\n  getSessionById(sessionId) {\n    return firebaseDB.ref()\n      .orderByChild('sessionId')\n      .equalTo(sessionId)\n      .once('value');\n  }\n\n  createSession(session) {\n    return firebaseDB.ref().push({\n      ...session,\n      last_updated: generateTimestamp(),\n    });\n  }\n\n  updateSession(key, value) {\n    return firebaseDB.ref().child(key).update({\n      ...value,\n      last_updated: generateTimestamp(),\n    });\n  }\n\n  removeSession(key) {\n    return firebaseDB.ref().child(key).remove();\n  }\n\n  getRef() {\n    return firebaseDB.ref();\n  }\n}\n\nexport default new FirebaseDataService();\n","export const pageSelector = (state) => state.app.page;\n\nexport const sessionIdSelector = (state) => state.app.sessionId;\n\nexport const sessionKeySelector = (state) => state.app.sessionKey;\n\nexport const clientIdSelector = (state) => state.app.clientId;\n\nexport const selectedEvidencesSelector = (state) => state.picker.selectedEvidences;\n\nexport const questButtonsStateSelector = (state) => state.picker.questButtons;\n\nexport const clientsSelector = (state) => state.picker.clients;\n\nexport const buttonStatusSelector = (state, type, name) => {\n  switch (type) {\n    case 'evidence': {\n      return state.picker.evidenceButtons[name];\n    }\n\n    case 'quest': {\n      return state.picker.questButtons[name];\n    }\n\n    case 'talksToEveryOne': {\n      return state.picker.talksToEveryOne;\n    }\n\n    default: {\n      return false;\n    }\n  }\n};\n\nexport const loaderStateSelector = (state) => state.loader;\n\nexport const pickerStateSelector = (state) => state.picker;\n\nexport const currentLangSelector = (state) => state.app.lang;\n","import {\n  call, put, takeEvery, select, takeLatest,\n} from 'redux-saga/effects';\n\nimport { get, remove, debounce } from 'lodash';\n\nimport firebaseDataService from '../services/firebaseData';\nimport {\n  sessionKeySelector, pickerStateSelector,\n  sessionIdSelector, clientIdSelector, clientsSelector,\n} from '../selectors';\n\nimport {\n  getSessionById, generateUuid, getUserLanguage, saveUserLanguage,\n} from '../utils';\n\nimport {\n  ENTER_APP, RESET_SESSION, UPDATE_ANSWERS_EVERYONE_BUTTON, INIT_APP, SET_APP_LANG,\n  UPDATE_SELECTED_QUESTS, UPDATE_GHOST_NAME, FILTER_GHOSTS, RESET_PICKER,\n  setPickerState, resetSessionComplete, resetPicker, setSessionKey,\n  setClientId, setAppLang,\n} from '../actions';\n\nconst updateDebounced = debounce(firebaseDataService.updateSession, 800);\n\nconst createPickerStateObject = (picker, sessionId) => {\n  const {\n    selectedEvidences, evidenceButtons, questButtons,\n    talksToEveryOne, ghostName, excludedEvidences,\n  } = picker;\n\n  return {\n    sessionId,\n    selectedEvidences,\n    excludedEvidences,\n    evidenceButtons,\n    questButtons,\n    talksToEveryOne,\n    ghostName,\n  };\n};\n\nfunction* enterApp(action) {\n  const { sessionId } = action;\n  const clientId = generateUuid();\n\n  if (sessionId !== '') {\n    const data = yield call(firebaseDataService.getSessionById, sessionId);\n    const session = getSessionById(sessionId, data.val());\n\n    if (session) {\n      const key = Object.keys(data.val())[0];\n      const clients = get(session, 'clients', []);\n      clients.push(clientId);\n\n      yield call(\n        firebaseDataService.updateSession,\n        key,\n        {\n          ...session,\n          clients,\n        },\n      );\n\n      yield put(setPickerState(session));\n      yield put(setSessionKey(key));\n    } else {\n      const picker = yield select(pickerStateSelector);\n      const objectToStore = createPickerStateObject(picker, sessionId);\n\n      const newSessionKey = yield call(\n        firebaseDataService.createSession,\n        {\n          ...objectToStore,\n          clients: [clientId],\n        },\n      );\n      yield put(setSessionKey(newSessionKey.key));\n    }\n\n    yield put(setClientId(clientId));\n  }\n}\n\nfunction* removeSession() {\n  const sessionId = yield select(sessionIdSelector);\n\n  if (sessionId === '') {\n    yield put(resetSessionComplete());\n    yield put(resetPicker());\n    return;\n  }\n\n  const clientId = yield select(clientIdSelector);\n  const key = yield select(sessionKeySelector);\n  const clients = yield select(clientsSelector);\n\n  if (clients.length < 2) {\n    yield call(firebaseDataService.removeSession, key);\n  } else {\n    const picker = yield select(pickerStateSelector);\n    const objectToStore = createPickerStateObject(picker, sessionId);\n\n    remove(clients, (el) => el === clientId);\n\n    yield call(\n      firebaseDataService.updateSession,\n      key,\n      {\n        ...objectToStore,\n        clients,\n      },\n    );\n  }\n\n  yield put(resetSessionComplete());\n  yield put(resetPicker());\n}\n\nfunction* handlePickerChange() {\n  const sessionKey = yield select(sessionKeySelector);\n  const sessionId = yield select(sessionIdSelector);\n  const picker = yield select(pickerStateSelector);\n\n  const objectToStore = createPickerStateObject(picker, sessionId);\n\n  if (sessionKey && sessionId !== '') {\n    yield call(updateDebounced, sessionKey, objectToStore);\n    return;\n  }\n\n  if (!sessionKey && sessionId.length > 0) {\n    const newSessionKey = yield call(firebaseDataService.createSession, objectToStore);\n    yield put(setSessionKey(newSessionKey.key));\n  }\n}\n\nfunction* init() {\n  const userLang = getUserLanguage();\n\n  yield put(setAppLang(userLang));\n}\n\nfunction* updateUserLang(action) {\n  const { newLang } = action;\n\n  yield call(saveUserLanguage, newLang);\n}\n\nfunction* rootSaga() {\n  yield takeEvery(INIT_APP, init);\n  yield takeEvery(SET_APP_LANG, updateUserLang);\n  yield takeEvery(ENTER_APP, enterApp);\n  yield takeEvery(RESET_SESSION, removeSession);\n  yield takeLatest([\n    UPDATE_GHOST_NAME,\n    UPDATE_SELECTED_QUESTS,\n    UPDATE_ANSWERS_EVERYONE_BUTTON,\n    FILTER_GHOSTS,\n    RESET_PICKER,\n  ], handlePickerChange);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\nimport rootSaga from './sagas';\nimport { isDevEnv } from './utils';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    reducer,\n    isDevEnv()\n      ? composeWithDevTools(applyMiddleware(sagaMiddleware))\n      : applyMiddleware(sagaMiddleware),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles({\n  wrapper: {\n    height: '100%',\n    alignItems: 'center',\n  },\n\n  menuButton: {\n    height: '100%',\n    borderRadius: 5,\n  },\n});\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport useStyles from './styles';\nimport { setAppLang } from '../../actions';\n\nconst LangSwitch = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const css = useStyles();\n  const dispatch = useDispatch();\n  const { formatMessage } = useIntl();\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuItemClick = (lang) => {\n    handleClose();\n    dispatch(setAppLang(lang));\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Tooltip title={formatMessage({ id: 'header.tooltip.lang' })}>\n        <IconButton className={css.menuButton} onClick={handleClick}>\n          <LanguageIcon />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem dense onClick={() => handleMenuItemClick('en')}>English</MenuItem>\n        <MenuItem dense onClick={() => handleMenuItemClick('ru')}>Русский</MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nexport default LangSwitch;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles({\n  header: {\n    display: 'flex',\n    height: 40,\n    width: '100%',\n    background: 'rgba(33, 33, 33, .6)',\n    justifyContent: 'space-between',\n    position: 'fixed',\n    zIndex: 10,\n    color: 'white',\n  },\n\n  navWrapper: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n  },\n\n  sessionWrapper: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n  },\n\n  sessionIdWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: 5,\n  },\n\n  headerButton: {\n    borderRadius: 5,\n  },\n\n  btnActive: {\n    color: '#f34423',\n    borderBottom: '2px solid #f34423',\n  },\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clipboardCopy from 'clipboard-copy';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport AssignmentIndOutlinedIcon from '@material-ui/icons/AssignmentIndOutlined';\n\nimport LangSwitch from '../LangSwitch/LangSwitch';\n\nimport { changePage } from '../../actions';\nimport { pageSelector, sessionIdSelector } from '../../selectors';\n\nimport useStyles from './styles';\n\nconst Header = ({ resetSession }) => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n  const { formatMessage } = useIntl();\n\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n  const page = useSelector((state) => pageSelector(state));\n\n  const [copyHintText, setCopyHintText] = useState('Click to copy');\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const handleCopySessionIdClick = () => {\n    clipboardCopy(sessionId).then(() => {\n      setCopyHintText(formatMessage({ id: 'header.tooltip.copied' }));\n\n      setTimeout(() => {\n        setCopyHintText(formatMessage({ id: 'header.tooltip.copy' }));\n      }, 5000);\n    });\n  };\n\n  return (\n    <div className={css.header}>\n      <div className={css.navWrapper}>\n        <Tooltip title={formatMessage({ id: 'header.tooltip.picker' })}>\n          <IconButton onClick={() => handleChangePage('picker')} className={css.headerButton}>\n            <AssignmentIndOutlinedIcon className={page === 'picker' ? css.btnActive : ''} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title={formatMessage({ id: 'header.tooltip.questions' })}>\n          <IconButton onClick={() => handleChangePage('questions')} className={css.headerButton}>\n            <HelpOutlineIcon className={page === 'questions' ? css.btnActive : ''} />\n          </IconButton>\n        </Tooltip>\n        <LangSwitch />\n      </div>\n      <div className={css.sessionWrapper}>\n        {\n          sessionId !== '' && (\n            <div className={css.sessionIdWrapper}>\n              <Typography>\n                {formatMessage({ id: 'header.sessionId' })}\n                :\n              </Typography>\n              <Tooltip title={copyHintText}>\n                <Button\n                  onClick={handleCopySessionIdClick}\n                  className={css.headerButton}\n                >\n                  {sessionId}\n                </Button>\n              </Tooltip>\n            </div>\n          )\n        }\n        <Tooltip title={formatMessage({ id: 'header.tooltip.exit' })}>\n          <IconButton onClick={() => resetSession()} className={css.headerButton}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  resetSession: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  button: {\n    color: (props) => props.color,\n    margin: '0 5px',\n  },\n\n  buttonSelected: {\n    color: (props) => props.color,\n    borderBottom: '1px solid green',\n    margin: '0 5px',\n  },\n\n  buttonExcluded: {\n    color: (props) => props.color,\n    borderBottom: '1px solid grey',\n    margin: '0 5px',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nimport { buttonStatusSelector } from '../../../selectors';\n\nconst CustomButton = ({\n  type, text, handleClick, ...props\n}) => {\n  const css = useStyles(props);\n\n  const isActive = useSelector((state) => buttonStatusSelector(state, type, text));\n\n  return (\n    <Button\n      className={isActive ? css.buttonSelected : css.button}\n      onClick={() => handleClick(text, !isActive)}\n    >\n      {text}\n    </Button>\n  );\n};\n\nCustomButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default CustomButton;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@material-ui/core';\n\nimport { EVIDENCE_STATUS_INIT, EVIDENCE_STATUS_SELECTED, EVIDENCE_STATUS_EXCLUDED } from '../../../constants';\nimport { buttonStatusSelector } from '../../../selectors';\n\nimport useStyles from './styles';\n\nconst EvidenceButton = ({\n  evidence, handleClick, ...props\n}) => {\n  const css = useStyles(props);\n  const { formatMessage } = useIntl();\n\n  const currentEvidenceState = useSelector((state) => buttonStatusSelector(state, 'evidence', evidence.key));\n\n  const [evidenceState, setEvidenceState] = useState(currentEvidenceState);\n  const [buttonStyle, setButtonStyle] = useState(css.button);\n\n  useEffect(() => {\n    setEvidenceState(currentEvidenceState);\n    switch (currentEvidenceState) {\n      case EVIDENCE_STATUS_INIT: {\n        setButtonStyle(css.button);\n        break;\n      }\n      case EVIDENCE_STATUS_SELECTED: {\n        setButtonStyle(css.buttonSelected);\n        break;\n      }\n      case EVIDENCE_STATUS_EXCLUDED: {\n        setButtonStyle(css.buttonExcluded);\n        break;\n      }\n      default: {\n        setButtonStyle(css.button);\n      }\n    }\n  }, [currentEvidenceState, css]);\n\n  const handleButton = () => {\n    switch (evidenceState) {\n      case EVIDENCE_STATUS_INIT: {\n        setEvidenceState(EVIDENCE_STATUS_SELECTED);\n        setButtonStyle(css.buttonSelected);\n        handleClick(evidence.key, EVIDENCE_STATUS_SELECTED);\n        break;\n      }\n      case EVIDENCE_STATUS_SELECTED: {\n        setEvidenceState(EVIDENCE_STATUS_EXCLUDED);\n        setButtonStyle(css.buttonExcluded);\n        handleClick(evidence.key, EVIDENCE_STATUS_EXCLUDED);\n        break;\n      }\n      case EVIDENCE_STATUS_EXCLUDED: {\n        setEvidenceState(EVIDENCE_STATUS_INIT);\n        setButtonStyle(css.button);\n        handleClick(evidence.key, EVIDENCE_STATUS_INIT);\n        break;\n      }\n      default: break;\n    }\n  };\n\n  return (\n    <Button\n      className={buttonStyle}\n      onClick={handleButton}\n    >\n      {formatMessage({ id: evidence.localizedMessageId })}\n    </Button>\n  );\n};\n\nEvidenceButton.propTypes = {\n  evidence: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    localizedMessageId: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  }).isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default EvidenceButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    width: 200,\n    padding: 20,\n    '@media screen and (max-width: 570px)': {\n      width: '100%',\n      padding: '20px 0',\n    },\n  },\n\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  accent: {\n    color: 'green',\n  },\n\n  header: {\n    color: 'red',\n  },\n\n  subHeader: {\n    color: '#fdcf96',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport { getEvidenceNameByKey } from '../../../utils';\n\nimport useStyles from './styles';\n\nconst GhostCard = ({ data, selectedEvidences }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const css = useStyles();\n  const { formatMessage } = useIntl();\n\n  const {\n    name, strength, weakness, evidences,\n  } = data;\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return (() => {\n      setIsOpen(false);\n    });\n  }, []);\n\n  return (\n    <Fade in={isOpen} timeout={1000}>\n      <Box className={css.root}>\n        <Typography variant=\"h4\" className={css.header}>{formatMessage({ id: name })}</Typography>\n        <Typography variant=\"h6\" className={css.subHeader}>{formatMessage({ id: 'ghostCard.evidences' })}</Typography>\n        {\n          evidences.map((el) => (\n            <Box key={el}>\n              <Typography className={selectedEvidences.includes(el) ? css.accent : ''}>\n                {formatMessage({ id: getEvidenceNameByKey(el) })}\n              </Typography>\n            </Box>\n          ))\n        }\n        <Typography variant=\"h6\" className={css.subHeader}>{formatMessage({ id: 'ghostCard.strength' })}</Typography>\n        <Typography className={css.content}>{formatMessage({ id: strength })}</Typography>\n        <Typography variant=\"h6\" className={css.subHeader}>{formatMessage({ id: 'ghostCard.weakness' })}</Typography>\n        <Typography className={css.content}>{formatMessage({ id: weakness })}</Typography>\n      </Box>\n    </Fade>\n  );\n};\n\nGhostCard.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    evidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n    strength: PropTypes.string.isRequired,\n    weakness: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GhostCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nimport { buttonStatusSelector } from '../../../selectors';\n\nconst QuestButton = ({\n  quest, handleClick, ...props\n}) => {\n  const css = useStyles(props);\n  const { formatMessage } = useIntl();\n\n  const isActive = useSelector((state) => buttonStatusSelector(state, 'quest', quest.key));\n\n  return (\n    <Button\n      className={isActive ? css.buttonSelected : css.button}\n      onClick={() => handleClick(quest.key, !isActive)}\n    >\n      {formatMessage({ id: quest.localizedMessageId })}\n    </Button>\n  );\n};\n\nQuestButton.propTypes = {\n  quest: PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    localizedMessageId: PropTypes.string.isRequired,\n  }).isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default QuestButton;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 20px',\n    flexWrap: 'wrap',\n  },\n\n  evidencesButtonsWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px px',\n    flexWrap: 'wrap',\n    margin: '5px 0',\n  },\n\n  ghostsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: '0 50px',\n  },\n\n  noEvidenceWrapper: {\n    padding: 50,\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n}));\n","import React, { useEffect } from 'react';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useIntl } from 'react-intl';\n\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport EVIDENCES from '../../data/evidences';\nimport QUESTS from '../../data/quests';\n\nimport { pickerStateSelector, sessionIdSelector, sessionKeySelector } from '../../selectors';\n\nimport {\n  updateGhostName, filterGhosts, updateSelectedQuests,\n  resetPicker, updateAnswersEveryoneButton, resetSession as resetSessionAction, setPickerState,\n} from '../../actions';\n\nimport CustomButton from './Buttons/CustomButton';\nimport EvidenceButton from './Buttons/EvidenceButton';\nimport GhostCard from './GhostCard';\nimport QuestButton from './Buttons/QuestButton';\n\nimport firebaseDataService from '../../services/firebaseData';\nimport { analytics } from '../../firebase';\n\nimport useStyles from './styles';\n\nconst Picker = () => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n  const { formatMessage } = useIntl();\n\n  const pickerState = useSelector((state) => pickerStateSelector(state));\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n  const sessionKey = useSelector((state) => sessionKeySelector(state));\n\n  useEffect(() => {\n    analytics.logEvent('picker_page_view');\n  }, []);\n\n  useEffect(() => {\n    const onUnload = () => {\n      dispatch(resetSessionAction());\n    };\n\n    window.addEventListener('beforeunload', onUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', onUnload);\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sessionKey) {\n      firebaseDataService.getRef().child(sessionKey).on('value', (data) => {\n        dispatch(setPickerState(data.val()));\n      });\n    }\n  }, [dispatch, sessionId, sessionKey]);\n\n  const handleGhostNameChange = (name) => {\n    dispatch(updateGhostName(name));\n  };\n\n  const handleEvidenceButtonClick = (evidence, status) => {\n    dispatch(filterGhosts(evidence, status));\n  };\n\n  const handleQuestButtonClick = (quest, isActive) => {\n    dispatch(updateSelectedQuests(quest, isActive));\n  };\n\n  const handleAnswersEveryoneButton = (text, isActive) => {\n    dispatch(updateAnswersEveryoneButton(isActive));\n  };\n\n  const handleReset = () => {\n    dispatch(resetPicker());\n  };\n\n  const { ghostName, ghosts, selectedEvidences } = pickerState;\n\n  return (\n    <Slide direction=\"right\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.header}>\n          <Typography variant=\"h3\">{formatMessage({ id: 'picker.header' })}</Typography>\n        </Box>\n        <Box className={css.inputWrapper}>\n          <TextField\n            id=\"ghost-name\"\n            label={formatMessage({ id: 'picker.ghostName' })}\n            variant=\"outlined\"\n            value={ghostName}\n            onChange={(e) => handleGhostNameChange(e.target.value)}\n          />\n          <CustomButton\n            type=\"talksToEveryOne\"\n            color=\"grey\"\n            text={formatMessage({ id: 'picker.answersEveryone' })}\n            handleClick={handleAnswersEveryoneButton}\n          />\n          <CustomButton\n            type=\"reset\"\n            color=\"grey\"\n            text={formatMessage({ id: 'picker.reset' })}\n            handleClick={handleReset}\n          />\n        </Box>\n        <Typography variant=\"h4\">{formatMessage({ id: 'evidences' })}</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          {\n            EVIDENCES.map((evidence) => (\n              <EvidenceButton\n                key={evidence.key}\n                evidence={evidence}\n                color={evidence.color}\n                handleClick={handleEvidenceButtonClick}\n              />\n            ))\n          }\n        </Box>\n        <Typography variant=\"h4\">{formatMessage({ id: 'quests' })}</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          {\n            QUESTS.map((quest) => (\n              <QuestButton\n                key={quest.key}\n                quest={quest}\n                color=\"grey\"\n                handleClick={handleQuestButtonClick}\n              />\n            ))\n          }\n        </Box>\n        <Box className={css.ghostsWrapper}>\n          {\n            ghosts.map((ghost) => (\n              <GhostCard data={ghost} key={ghost.name} selectedEvidences={selectedEvidences} />\n            ))\n          }\n          {\n            isEmpty(ghosts) ? (\n              <Box className={css.noEvidenceWrapper}>\n                <Typography variant=\"h6\">\n                  No ghosts with such combination of evidences\n                </Typography>\n              </Box>\n            ) : null\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nexport default Picker;\n","export default {\n  SPIRIT_BOX: [\n    {\n      category: 'question.radio.aggression',\n      questions: [\n        'question.radio.aggression.1',\n        'question.radio.aggression.2',\n        'question.radio.aggression.3',\n        'question.radio.aggression.4',\n        'question.radio.aggression.5',\n        'question.radio.aggression.6',\n        'question.radio.aggression.7',\n        'question.radio.aggression.8',\n        'question.radio.aggression.9',\n        'question.radio.aggression.10',\n        'question.radio.aggression.11',\n        'question.radio.aggression.12',\n      ],\n    },\n    {\n      category: 'question.radio.location',\n      questions: [\n        'question.radio.location.1',\n        'question.radio.location.2',\n        'question.radio.location.3',\n        'question.radio.location.4',\n        'question.radio.location.5',\n        'question.radio.location.6',\n        'question.radio.location.7',\n        'question.radio.location.8',\n        'question.radio.location.9',\n        'question.radio.location.10',\n        'question.radio.location.11',\n        'question.radio.location.12',\n        'question.radio.location.13',\n        'question.radio.location.14',\n        'question.radio.location.15',\n        'question.radio.location.16',\n        'question.radio.location.17',\n      ],\n    },\n    {\n      category: 'question.radio.age',\n      questions: [\n        'question.radio.age.1',\n        'question.radio.age.2',\n        'question.radio.age.3',\n        'question.radio.age.4',\n        'question.radio.age.5',\n        'question.radio.age.6',\n        'question.radio.age.7',\n      ],\n    },\n    {\n      category: 'question.radio.misc',\n      questions: [\n        'question.radio.misc.1',\n        'question.radio.misc.2',\n        'question.radio.misc.3',\n        'question.radio.misc.4',\n        'question.radio.misc.5',\n        'question.radio.misc.6',\n        'question.radio.misc.7',\n        'question.radio.misc.8',\n      ],\n    },\n  ],\n\n  OUIJA_BOARD: [\n    {\n      category: 'question.ouija.victim',\n      questions: [\n        'question.ouija.victim.1',\n        'question.ouija.victim.2',\n        'question.ouija.victim.3',\n        'question.ouija.victim.4',\n        'question.ouija.victim.5',\n        'question.ouija.victim.6',\n        'question.ouija.victim.7',\n        'question.ouija.victim.8',\n      ],\n    },\n    {\n      category: 'question.ouija.age',\n      questions: [\n        'question.ouija.age.1',\n        'question.ouija.age.2',\n        'question.ouija.age.3',\n        'question.ouija.age.4',\n      ],\n    },\n    {\n      category: 'question.ouija.death',\n      questions: [\n        'question.ouija.death.1',\n        'question.ouija.death.2',\n        'question.ouija.death.3',\n        'question.ouija.death.4',\n        'question.ouija.death.5',\n      ],\n    },\n    {\n      category: 'question.ouija.room',\n      questions: [\n        'question.ouija.room.1',\n        'question.ouija.room.2',\n        'question.ouija.room.3',\n        'question.ouija.room.4',\n        'question.ouija.room.5',\n        'question.ouija.room.6',\n        'question.ouija.room.7',\n        'question.ouija.room.8',\n        'question.ouija.room.9',\n      ],\n    },\n    {\n      category: 'question.ouija.location',\n      questions: [\n        'question.ouija.location.1',\n        'question.ouija.location.2',\n        'question.ouija.location.3',\n        'question.ouija.location.4',\n        'question.ouija.location.5',\n        'question.ouija.location.6',\n        'question.ouija.location.7',\n        'question.ouija.location.8',\n        'question.ouija.location.9',\n      ],\n    },\n  ],\n};\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n    overflowX: 'hidden',\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n\n  questionsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    alignItems: 'flex-start',\n    padding: 20,\n  },\n\n  toolWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n  },\n\n  toolHeader: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#fdcf96',\n  },\n\n  toolContent: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    '@media screen and (max-width: 880px)': {\n      justifyContent: 'flex-start',\n    },\n  },\n\n  categoryTitle: {\n    color: 'red',\n  },\n\n  categoryWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 20,\n  },\n}));\n","import React, { useCallback, useEffect } from 'react';\nimport { useIntl } from 'react-intl';\n\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\n\nimport QUESTIONS from '../../data/questions';\nimport { analytics } from '../../firebase';\n\nimport useStyles from './styles';\n\nconst Questions = () => {\n  const css = useStyles();\n  const { formatMessage } = useIntl();\n\n  useEffect(() => {\n    analytics.logEvent('questions_page_view');\n  }, []);\n\n  const renderCategory = useCallback((block) => (\n    <Box className={css.categoryWrapper} key={block.category}>\n      <Typography variant=\"h6\" className={css.categoryTitle}>{formatMessage({ id: block.category })}</Typography>\n      {\n          block.questions.map((q) => (\n            <Typography key={q}>{formatMessage({ id: q })}</Typography>\n          ))\n        }\n    </Box>\n  ), [formatMessage, css]);\n\n  return (\n    <Slide direction=\"left\" in mountOnEnter unmountOnExit>\n      <Fade in timeout={1000}>\n        <Box className={css.wrapper}>\n          <Box className={css.header}>\n            <Typography variant=\"h3\" className={css.pageLabel}>{formatMessage({ id: 'questions' })}</Typography>\n          </Box>\n          <Box className={css.questionsWrapper}>\n            <Box className={css.toolWrapper}>\n              <Typography className={css.toolHeader} variant=\"h4\">\n                {formatMessage({ id: 'question.radio' })}\n              </Typography>\n              <Box className={css.toolContent}>\n                {\n                  QUESTIONS.SPIRIT_BOX.map((block) => renderCategory(block))\n                }\n              </Box>\n            </Box>\n            <Box className={css.toolWrapper}>\n              <Typography className={css.toolHeader} variant=\"h4\">\n                {formatMessage({ id: 'question.ouija' })}\n              </Typography>\n              <Box className={css.toolContent}>\n                {\n                  QUESTIONS.OUIJA_BOARD.map((block) => renderCategory(block))\n                }\n              </Box>\n            </Box>\n          </Box>\n        </Box>\n      </Fade>\n    </Slide>\n  );\n};\n\nexport default Questions;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles({\n  activeAbsolute: {\n    position: 'absolute',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    zIndex: 20,\n    backgroundColor: 'rgba(0, 0, 0, .6)',\n  },\n\n  activeBox: {\n    width: '100%',\n  },\n\n  disabled: {\n    display: 'none',\n  },\n});\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { loaderStateSelector } from '../../selectors';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Loader = ({ type }) => {\r\n  const css = useStyles();\r\n  const isShown = useSelector((state) => loaderStateSelector(state));\r\n\r\n  const wrapperStyle = type === 'linear' ? css.activeBox : css.activeAbsolute;\r\n  const isActive = isShown ? '' : css.disabled;\r\n\r\n  return (\r\n    <div className={`${wrapperStyle} ${isActive}`}>\r\n      {\r\n        type === 'linear' ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <CircularProgress color=\"secondary\" />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    minHeight: '100%',\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  subWrapper: {\n    padding: 5,\n    backgroundColor: 'rgba(0, 0, 0, .3)',\n    borderRadius: 10,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '10px 20px 10px 20px',\n  },\n\n  submitButton: {\n    marginTop: 5,\n  },\n\n  langSwitchWrapper: {\n    position: 'absolute',\n    right: '20px',\n    bottom: '20px',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport { useIntl } from 'react-intl';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport Loader from '../Loader';\nimport LangSwitch from '../LangSwitch/LangSwitch';\n\nimport { enterApp, showLoader, hideLoader } from '../../actions';\nimport { getSessionId, setSessionId, generateUuid } from '../../utils';\nimport firebaseDataService from '../../services/firebaseData';\n\nimport useStyles from './styles';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n  const { formatMessage } = useIntl();\n\n  const [sessionId, changeSessionId] = useState('');\n  const [session, setSession] = useState({});\n  const [error, setError] = useState(null);\n  const [isJoinButtonPressed, setIsJoinButtonPressed] = useState(false);\n\n  const sessionIdCookie = getSessionId();\n\n  useEffect(() => {\n    if (sessionIdCookie || sessionIdCookie === '') {\n      dispatch(enterApp('picker', sessionIdCookie));\n    }\n  }, [dispatch, sessionIdCookie]);\n\n  useEffect(() => {\n    if (session && !isEmpty(session)) {\n      setSessionId(sessionId);\n      dispatch(enterApp('picker', sessionId));\n    }\n  });\n\n  useEffect(() => {\n    if (!session) {\n      setError(formatMessage({ id: 'login.error.notFound' }));\n    }\n  }, [session, formatMessage]);\n\n  const validate = () => {\n    if (sessionId.length !== 6) {\n      setError(formatMessage({ id: 'login.error.length' }));\n      return false;\n    }\n\n    if (!(/^[0-9]+$/).test(sessionId)) {\n      setError(formatMessage({ id: 'login.error.format' }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSessionIdChange = (value) => {\n    setSession({});\n    setError(null);\n    changeSessionId(value);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    const id = generateUuid();\n    dispatch(enterApp('picker', id));\n    setSessionId(id);\n  };\n\n  const handleClickJoin = (state) => {\n    setIsJoinButtonPressed(state);\n  };\n\n  const handleJoinSession = () => {\n    if (validate()) {\n      dispatch(showLoader());\n      firebaseDataService.getSessionById(sessionId).then((data) => {\n        dispatch(hideLoader());\n        setSession(data.val());\n      });\n    }\n  };\n\n  const handleSoloLobby = () => {\n    setSessionId('');\n    dispatch(enterApp('picker', ''));\n  };\n\n  return (\n    <Box className={css.wrapper}>\n      <Box className={css.subWrapper}>\n        {\n          isJoinButtonPressed ? (\n            <Box className={css.inputWrapper}>\n              <TextField\n                id=\"sessionID\"\n                label={formatMessage({ id: 'login.sessionId' })}\n                variant=\"outlined\"\n                value={sessionId}\n                error={!!error}\n                helperText={error}\n                onChange={(e) => handleSessionIdChange(e.target.value)}\n              />\n              <Button className={css.submitButton} onClick={handleJoinSession}>\n                {formatMessage({ id: 'login.join.proceed' })}\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={() => handleClickJoin(false)}\n              >\n                {formatMessage({ id: 'login.back' })}\n              </Button>\n            </Box>\n          ) : (\n            <Box className={css.inputWrapper}>\n              <Button\n                className={css.submitButton}\n                onClick={handleCreateClick}\n              >\n                {formatMessage({ id: 'login.create' })}\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={() => handleClickJoin(true)}\n              >\n                {formatMessage({ id: 'login.join' })}\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={handleSoloLobby}\n              >\n                {formatMessage({ id: 'login.solo' })}\n              </Button>\n            </Box>\n          )\n        }\n        <Loader type=\"linear\" />\n      </Box>\n      <Box className={css.langSwitchWrapper}>\n        <LangSwitch />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Login;\n","// import { createMuiTheme } from '@material-ui/core/styles';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n\n    primary: {\n      main: grey[900],\n    },\n\n    secondary: {\n      main: grey[50],\n    },\n  },\n\n  overrides: {\n    MuiTypography: {\n      body1: {\n        fontFamily: 'SyneMono',\n        '@media screen and (max-width: 1000px)': {\n        },\n      },\n\n      h3: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h4: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h5: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h6: {\n        fontFamily: 'Teko-Medium',\n      },\n    },\n  },\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { IntlProvider } from 'react-intl';\n\nimport {\n  changePage, resetSession,\n} from '../actions';\n\nimport langEN from '../lang/en.json';\nimport langRU from '../lang/ru.json';\n\nimport { pageSelector, currentLangSelector } from '../selectors';\n\nimport { resetSessionId } from '../utils';\n\nimport Header from './Header';\nimport Picker from './Picker';\nimport Questions from './Questions';\nimport Login from './Login';\n\nimport theme from './theme';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const page = useSelector((state) => pageSelector(state));\n  const lang = useSelector((state) => currentLangSelector(state));\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const handleSessionReset = () => {\n    resetSessionId();\n    dispatch(resetSession());\n  };\n\n  const renderPage = () => {\n    switch (page) {\n      case 'picker':\n        return (\n          <>\n            <Header resetSession={handleSessionReset} />\n            <Picker\n              changePage={handleChangePage}\n              resetSession={handleSessionReset}\n            />\n          </>\n        );\n      case 'questions':\n        return (\n          <>\n            <Header resetSession={handleSessionReset} />\n            <Questions changePage={handleChangePage} />\n          </>\n        );\n      default:\n        return (\n          <Login />\n        );\n    }\n  };\n\n  const setUpMessagesLocale = () => {\n    switch (lang) {\n      case 'en': {\n        return langEN;\n      }\n\n      case 'ru': {\n        return langRU;\n      }\n\n      default: {\n        return langEN;\n      }\n    }\n  };\n\n  return (\n    <IntlProvider messages={setUpMessagesLocale()} locale=\"en\" defaultLocale=\"en\">\n      <ThemeProvider theme={theme}>\n        {renderPage()}\n      </ThemeProvider>\n    </IntlProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './store';\nimport { initApp } from './actions';\n\nimport App from './components/App';\n\nimport './index.css';\n\nconst store = configureStore();\n\nstore.dispatch(initApp());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}