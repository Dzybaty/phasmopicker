{"version":3,"sources":["reducers/app.js","actions/index.js","data/evidences.js","data/ghosts.js","utils/index.js","reducers/picker.js","data/quests.js","reducers/index.js","store.js","components/Picker/Buttons/styles.js","components/Picker/Buttons/CustomButton.jsx","selectors/index.js","components/Picker/GhostCard/styles.js","components/Picker/GhostCard/index.jsx","components/Picker/styles.js","components/Picker/index.jsx","components/Questions/styles.js","components/Questions/index.jsx","components/theme.js","components/App.jsx","index.jsx"],"names":["defaultState","page","app","state","action","type","EMF","ghosts","name","evidences","strength","weakness","filterGhostsByEvidences","filter","ghost","difference","length","selectedEvidences","evidenceButtons","questButtons","talksToEveryOne","ghostName","picker","evidence","isActive","updatedButtonsState","push","filteredGhosts","remove","el","quest","combineReducers","store","createStore","reducer","makeStyles","button","color","props","margin","buttonSelected","border","CustomButton","text","handleClick","css","useStyles","useSelector","isActiveButtonSelector","Button","className","onClick","root","width","padding","content","display","alignItems","accent","header","GhostCard","data","useState","isOpen","setIsOpen","useEffect","Fade","in","timeout","Box","Typography","variant","map","key","includes","palette","wrapper","flexDirection","justifyContent","minHeight","background","primary","main","contrastText","inputWrapper","flexWrap","evidencesButtonsWrapper","ghostsWrapper","alignContent","noEvidenceWrapper","changePageButtonWrapper","icon","position","pageLabel","Picker","changePage","dispatch","useDispatch","selectedEvidencesSelector","ghostsSelector","ghostNameSelector","handleEvidenceButtonClick","filterGhosts","handleQuestButtonClick","updateSelectedQuests","Slide","direction","mountOnEnter","unmountOnExit","IconButton","TextField","id","label","value","onChange","e","target","updateGhostName","updateAnswersEveryoneButton","isEmpty","overflowX","paddingBottom","questionsWrapper","columnWrapper","Questions","Object","keys","questions","createMuiTheme","grey","secondary","overrides","MuiTypography","body1","fontFamily","h3","h4","h6","App","pageSelector","handleChangePage","newPage","ThemeProvider","theme","renderPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb21e592.chunk.js","sourcesContent":["import { CHANGE_PAGE } from '../actions';\n\nconst defaultState = {\n  page: 'picker',\n};\n\nconst app = (state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_PAGE: {\n      const { page } = action;\n\n      return ({ page });\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","export const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const changePage = (page) => ({\n  type: CHANGE_PAGE,\n  page,\n});\n\nexport const FILTER_GHOSTS = 'FILTER_GHOSTS';\nexport const filterGhosts = (evidence, isActive) => ({\n  type: FILTER_GHOSTS,\n  evidence,\n  isActive,\n});\n\nexport const UPDATE_SELECTED_QUESTS = 'UPDATE_SELECTED_QUESTS';\nexport const updateSelectedQuests = (quest, isActive) => ({\n  type: UPDATE_SELECTED_QUESTS,\n  quest,\n  isActive,\n});\n\nexport const UPDATE_GHOST_NAME = 'UPDATE_GHOST_NAME';\nexport const updateGhostName = (name) => ({\n  type: UPDATE_GHOST_NAME,\n  name,\n});\n\nexport const UPDATE_ANSWERS_EVERYONE_BUTTON = 'UPDATE_ANSWERS_EVERYONE_BUTTON';\nexport const updateAnswersEveryoneButton = (isActive) => ({\n  type: UPDATE_ANSWERS_EVERYONE_BUTTON,\n  isActive,\n});\n\nexport const RESET_PICKER = 'RESET_PICKER';\nexport const resetPicker = () => ({ type: RESET_PICKER });\n","export const EMF = 'EMF';\nexport const FINGERPRINTS = 'Fingerprints';\nexport const TEMPERATURE = 'Temperature';\nexport const GHOST_WRITING = 'Ghost Writing';\nexport const SPIRIT_BOX = 'Spirit Box';\nexport const GHOST_ORB = 'Ghost Orb';\n","import {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, GHOST_ORB, SPIRIT_BOX,\n} from './evidences';\n\nconst ghosts = [\n  {\n    name: 'Banshee',\n    evidences: [EMF, FINGERPRINTS, TEMPERATURE],\n    strength: 'Only targets one player at a time',\n    weakness: 'Hates the Crucifix',\n  },\n\n  {\n    name: 'Demon',\n    evidences: [TEMPERATURE, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely aggressive',\n    weakness: 'Using the Ouija board to ask questions does not drain sanity',\n  },\n\n  {\n    name: 'Jinn',\n    evidences: [EMF, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Moves faster the further away you are from it',\n    weakness: 'Cutting off the location’s power supply will limit the Jinn’s speed',\n  },\n\n  {\n    name: 'Mare',\n    evidences: [TEMPERATURE, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Attacks more frequently in the dark, tends to switch off lights',\n    weakness: 'Keeping the lights on',\n  },\n\n  {\n    name: 'Oni',\n    evidences: [EMF, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely active and moves objects quickly',\n    weakness: 'Extreme activity with lots of players nearby makes it easy to identify',\n  },\n\n  {\n    name: 'Phantom',\n    evidences: [EMF, TEMPERATURE, GHOST_ORB],\n    strength: 'Looking at the Phantom will reduce your sanity',\n    weakness: 'Capturing a photo will cause it to disappear, not during a hunt',\n  },\n\n  {\n    name: 'Poltergeist',\n    evidences: [FINGERPRINTS, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Throws multiple objects about at once',\n    weakness: 'Rooms without any stuff in to throw',\n  },\n\n  {\n    name: 'Revenant',\n    evidences: [EMF, FINGERPRINTS, GHOST_WRITING],\n    strength: 'Attacks anyone, regardless of sanity levels',\n    weakness: 'Moves extremely slowly when players hide',\n  },\n\n  {\n    name: 'Shade',\n    evidences: [EMF, GHOST_WRITING, GHOST_ORB],\n    strength: 'Minimal activity, hard to find and detect',\n    weakness: 'Does not hunt if players are in a group',\n  },\n\n  {\n    name: 'Spirit',\n    evidences: [FINGERPRINTS, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'No strengths',\n    weakness: 'Using smudge sticks stops from starting for a long time',\n  },\n\n  {\n    name: 'Wraith',\n    evidences: [FINGERPRINTS, TEMPERATURE, SPIRIT_BOX],\n    strength: 'Can fly through walls and does not leave footprints',\n    weakness: 'Salt is toxic for Wraith',\n  },\n\n  {\n    name: 'Yurei',\n    evidences: [TEMPERATURE, GHOST_WRITING, GHOST_ORB],\n    strength: 'Drains player sanity especially quickly',\n    weakness: 'Smudge stick in the same room will stop the Yurei from moving',\n  },\n];\n\nexport default ghosts;\n","import { filter, difference } from 'lodash';\n\nconst filterGhostsByEvidences = (ghosts, evidences) => (\n  filter(ghosts, (ghost) => difference(evidences, ghost.evidences).length === 0)\n);\n\nexport default filterGhostsByEvidences;\n","import { remove } from 'lodash';\n\nimport {\n  FILTER_GHOSTS, UPDATE_SELECTED_QUESTS,\n  UPDATE_GHOST_NAME, RESET_PICKER, UPDATE_ANSWERS_EVERYONE_BUTTON,\n} from '../actions';\n\nimport ghosts from '../data/ghosts';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, TEMPERATURE as TEMPERATURE_QUEST,\n  CRUCIFIX, EVENT, MOTION, PHOTO, SINK, SMUDGE,\n} from '../data/quests';\n\nimport filterGhostsByEvidences from '../utils';\n\nconst defaultState = {\n  selectedEvidences: [],\n  ghosts,\n  evidenceButtons: {\n    [EMF]: false,\n    [FINGERPRINTS]: false,\n    [TEMPERATURE]: false,\n    [GHOST_WRITING]: false,\n    [SPIRIT_BOX]: false,\n    [GHOST_ORB]: false,\n  },\n  questButtons: {\n    [SINK]: false,\n    [PHOTO]: false,\n    [MOTION]: false,\n    [TEMPERATURE_QUEST]: false,\n    [CRUCIFIX]: false,\n    [EMF_QUEST]: false,\n    [SMUDGE]: false,\n    [EVENT]: false,\n  },\n  talksToEveryOne: false,\n  ghostName: '',\n};\n\nconst picker = (state = defaultState, action) => {\n  switch (action.type) {\n    case FILTER_GHOSTS: {\n      const { evidence, isActive } = action;\n      const { selectedEvidences } = state;\n\n      const updatedButtonsState = {\n        ...state.evidenceButtons,\n        [evidence]: isActive,\n      };\n\n      if (isActive) {\n        selectedEvidences.push(evidence);\n\n        const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n        return {\n          ...state,\n          ghosts: filteredGhosts,\n          selectedEvidences,\n          evidenceButtons: updatedButtonsState,\n        };\n      }\n\n      remove(selectedEvidences, (el) => el === evidence);\n\n      const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n      return {\n        ...state,\n        ghosts: filteredGhosts,\n        selectedEvidences,\n        evidenceButtons: updatedButtonsState,\n      };\n    }\n\n    case UPDATE_GHOST_NAME: {\n      const { name } = action;\n\n      return {\n        ...state,\n        ghostName: name,\n      };\n    }\n\n    case UPDATE_SELECTED_QUESTS: {\n      const { quest, isActive } = action;\n\n      return {\n        ...state,\n        questButtons: {\n          ...state.questButtons,\n          [quest]: isActive,\n        },\n      };\n    }\n\n    case UPDATE_ANSWERS_EVERYONE_BUTTON: {\n      const { isActive } = action;\n\n      return {\n        ...state,\n        talksToEveryOne: isActive,\n      };\n    }\n\n    case RESET_PICKER: {\n      return defaultState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default picker;\n","export const SINK = 'Sink';\nexport const PHOTO = 'Photo';\nexport const EVENT = 'Event';\nexport const MOTION = 'Motion';\nexport const TEMPERATURE = 'Temperature';\nexport const CRUCIFIX = 'Crucifix';\nexport const EMF = 'EMF';\nexport const SMUDGE = 'Smudge';\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport picker from './picker';\n\nexport default combineReducers({\n  app,\n  picker,\n});\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(\n  reducer,\n);\n\nexport default store;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  button: {\n    color: (props) => props.color,\n    margin: '0 5px',\n  },\n\n  buttonSelected: {\n    color: (props) => props.color,\n    border: '2px solid red',\n    margin: '0 2px',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nimport { isActiveButtonSelector } from '../../../selectors';\n\nconst CustomButton = ({\n  type, text, handleClick, ...props\n}) => {\n  const css = useStyles(props);\n\n  const isActive = useSelector((state) => isActiveButtonSelector(state, type, text));\n\n  return (\n    <Button\n      className={isActive ? css.buttonSelected : css.button}\n      onClick={() => handleClick(text, !isActive)}\n    >\n      {text}\n    </Button>\n  );\n};\n\nCustomButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport default CustomButton;\n","export const pageSelector = (state) => state.app.page;\n\nexport const selectedEvidencesSelector = (state) => state.picker.selectedEvidences;\n\nexport const ghostsSelector = (state) => state.picker.ghosts;\n\nexport const questButtonsStateSelector = (state) => state.picker.questButtons;\n\nexport const ghostNameSelector = (state) => state.picker.ghostName;\n\nexport const isActiveButtonSelector = (state, type, name) => {\n  switch (type) {\n    case 'evidence': {\n      return state.picker.evidenceButtons[name];\n    }\n\n    case 'quest': {\n      return state.picker.questButtons[name];\n    }\n\n    case 'talksToEveryOne': {\n      return state.picker.talksToEveryOne;\n    }\n\n    default: {\n      return false;\n    }\n  }\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    width: 200,\n    padding: 20,\n  },\n\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  accent: {\n    color: 'green',\n  },\n\n  header: {\n    color: 'red',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport useStyles from './styles';\n\nconst GhostCard = ({ data, selectedEvidences }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const css = useStyles();\n\n  const {\n    name, strength, weakness, evidences,\n  } = data;\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return (() => {\n      setIsOpen(false);\n    });\n  }, []);\n\n  return (\n    <Fade in={isOpen} timeout={1000}>\n      <Box className={css.root}>\n        <Typography variant=\"h4\" className={css.header}>{name}</Typography>\n        <Typography variant=\"h6\" color=\"secondary\">Evidences</Typography>\n        {\n          evidences.map((el) => (\n            <Box key={el}>\n              <Typography className={selectedEvidences.includes(el) ? css.accent : ''}>{el}</Typography>\n            </Box>\n          ))\n        }\n        <Typography variant=\"h6\">Strength</Typography>\n        <Typography className={css.content}>{strength}</Typography>\n        <Typography variant=\"h6\">Weakness</Typography>\n        <Typography className={css.content}>{weakness}</Typography>\n      </Box>\n    </Fade>\n  );\n};\n\nGhostCard.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    evidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n    strength: PropTypes.string.isRequired,\n    weakness: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GhostCard;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: '20px 0',\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 20px',\n    flexWrap: 'wrap',\n  },\n\n  evidencesButtonsWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px px',\n    flexWrap: 'wrap',\n  },\n\n  ghostsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: '0 50px',\n  },\n\n  noEvidenceWrapper: {\n    padding: 50,\n  },\n\n  changePageButtonWrapper: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n\n  icon: {\n    position: 'absolute',\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Slide from '@material-ui/core/Slide';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, TEMPERATURE as TEMPERATURE_QUEST,\n  CRUCIFIX, EVENT, MOTION, PHOTO, SINK, SMUDGE,\n} from '../../data/quests';\n\nimport {\n  ghostNameSelector,\n  selectedEvidencesSelector,\n  ghostsSelector,\n} from '../../selectors';\n\nimport {\n  updateGhostName, filterGhosts, updateSelectedQuests,\n  resetPicker, updateAnswersEveryoneButton,\n} from '../../actions';\n\nimport CustomButton from './Buttons/CustomButton';\nimport GhostCard from './GhostCard';\n\nimport useStyles from './styles';\n\nconst Picker = ({ changePage }) => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const selectedEvidences = useSelector((state) => selectedEvidencesSelector(state));\n  const filteredGhosts = useSelector((state) => ghostsSelector(state));\n  const ghostName = useSelector((state) => ghostNameSelector(state));\n\n  const handleGhostNameChange = (name) => {\n    dispatch(updateGhostName(name));\n  };\n\n  const handleEvidenceButtonClick = (evidence, isActive) => {\n    dispatch(filterGhosts(evidence, isActive));\n  };\n\n  const handleQuestButtonClick = (quest, isActive) => {\n    dispatch(updateSelectedQuests(quest, isActive));\n  };\n\n  const handleAnswersEveryoneButton = (text, isActive) => {\n    dispatch(updateAnswersEveryoneButton(isActive));\n  };\n\n  const handleReset = () => {\n    dispatch(resetPicker());\n  };\n\n  return (\n    <Slide direction=\"right\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.changePageButtonWrapper}>\n          <Typography variant=\"h3\" className={css.pageLabel}>Ghost Picker</Typography>\n          <IconButton onClick={() => changePage('questions')} className={css.icon}>\n            <ArrowForwardIosIcon />\n          </IconButton>\n        </Box>\n        <Box className={css.inputWrapper}>\n          <TextField\n            id=\"ghost-name\"\n            label=\"Ghost Name\"\n            variant=\"outlined\"\n            value={ghostName}\n            onChange={(e) => handleGhostNameChange(e.target.value)}\n          />\n          <CustomButton type=\"talksToEveryOne\" color=\"grey\" text=\"Answers everyone\" handleClick={handleAnswersEveryoneButton} />\n          <CustomButton type=\"reset\" color=\"grey\" text=\"Reset\" handleClick={handleReset} />\n        </Box>\n        <Typography variant=\"h4\">Evidences</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"evidence\" color=\"red\" text={EMF} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"green\" text={FINGERPRINTS} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"blue\" text={TEMPERATURE} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"purple\" text={GHOST_WRITING} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"grey\" text={SPIRIT_BOX} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"brown\" text={GHOST_ORB} handleClick={handleEvidenceButtonClick} />\n        </Box>\n        <Typography variant=\"h4\">Quests</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"quest\" color=\"grey\" text={CRUCIFIX} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EVENT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={MOTION} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={PHOTO} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EMF_QUEST} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SINK} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SMUDGE} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={TEMPERATURE_QUEST} handleClick={handleQuestButtonClick} />\n        </Box>\n        <Box className={css.ghostsWrapper}>\n          {\n            filteredGhosts.map((ghost) => (\n              <GhostCard data={ghost} key={ghost.name} selectedEvidences={selectedEvidences} />\n            ))\n          }\n          {\n            isEmpty(filteredGhosts) ? (\n              <Box className={css.noEvidenceWrapper}>\n                <Typography variant=\"h6\">\n                  No ghosts with such combination of evidences\n                </Typography>\n              </Box>\n            ) : null\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nPicker.propTypes = {\n  changePage: PropTypes.func.isRequired,\n};\n\nexport default Picker;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: '20px 0',\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n    overflowX: 'hidden',\n  },\n\n  changePageButtonWrapper: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    paddingBottom: 10,\n  },\n\n  icon: {\n    position: 'absolute',\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n\n  questionsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    alignItems: 'flex-start',\n    justifyContent: 'space-around',\n    '@media screen and (max-width: 880px)': {\n      justifyContent: 'flex-start',\n    },\n  },\n\n  columnWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    padding: '0 30px',\n  },\n\n  header: {\n    color: 'red',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './styles';\n\nimport questions from '../../data/questions.json';\n\nconst Questions = ({ changePage }) => {\n  const css = useStyles();\n\n  return (\n    <Slide direction=\"left\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.changePageButtonWrapper}>\n          <IconButton onClick={() => changePage('picker')} className={css.icon}>\n            <ArrowBackIosIcon />\n          </IconButton>\n          <Typography variant=\"h3\" className={css.pageLabel}>Questions</Typography>\n        </Box>\n        <Box className={css.questionsWrapper}>\n          {\n            Object.keys(questions).map((key) => (\n              <Fade in timeout={1000} key={key}>\n                <Box className={css.columnWrapper} key={key}>\n                  <Typography variant=\"h4\" className={css.header} key={key}>{key}</Typography>\n                  {\n                    questions[key].map((el) => (\n                      <Typography key={el}>{el}</Typography>\n                    ))\n                  }\n                </Box>\n              </Fade>\n            ))\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nQuestions.propTypes = {\n  changePage: PropTypes.func.isRequired,\n};\n\nexport default Questions;\n","// import { createMuiTheme } from '@material-ui/core/styles';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n\n    primary: {\n      main: grey[900],\n    },\n\n    secondary: {\n      main: grey[50],\n    },\n  },\n\n  overrides: {\n    MuiTypography: {\n      body1: {\n        // fontSize: '.8vw',\n        fontFamily: 'SyneMono',\n        '@media screen and (max-width: 1000px)': {\n          // fontSize: '3vw',\n        },\n      },\n\n      h3: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h4: {\n        fontFamily: 'Teko-Medium',\n      },\n\n      h6: {\n        fontFamily: 'Teko-Medium',\n      },\n    },\n  },\n});\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { changePage } from '../actions';\nimport { pageSelector } from '../selectors';\n\nimport Picker from './Picker';\nimport Questions from './Questions';\n\nimport theme from './theme';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const page = useSelector((state) => pageSelector(state));\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const renderPage = () => {\n    switch (page) {\n      case 'picker':\n        return (\n          <Picker changePage={handleChangePage} />\n        );\n      case 'questions':\n        return <Questions changePage={handleChangePage} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {renderPage()}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}