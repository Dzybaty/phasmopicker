{"version":3,"sources":["actions/index.js","reducers/app.js","data/evidences.js","data/ghosts.js","utils/index.js","reducers/picker.js","data/quests.js","reducers/loader.js","reducers/index.js","firebase.js","services/firebaseData.js","selectors/index.js","sagas/index.js","store.js","components/Header/styles.js","components/Header/index.jsx","components/Picker/Buttons/styles.js","components/Picker/Buttons/CustomButton.jsx","components/Picker/GhostCard/styles.js","components/Picker/GhostCard/index.jsx","components/Picker/styles.js","components/Picker/index.jsx","components/Questions/styles.js","components/Questions/index.jsx","components/Loader/styles.js","components/Loader/index.jsx","components/Login/styles.js","components/Login/index.jsx","components/theme.js","components/App.jsx","index.jsx"],"names":["enterApp","page","sessionId","type","setSessionKey","sessionKey","setClientId","clientId","changePage","setPickerState","data","key","defaultState","app","state","action","EMF","ghosts","name","evidences","strength","weakness","cookies","Cookies","filterGhostsByEvidences","filter","ghost","difference","length","setSessionId","value","set","maxAge","getSessionById","id","objects","find","el","generateUuid","customAlphabet","nanoid","generateTimestamp","Math","floor","Date","now","selectedEvidences","evidenceButtons","questButtons","talksToEveryOne","ghostName","clients","picker","evidence","isActive","updatedButtonsState","push","filteredGhosts","remove","quest","get","loader","combineReducers","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","database","ref","orderByChild","equalTo","once","session","last_updated","child","update","pageSelector","sessionIdSelector","sessionKeySelector","clientIdSelector","clientsSelector","pickerStateSelector","removeSession","handlePickerChange","rootSaga","updateDebounced","debounce","firebaseDataService","updateSession","createPickerStateObject","call","val","Object","keys","put","select","objectToStore","createSession","newSessionKey","takeEvery","takeLatest","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","makeStyles","header","display","height","width","background","justifyContent","position","zIndex","color","navWrapper","flexWrap","sessionWrapper","sessionIdWrapper","alignItems","marginRight","headerButton","borderRadius","btnActive","borderBottom","Header","resetSession","dispatch","useDispatch","css","useStyles","useSelector","useState","copyHintText","setCopyHintText","handleChangePage","newPage","className","Tooltip","title","IconButton","onClick","Typography","Button","clipboardCopy","then","setTimeout","button","props","margin","buttonSelected","CustomButton","text","handleClick","isActiveButtonSelector","root","padding","content","accent","GhostCard","isOpen","setIsOpen","useEffect","Fade","in","timeout","Box","variant","map","includes","palette","wrapper","flexDirection","minHeight","primary","main","contrastText","inputWrapper","evidencesButtonsWrapper","ghostsWrapper","alignContent","noEvidenceWrapper","marginTop","Picker","pickerState","onUnload","window","addEventListener","removeEventListener","getRef","on","handleEvidenceButtonClick","filterGhosts","handleQuestButtonClick","updateSelectedQuests","Slide","direction","mountOnEnter","unmountOnExit","TextField","label","onChange","e","target","updateGhostName","updateAnswersEveryoneButton","isEmpty","overflowX","pageLabel","questionsWrapper","columnWrapper","questionHeader","Questions","questions","activeAbsolute","backgroundColor","activeBox","disabled","Loader","isShown","loaderStateSelector","wrapperStyle","LinearProgress","CircularProgress","subWrapper","submitButton","Login","changeSessionId","setSession","error","setError","isJoinButtonPressed","setIsJoinButtonPressed","sessionIdCookie","handleClickJoin","helperText","test","Divider","preventDefault","createMuiTheme","grey","secondary","overrides","MuiTypography","body1","fontFamily","h3","h4","h5","h6","App","handleSessionReset","ThemeProvider","theme","renderPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b174ddf2.chunk.js","sourcesContent":["export const ENTER_APP = 'ENTER_APP';\nexport const enterApp = (page, sessionId) => ({\n  type: ENTER_APP,\n  page,\n  sessionId,\n});\n\nexport const SET_SESSION_KEY = 'SET_SESSION_KEY';\nexport const setSessionKey = (sessionKey) => ({\n  type: SET_SESSION_KEY,\n  sessionKey,\n});\n\nexport const SET_CLIENT_ID = 'SET_CLIENT_ID';\nexport const setClientId = (clientId) => ({\n  type: SET_CLIENT_ID,\n  clientId,\n});\n\nexport const RESET_SESSION = 'RESET_SESSION';\nexport const resetSession = () => ({ type: RESET_SESSION });\n\nexport const RESET_SESSION_COMPLETE = 'RESET_SESSION_COMPLETE';\nexport const resetSessionComplete = () => ({ type: RESET_SESSION_COMPLETE });\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const changePage = (page) => ({\n  type: CHANGE_PAGE,\n  page,\n});\n\nexport const FILTER_GHOSTS = 'FILTER_GHOSTS';\nexport const filterGhosts = (evidence, isActive) => ({\n  type: FILTER_GHOSTS,\n  evidence,\n  isActive,\n});\n\nexport const UPDATE_SELECTED_QUESTS = 'UPDATE_SELECTED_QUESTS';\nexport const updateSelectedQuests = (quest, isActive) => ({\n  type: UPDATE_SELECTED_QUESTS,\n  quest,\n  isActive,\n});\n\nexport const UPDATE_GHOST_NAME = 'UPDATE_GHOST_NAME';\nexport const updateGhostName = (name) => ({\n  type: UPDATE_GHOST_NAME,\n  name,\n});\n\nexport const UPDATE_ANSWERS_EVERYONE_BUTTON = 'UPDATE_ANSWERS_EVERYONE_BUTTON';\nexport const updateAnswersEveryoneButton = (isActive) => ({\n  type: UPDATE_ANSWERS_EVERYONE_BUTTON,\n  isActive,\n});\n\nexport const RESET_PICKER = 'RESET_PICKER';\nexport const resetPicker = () => ({ type: RESET_PICKER });\n\nexport const SET_PICKER_STATE = 'SET_PICKER_STATE';\nexport const setPickerState = (data, key) => ({\n  type: SET_PICKER_STATE,\n  data,\n  key,\n});\n\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const showLoader = () => ({ type: SHOW_LOADER });\n\nexport const HIDE_LOADER = 'HIDE_LOADER';\nexport const hideLoader = () => ({ type: HIDE_LOADER });\n","import {\n  CHANGE_PAGE, ENTER_APP, RESET_SESSION_COMPLETE,\n  SET_SESSION_KEY, SET_CLIENT_ID,\n} from '../actions';\n\nconst defaultState = {\n  page: '',\n  sessionId: '',\n  sessionKey: null,\n  clientId: null,\n};\n\nconst app = (state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_PAGE: {\n      const { page } = action;\n\n      return ({\n        ...state,\n        page,\n      });\n    }\n\n    case ENTER_APP: {\n      const { page, sessionId } = action;\n\n      return ({\n        page,\n        sessionId,\n      });\n    }\n\n    case SET_CLIENT_ID: {\n      const { clientId } = action;\n\n      return {\n        ...state,\n        clientId,\n      };\n    }\n\n    case RESET_SESSION_COMPLETE: {\n      return defaultState;\n    }\n\n    case SET_SESSION_KEY: {\n      const { sessionKey } = action;\n\n      return {\n        ...state,\n        sessionKey,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","export const EMF = 'EMF';\r\nexport const FINGERPRINTS = 'Fingerprints';\r\nexport const TEMPERATURE = 'Temperature';\r\nexport const GHOST_WRITING = 'Ghost Writing';\r\nexport const SPIRIT_BOX = 'Spirit Box';\r\nexport const GHOST_ORB = 'Ghost Orb';\r\n","import {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, GHOST_ORB, SPIRIT_BOX,\n} from './evidences';\n\nconst ghosts = [\n  {\n    name: 'Banshee',\n    evidences: [EMF, FINGERPRINTS, TEMPERATURE],\n    strength: 'Only targets one player at a time.',\n    weakness: 'Hates the Crucifix.',\n  },\n\n  {\n    name: 'Demon',\n    evidences: [TEMPERATURE, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely aggressive.',\n    weakness: 'Using right Ouija board questions does not drain sanity.',\n  },\n\n  {\n    name: 'Jinn',\n    evidences: [EMF, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Moves faster the further away you are from it.',\n    weakness: 'Cutting off the location’s power supply will limit the Jinn’s speed.',\n  },\n\n  {\n    name: 'Mare',\n    evidences: [TEMPERATURE, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Attacks more frequently in the dark, tends to switch off lights.',\n    weakness: 'More passive when lights are on.',\n  },\n\n  {\n    name: 'Oni',\n    evidences: [EMF, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely active and moves objects quickly.',\n    weakness: 'Extreme activity with lots of players nearby makes it easy to identify.',\n  },\n\n  {\n    name: 'Phantom',\n    evidences: [EMF, TEMPERATURE, GHOST_ORB],\n    strength: 'Looking at the Phantom will reduce your sanity.',\n    weakness: 'Capturing a photo will cause it to disappear, not during a hunt.',\n  },\n\n  {\n    name: 'Poltergeist',\n    evidences: [FINGERPRINTS, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Throws multiple objects about at once.',\n    weakness: 'Rooms without any stuff in to throw.',\n  },\n\n  {\n    name: 'Revenant',\n    evidences: [EMF, FINGERPRINTS, GHOST_WRITING],\n    strength: 'Attacks anyone, regardless of sanity levels.',\n    weakness: 'Moves extremely slowly when players hide.',\n  },\n\n  {\n    name: 'Shade',\n    evidences: [EMF, GHOST_WRITING, GHOST_ORB],\n    strength: 'Minimal activity, hard to find and detect.',\n    weakness: 'Does not hunt if players are in a group.',\n  },\n\n  {\n    name: 'Spirit',\n    evidences: [FINGERPRINTS, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'No strengths.',\n    weakness: 'Using smudge sticks prevent hunting for a long time.',\n  },\n\n  {\n    name: 'Wraith',\n    evidences: [FINGERPRINTS, TEMPERATURE, SPIRIT_BOX],\n    strength: 'Almost never touches the ground so it can\\'t be tracked by footsteps.',\n    weakness: 'Salt is toxic for Wraith.',\n  },\n\n  {\n    name: 'Yurei',\n    evidences: [TEMPERATURE, GHOST_WRITING, GHOST_ORB],\n    strength: 'Drains player sanity especially quickly.',\n    weakness: 'Smudge stick in the same room will stop the Yurei from moving.',\n  },\n\n  {\n    name: 'Yokai [BETA]',\n    evidences: [SPIRIT_BOX, GHOST_ORB, GHOST_WRITING],\n    strength: 'Talking near a Yokai will anger it and increase it\\'s chance of attacking.',\n    weakness: 'When hunting a Yokai can only hear voices close to it.',\n  },\n\n  {\n    name: 'Hantu [BETA]',\n    evidences: [FINGERPRINTS, GHOST_ORB, GHOST_WRITING],\n    strength: 'Moves faster in cooler areas.',\n    weakness: 'Moves slower in warmer areas.',\n  },\n];\n\nexport default ghosts;\n","import { filter, find, difference } from 'lodash';\nimport { customAlphabet } from 'nanoid';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const filterGhostsByEvidences = (ghosts, evidences) => (\n  filter(ghosts, (ghost) => difference(evidences, ghost.evidences).length === 0)\n);\n\nexport const setSessionId = (value) => {\n  cookies.set('sessionId', value, { maxAge: 28800 });\n};\n\nexport const getSessionId = () => cookies.get('sessionId');\n\nexport const resetSessionId = () => cookies.remove('sessionId');\n\nexport const getSessionById = (id, objects) => (\n  find(objects, (el) => el.sessionId === id) || null\n);\n\nexport const generateUuid = () => {\n  const nanoid = customAlphabet('0123456789', 6);\n  return nanoid();\n};\n\nexport const generateTimestamp = () => Math.floor(Date.now() / 1000);\n\nexport const isDevEnv = () => process.env.REACT_APP_ENV === 'dev';\n","import { get, remove } from 'lodash';\n\nimport {\n  FILTER_GHOSTS, UPDATE_SELECTED_QUESTS,\n  UPDATE_GHOST_NAME, RESET_PICKER, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  SET_PICKER_STATE,\n} from '../actions';\n\nimport ghosts from '../data/ghosts';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, CRUCIFIX, EVENT,\n  MOTION, PHOTO, SMUDGE, CANDLE, SALT, SANITY, HUNT, REPEL,\n} from '../data/quests';\n\nimport { filterGhostsByEvidences } from '../utils';\n\nconst defaultState = {\n  selectedEvidences: [],\n  ghosts,\n  evidenceButtons: {\n    [EMF]: false,\n    [FINGERPRINTS]: false,\n    [TEMPERATURE]: false,\n    [GHOST_WRITING]: false,\n    [SPIRIT_BOX]: false,\n    [GHOST_ORB]: false,\n  },\n  questButtons: {\n    [PHOTO]: false,\n    [MOTION]: false,\n    [CRUCIFIX]: false,\n    [EMF_QUEST]: false,\n    [SMUDGE]: false,\n    [EVENT]: false,\n    [CANDLE]: false,\n    [SALT]: false,\n    [SANITY]: false,\n    [HUNT]: false,\n    [REPEL]: false,\n  },\n  talksToEveryOne: false,\n  ghostName: '',\n  clients: [],\n};\n\nconst picker = (state = defaultState, action) => {\n  switch (action.type) {\n    case FILTER_GHOSTS: {\n      const { evidence, isActive } = action;\n      const { selectedEvidences } = state;\n\n      const updatedButtonsState = {\n        ...state.evidenceButtons,\n        [evidence]: isActive,\n      };\n\n      if (isActive) {\n        selectedEvidences.push(evidence);\n\n        const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n        return {\n          ...state,\n          ghosts: filteredGhosts,\n          selectedEvidences,\n          evidenceButtons: updatedButtonsState,\n        };\n      }\n\n      remove(selectedEvidences, (el) => el === evidence);\n\n      const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n      return {\n        ...state,\n        ghosts: filteredGhosts,\n        selectedEvidences,\n        evidenceButtons: updatedButtonsState,\n      };\n    }\n\n    case UPDATE_GHOST_NAME: {\n      const { name } = action;\n\n      return {\n        ...state,\n        ghostName: name,\n      };\n    }\n\n    case UPDATE_SELECTED_QUESTS: {\n      const { quest, isActive } = action;\n\n      return {\n        ...state,\n        questButtons: {\n          ...state.questButtons,\n          [quest]: isActive,\n        },\n      };\n    }\n\n    case UPDATE_ANSWERS_EVERYONE_BUTTON: {\n      const { isActive } = action;\n\n      return {\n        ...state,\n        talksToEveryOne: isActive,\n      };\n    }\n\n    case RESET_PICKER: {\n      return {\n        ...defaultState,\n        selectedEvidences: [],\n      };\n    }\n\n    case SET_PICKER_STATE: {\n      const { data } = action;\n      const selectedEvidences = get(data, 'selectedEvidences', []);\n\n      return {\n        ...state,\n        ...data,\n        selectedEvidences,\n        ghosts: filterGhostsByEvidences(ghosts, selectedEvidences),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default picker;\n","export const PHOTO = 'Photo';\nexport const EVENT = 'Event';\nexport const MOTION = 'Motion';\nexport const TEMPERATURE = 'Temperature';\nexport const CRUCIFIX = 'Crucifix';\nexport const EMF = 'EMF';\nexport const SMUDGE = 'Smudge';\nexport const CANDLE = 'Candle';\nexport const SALT = 'Salt';\nexport const SANITY = 'Sanity';\nexport const HUNT = 'Hunt';\nexport const REPEL = 'Repel';\n","import {\n  SHOW_LOADER, HIDE_LOADER,\n} from '../actions';\n\nconst loader = (state = false, action) => {\n  switch (action.type) {\n    case SHOW_LOADER: {\n      return true;\n    }\n\n    case HIDE_LOADER: {\n      return false;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default loader;\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport picker from './picker';\nimport loader from './loader';\n\nexport default combineReducers({\n  app,\n  picker,\n  loader,\n});\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\nimport { isDevEnv } from './utils';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_API_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSANGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(config);\n\nif (!isDevEnv()) {\n  firebase.analytics();\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const firebaseDB = firebase.database();\n","import { firebaseDB } from '../firebase';\nimport { generateTimestamp } from '../utils';\n\nclass FirebaseDataService {\n  getSessionById(sessionId) {\n    return firebaseDB.ref()\n      .orderByChild('sessionId')\n      .equalTo(sessionId)\n      .once('value');\n  }\n\n  createSession(session) {\n    return firebaseDB.ref().push({\n      ...session,\n      last_updated: generateTimestamp(),\n    });\n  }\n\n  updateSession(key, value) {\n    return firebaseDB.ref().child(key).update({\n      ...value,\n      last_updated: generateTimestamp(),\n    });\n  }\n\n  removeSession(key) {\n    return firebaseDB.ref().child(key).remove();\n  }\n\n  getRef() {\n    return firebaseDB.ref();\n  }\n}\n\nexport default new FirebaseDataService();\n","export const pageSelector = (state) => state.app.page;\n\nexport const sessionIdSelector = (state) => state.app.sessionId;\n\nexport const sessionKeySelector = (state) => state.app.sessionKey;\n\nexport const clientIdSelector = (state) => state.app.clientId;\n\nexport const selectedEvidencesSelector = (state) => state.picker.selectedEvidences;\n\nexport const questButtonsStateSelector = (state) => state.picker.questButtons;\n\nexport const clientsSelector = (state) => state.picker.clients;\n\nexport const isActiveButtonSelector = (state, type, name) => {\n  switch (type) {\n    case 'evidence': {\n      return state.picker.evidenceButtons[name];\n    }\n\n    case 'quest': {\n      return state.picker.questButtons[name];\n    }\n\n    case 'talksToEveryOne': {\n      return state.picker.talksToEveryOne;\n    }\n\n    default: {\n      return false;\n    }\n  }\n};\n\nexport const loaderStateSelector = (state) => state.loader;\n\nexport const pickerStateSelector = (state) => state.picker;\n","import {\n  call, put, takeEvery, select, takeLatest,\n} from 'redux-saga/effects';\n\nimport { get, remove, debounce } from 'lodash';\n\nimport firebaseDataService from '../services/firebaseData';\nimport {\n  sessionKeySelector, pickerStateSelector,\n  sessionIdSelector, clientIdSelector, clientsSelector,\n} from '../selectors';\n\nimport { getSessionById, generateUuid } from '../utils';\n\nimport {\n  ENTER_APP, RESET_SESSION, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  UPDATE_SELECTED_QUESTS, UPDATE_GHOST_NAME, FILTER_GHOSTS, RESET_PICKER,\n  setPickerState, resetSessionComplete, resetPicker, setSessionKey,\n  setClientId,\n} from '../actions';\n\nconst updateDebounced = debounce(firebaseDataService.updateSession, 800);\n\nconst createPickerStateObject = (picker, sessionId) => {\n  const {\n    selectedEvidences, evidenceButtons, questButtons,\n    talksToEveryOne, ghostName,\n  } = picker;\n\n  return {\n    sessionId,\n    selectedEvidences,\n    evidenceButtons,\n    questButtons,\n    talksToEveryOne,\n    ghostName,\n  };\n};\n\nfunction* enterApp(action) {\n  const { sessionId } = action;\n  const clientId = generateUuid();\n\n  if (sessionId !== '') {\n    const data = yield call(firebaseDataService.getSessionById, sessionId);\n    const session = getSessionById(sessionId, data.val());\n\n    if (session) {\n      const key = Object.keys(data.val())[0];\n      const clients = get(session, 'clients', []);\n      clients.push(clientId);\n\n      yield call(\n        firebaseDataService.updateSession,\n        key,\n        {\n          ...session,\n          clients,\n        },\n      );\n\n      yield put(setPickerState(session));\n      yield put(setSessionKey(key));\n    } else {\n      const picker = yield select(pickerStateSelector);\n      const objectToStore = createPickerStateObject(picker, sessionId);\n\n      const newSessionKey = yield call(\n        firebaseDataService.createSession,\n        {\n          ...objectToStore,\n          clients: [clientId],\n        },\n      );\n      yield put(setSessionKey(newSessionKey.key));\n    }\n\n    yield put(setClientId(clientId));\n  }\n}\n\nfunction* removeSession() {\n  const sessionId = yield select(sessionIdSelector);\n\n  if (sessionId === '') {\n    yield put(resetSessionComplete());\n    yield put(resetPicker());\n    return;\n  }\n\n  const clientId = yield select(clientIdSelector);\n  const key = yield select(sessionKeySelector);\n  const clients = yield select(clientsSelector);\n\n  if (clients.length < 2) {\n    yield call(firebaseDataService.removeSession, key);\n  } else {\n    const picker = yield select(pickerStateSelector);\n    const objectToStore = createPickerStateObject(picker, sessionId);\n\n    remove(clients, (el) => el === clientId);\n\n    yield call(\n      firebaseDataService.updateSession,\n      key,\n      {\n        ...objectToStore,\n        clients,\n      },\n    );\n  }\n\n  yield put(resetSessionComplete());\n  yield put(resetPicker());\n}\n\nfunction* handlePickerChange() {\n  const sessionKey = yield select(sessionKeySelector);\n  const sessionId = yield select(sessionIdSelector);\n  const picker = yield select(pickerStateSelector);\n\n  const objectToStore = createPickerStateObject(picker, sessionId);\n\n  if (sessionKey && sessionId !== '') {\n    yield call(updateDebounced, sessionKey, objectToStore);\n    return;\n  }\n\n  if (!sessionKey && sessionId.length > 0) {\n    const newSessionKey = yield call(firebaseDataService.createSession, objectToStore);\n    yield put(setSessionKey(newSessionKey.key));\n  }\n}\n\nfunction* rootSaga() {\n  yield takeEvery(ENTER_APP, enterApp);\n  yield takeEvery(RESET_SESSION, removeSession);\n  yield takeLatest([\n    UPDATE_GHOST_NAME,\n    UPDATE_SELECTED_QUESTS,\n    UPDATE_ANSWERS_EVERYONE_BUTTON,\n    FILTER_GHOSTS,\n    RESET_PICKER,\n  ], handlePickerChange);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\nimport rootSaga from './sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    reducer,\n    process.env.REACT_APP_ENV === 'dev'\n      ? composeWithDevTools(applyMiddleware(sagaMiddleware))\n      : applyMiddleware(sagaMiddleware),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles({\n  header: {\n    display: 'flex',\n    height: 40,\n    width: '100%',\n    background: 'rgba(33, 33, 33, .6)',\n    justifyContent: 'space-between',\n    position: 'fixed',\n    zIndex: 10,\n    color: 'white',\n  },\n\n  navWrapper: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n  },\n\n  sessionWrapper: {\n    display: 'flex',\n    flexWrap: 'nowrap',\n  },\n\n  sessionIdWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: 5,\n  },\n\n  headerButton: {\n    borderRadius: 5,\n  },\n\n  btnActive: {\n    color: '#f34423',\n    borderBottom: '2px solid #f34423',\n  },\n});\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clipboardCopy from 'clipboard-copy';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport IconButton from '@material-ui/core/IconButton';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport AssignmentIndOutlinedIcon from '@material-ui/icons/AssignmentIndOutlined';\n\nimport { changePage } from '../../actions';\nimport { pageSelector, sessionIdSelector } from '../../selectors';\n\nimport useStyles from './styles';\n\nconst Header = ({ resetSession }) => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n  const page = useSelector((state) => pageSelector(state));\n\n  const [copyHintText, setCopyHintText] = useState('Click to copy');\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const handleCopySessionIdClick = () => {\n    clipboardCopy(sessionId).then(() => {\n      setCopyHintText('Copied to clipboard!');\n\n      setTimeout(() => {\n        setCopyHintText('Click to copy');\n      }, 5000);\n    });\n  };\n\n  return (\n    <div className={css.header}>\n      <div className={css.navWrapper}>\n        <Tooltip title=\"Picker\">\n          <IconButton onClick={() => handleChangePage('picker')} className={css.headerButton}>\n            <AssignmentIndOutlinedIcon className={page === 'picker' ? css.btnActive : ''} />\n          </IconButton>\n        </Tooltip>\n        <Tooltip title=\"Questions\">\n          <IconButton onClick={() => handleChangePage('questions')} className={css.headerButton}>\n            <HelpOutlineIcon className={page === 'questions' ? css.btnActive : ''} />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <div className={css.sessionWrapper}>\n        {\n          sessionId !== '' && (\n            <div className={css.sessionIdWrapper}>\n              <Typography>Session id:</Typography>\n              <Tooltip title={copyHintText}>\n                <Button\n                  onClick={handleCopySessionIdClick}\n                  className={css.headerButton}\n                >\n                  {sessionId}\n                </Button>\n              </Tooltip>\n            </div>\n          )\n        }\n        <Tooltip title=\"Exit room\">\n          <IconButton onClick={() => resetSession()} className={css.headerButton}>\n            <ExitToAppIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  resetSession: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  button: {\n    color: (props) => props.color,\n    margin: '0 5px',\n  },\n\n  buttonSelected: {\n    color: (props) => props.color,\n    borderBottom: '2px solid red',\n    margin: '0 2px',\n  },\n});\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nimport { isActiveButtonSelector } from '../../../selectors';\r\n\r\nconst CustomButton = ({\r\n  type, text, handleClick, ...props\r\n}) => {\r\n  const css = useStyles(props);\r\n\r\n  const isActive = useSelector((state) => isActiveButtonSelector(state, type, text));\r\n\r\n  return (\r\n    <Button\r\n      className={isActive ? css.buttonSelected : css.button}\r\n      onClick={() => handleClick(text, !isActive)}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomButton;\r\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    width: 200,\n    padding: 20,\n  },\n\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  accent: {\n    color: 'green',\n  },\n\n  header: {\n    color: 'red',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport useStyles from './styles';\n\nconst GhostCard = ({ data, selectedEvidences }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const css = useStyles();\n\n  const {\n    name, strength, weakness, evidences,\n  } = data;\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return (() => {\n      setIsOpen(false);\n    });\n  }, []);\n\n  return (\n    <Fade in={isOpen} timeout={1000}>\n      <Box className={css.root}>\n        <Typography variant=\"h4\" className={css.header}>{name}</Typography>\n        <Typography variant=\"h6\" color=\"secondary\">Evidences</Typography>\n        {\n          evidences.map((el) => (\n            <Box key={el}>\n              <Typography className={selectedEvidences.includes(el) ? css.accent : ''}>{el}</Typography>\n            </Box>\n          ))\n        }\n        <Typography variant=\"h6\">Strength</Typography>\n        <Typography className={css.content}>{strength}</Typography>\n        <Typography variant=\"h6\">Weakness</Typography>\n        <Typography className={css.content}>{weakness}</Typography>\n      </Box>\n    </Fade>\n  );\n};\n\nGhostCard.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    evidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n    strength: PropTypes.string.isRequired,\n    weakness: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GhostCard;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 20px',\n    flexWrap: 'wrap',\n  },\n\n  evidencesButtonsWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px px',\n    flexWrap: 'wrap',\n    margin: '5px 0',\n  },\n\n  ghostsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: '0 50px',\n  },\n\n  noEvidenceWrapper: {\n    padding: 50,\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n}));\n","import React, { useEffect } from 'react';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, CRUCIFIX, EVENT,\n  MOTION, PHOTO, SMUDGE, CANDLE, SALT, SANITY, HUNT, REPEL,\n} from '../../data/quests';\n\nimport { pickerStateSelector, sessionIdSelector, sessionKeySelector } from '../../selectors';\n\nimport {\n  updateGhostName, filterGhosts, updateSelectedQuests,\n  resetPicker, updateAnswersEveryoneButton, resetSession as resetSessionAction, setPickerState,\n} from '../../actions';\n\nimport CustomButton from './Buttons/CustomButton';\nimport GhostCard from './GhostCard';\n\nimport useStyles from './styles';\nimport firebaseDataService from '../../services/firebaseData';\n\nconst Picker = () => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const pickerState = useSelector((state) => pickerStateSelector(state));\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n  const sessionKey = useSelector((state) => sessionKeySelector(state));\n\n  useEffect(() => {\n    const onUnload = () => {\n      dispatch(resetSessionAction());\n    };\n\n    window.addEventListener('beforeunload', onUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', onUnload);\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sessionKey) {\n      firebaseDataService.getRef().child(sessionKey).on('value', (data) => {\n        dispatch(setPickerState(data.val()));\n      });\n    }\n  }, [dispatch, sessionId, sessionKey]);\n\n  const handleGhostNameChange = (name) => {\n    dispatch(updateGhostName(name));\n  };\n\n  const handleEvidenceButtonClick = (evidence, isActive) => {\n    dispatch(filterGhosts(evidence, isActive));\n  };\n\n  const handleQuestButtonClick = (quest, isActive) => {\n    dispatch(updateSelectedQuests(quest, isActive));\n  };\n\n  const handleAnswersEveryoneButton = (text, isActive) => {\n    dispatch(updateAnswersEveryoneButton(isActive));\n  };\n\n  const handleReset = () => {\n    dispatch(resetPicker());\n  };\n\n  const { ghostName, ghosts, selectedEvidences } = pickerState;\n\n  return (\n    <Slide direction=\"right\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.header}>\n          <Typography variant=\"h3\">Ghost Picker</Typography>\n        </Box>\n        <Box className={css.inputWrapper}>\n          <TextField\n            id=\"ghost-name\"\n            label=\"Ghost Name\"\n            variant=\"outlined\"\n            value={ghostName}\n            onChange={(e) => handleGhostNameChange(e.target.value)}\n          />\n          <CustomButton type=\"talksToEveryOne\" color=\"grey\" text=\"Answers everyone\" handleClick={handleAnswersEveryoneButton} />\n          <CustomButton type=\"reset\" color=\"grey\" text=\"Reset\" handleClick={handleReset} />\n        </Box>\n        <Typography variant=\"h4\">Evidences</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"evidence\" color=\"red\" text={EMF} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"green\" text={FINGERPRINTS} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"dodgerblue\" text={TEMPERATURE} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"purple\" text={GHOST_WRITING} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"cadetblue\" text={SPIRIT_BOX} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"brown\" text={GHOST_ORB} handleClick={handleEvidenceButtonClick} />\n        </Box>\n        <Typography variant=\"h4\">Objectives</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"quest\" color=\"grey\" text={CRUCIFIX} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EVENT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={MOTION} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={PHOTO} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EMF_QUEST} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SMUDGE} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={CANDLE} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SALT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SANITY} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={HUNT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={REPEL} handleClick={handleQuestButtonClick} />\n        </Box>\n        <Box className={css.ghostsWrapper}>\n          {\n            ghosts.map((ghost) => (\n              <GhostCard data={ghost} key={ghost.name} selectedEvidences={selectedEvidences} />\n            ))\n          }\n          {\n            isEmpty(ghosts) ? (\n              <Box className={css.noEvidenceWrapper}>\n                <Typography variant=\"h6\">\n                  No ghosts with such combination of evidences\n                </Typography>\n              </Box>\n            ) : null\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nexport default Picker;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n    overflowX: 'hidden',\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n\n  questionsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    alignItems: 'flex-start',\n    justifyContent: 'space-around',\n    '@media screen and (max-width: 880px)': {\n      justifyContent: 'flex-start',\n    },\n  },\n\n  columnWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n    padding: '0 30px',\n  },\n\n  questionHeader: {\n    color: 'red',\n  },\n}));\n","import React from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\n\nimport questions from '../../data/questions.json';\n\nimport useStyles from './styles';\n\nconst Questions = () => {\n  const css = useStyles();\n\n  return (\n    <Slide direction=\"left\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.header}>\n          <Typography variant=\"h3\" className={css.pageLabel}>Questions</Typography>\n        </Box>\n        <Box className={css.questionsWrapper}>\n          {\n            Object.keys(questions).map((key) => (\n              <Fade in timeout={1000} key={key}>\n                <Box className={css.columnWrapper} key={key}>\n                  <Typography variant=\"h4\" className={css.questionHeader} key={key}>{key}</Typography>\n                  {\n                    questions[key].map((el) => (\n                      <Typography key={el}>{el}</Typography>\n                    ))\n                  }\n                </Box>\n              </Fade>\n            ))\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nexport default Questions;\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles({\r\n  activeAbsolute: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 20,\r\n    backgroundColor: 'rgba(0, 0, 0, .6)',\r\n  },\r\n\r\n  activeBox: {\r\n    width: '100%',\r\n  },\r\n\r\n  disabled: {\r\n    display: 'none',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { loaderStateSelector } from '../../selectors';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Loader = ({ type }) => {\r\n  const css = useStyles();\r\n  const isShown = useSelector((state) => loaderStateSelector(state));\r\n\r\n  const wrapperStyle = type === 'linear' ? css.activeBox : css.activeAbsolute;\r\n  const isActive = isShown ? '' : css.disabled;\r\n\r\n  return (\r\n    <div className={`${wrapperStyle} ${isActive}`}>\r\n      {\r\n        type === 'linear' ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <CircularProgress color=\"secondary\" />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(({ palette }) => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    background: palette.primary.main,\r\n    color: palette.primary.contrastText,\r\n  },\r\n\r\n  subWrapper: {\r\n    padding: 5,\r\n    backgroundColor: 'rgba(0, 0, 0, .3)',\r\n    borderRadius: 10,\r\n  },\r\n\r\n  inputWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '10px 20px 10px 20px',\r\n  },\r\n\r\n  submitButton: {\r\n    marginTop: 5,\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { isEmpty } from 'lodash';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport Loader from '../Loader';\n\nimport { enterApp, showLoader, hideLoader } from '../../actions';\nimport { getSessionId, setSessionId, generateUuid } from '../../utils';\nimport firebaseDataService from '../../services/firebaseData';\n\nimport useStyles from './styles';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const [sessionId, changeSessionId] = useState('');\n  const [session, setSession] = useState({});\n  const [error, setError] = useState(null);\n  const [isJoinButtonPressed, setIsJoinButtonPressed] = useState(false);\n\n  const sessionIdCookie = getSessionId();\n\n  useEffect(() => {\n    if (sessionIdCookie || sessionIdCookie === '') {\n      dispatch(enterApp('picker', sessionIdCookie));\n    }\n  }, [dispatch, sessionIdCookie]);\n\n  useEffect(() => {\n    if (session && !isEmpty(session)) {\n      setSessionId(sessionId);\n      dispatch(enterApp('picker', sessionId));\n    }\n  });\n\n  useEffect(() => {\n    if (!session) {\n      setError('Session not found');\n    }\n  }, [session]);\n\n  const validate = () => {\n    if (sessionId.length !== 6) {\n      setError('Session id consists of 6 digits');\n      return false;\n    }\n\n    if (!(/^[0-9]+$/).test(sessionId)) {\n      setError('Wrong ID format');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSessionIdChange = (value) => {\n    setSession({});\n    setError(null);\n    changeSessionId(value);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    const id = generateUuid();\n    dispatch(enterApp('picker', id));\n    setSessionId(id);\n  };\n\n  const handleClickJoin = (state) => {\n    setIsJoinButtonPressed(state);\n  };\n\n  const handleJoinSession = () => {\n    if (validate()) {\n      dispatch(showLoader());\n      firebaseDataService.getSessionById(sessionId).then((data) => {\n        dispatch(hideLoader());\n        setSession(data.val());\n      });\n    }\n  };\n\n  const handleSoloLobby = () => {\n    setSessionId('');\n    dispatch(enterApp('picker', ''));\n  };\n\n  return (\n    <Box className={css.wrapper}>\n      <Box className={css.subWrapper}>\n        {\n          isJoinButtonPressed ? (\n            <Box className={css.inputWrapper}>\n              <TextField\n                id=\"sessionID\"\n                label=\"Session ID\"\n                variant=\"outlined\"\n                value={sessionId}\n                error={!!error}\n                helperText={error}\n                onChange={(e) => handleSessionIdChange(e.target.value)}\n              />\n              <Button className={css.submitButton} onClick={handleJoinSession}>Join</Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={() => handleClickJoin(false)}\n              >\n                Back\n              </Button>\n            </Box>\n          ) : (\n            <Box className={css.inputWrapper}>\n              <Button\n                className={css.submitButton}\n                onClick={handleCreateClick}\n              >\n                Create online session\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={() => handleClickJoin(true)}\n              >\n                Join online session\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={handleSoloLobby}\n              >\n                Enter solo session\n              </Button>\n            </Box>\n          )\n        }\n        <Loader type=\"linear\" />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Login;\n","// import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n\r\n    secondary: {\r\n      main: grey[50],\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiTypography: {\r\n      body1: {\r\n        fontFamily: 'SyneMono',\r\n        '@media screen and (max-width: 1000px)': {\r\n        },\r\n      },\r\n\r\n      h3: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n\r\n      h4: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n\r\n      h5: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n\r\n      h6: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  changePage, resetSession,\n} from '../actions';\n\nimport { pageSelector } from '../selectors';\n\nimport { resetSessionId } from '../utils';\n\nimport Header from './Header';\nimport Picker from './Picker';\nimport Questions from './Questions';\nimport Login from './Login';\n\nimport theme from './theme';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const page = useSelector((state) => pageSelector(state));\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const handleSessionReset = () => {\n    resetSessionId();\n    dispatch(resetSession());\n  };\n\n  const renderPage = () => {\n    switch (page) {\n      case 'picker':\n        return (\n          <>\n            <Header resetSession={handleSessionReset} />\n            <Picker\n              changePage={handleChangePage}\n              resetSession={handleSessionReset}\n            />\n          </>\n        );\n      case 'questions':\n        return (\n          <>\n            <Header resetSession={handleSessionReset} />\n            <Questions changePage={handleChangePage} />\n          </>\n        );\n      default:\n        return (\n          <Login />\n        );\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {renderPage()}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from './store';\n\nimport App from './components/App';\n\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}