{"version":3,"sources":["actions/index.js","reducers/app.js","data/evidences.js","data/ghosts.js","utils/index.js","reducers/picker.js","data/quests.js","reducers/loader.js","reducers/index.js","firebase.js","services/firebaseData.js","selectors/index.js","sagas/index.js","store.js","components/Picker/Buttons/styles.js","components/Picker/Buttons/CustomButton.jsx","components/Picker/GhostCard/styles.js","components/Picker/GhostCard/index.jsx","components/Picker/styles.js","components/Picker/index.jsx","components/Questions/styles.js","components/Questions/index.jsx","components/Loader/styles.js","components/Loader/index.jsx","components/Login/styles.js","components/Login/index.jsx","components/theme.js","components/App.jsx","index.jsx"],"names":["enterApp","page","sessionId","type","setSessionKey","sessionKey","setClientId","clientId","setPickerState","data","key","defaultState","app","state","action","EMF","ghosts","name","evidences","strength","weakness","cookies","Cookies","filterGhostsByEvidences","filter","ghost","difference","length","setSessionId","value","set","maxAge","getSessionById","id","objects","find","el","generateUuid","customAlphabet","nanoid","generateTimestamp","Math","floor","Date","now","selectedEvidences","evidenceButtons","questButtons","talksToEveryOne","ghostName","clients","picker","evidence","isActive","updatedButtonsState","push","filteredGhosts","remove","quest","get","loader","combineReducers","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","database","ref","orderByChild","equalTo","once","session","last_updated","child","update","sessionIdSelector","sessionKeySelector","clientIdSelector","clientsSelector","pickerStateSelector","removeSession","handlePickerChange","rootSaga","updateDebounced","debounce","firebaseDataService","updateSession","createPickerStateObject","call","val","Object","keys","put","select","objectToStore","createSession","newSessionKey","takeEvery","takeLatest","configureStore","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","makeStyles","button","color","props","margin","buttonSelected","border","CustomButton","text","handleClick","css","useStyles","useSelector","isActiveButtonSelector","Button","className","onClick","root","width","padding","content","display","alignItems","accent","header","GhostCard","useState","isOpen","setIsOpen","useEffect","Fade","in","timeout","Box","Typography","variant","map","includes","palette","wrapper","flexDirection","justifyContent","minHeight","background","primary","main","contrastText","inputWrapper","flexWrap","evidencesButtonsWrapper","ghostsWrapper","alignContent","noEvidenceWrapper","marginTop","sessionControls","height","position","zIndex","sessionIdWrapper","marginRight","Picker","changePage","resetSession","dispatch","useDispatch","pickerState","copyHintText","setCopyHintText","onUnload","window","addEventListener","removeEventListener","getRef","on","handleEvidenceButtonClick","filterGhosts","handleQuestButtonClick","updateSelectedQuests","Slide","direction","mountOnEnter","unmountOnExit","Tooltip","title","clipboardCopy","then","setTimeout","IconButton","TextField","label","onChange","e","target","updateGhostName","updateAnswersEveryoneButton","isEmpty","overflowX","pageLabel","questionsWrapper","columnWrapper","questionHeader","Questions","questions","activeAbsolute","backgroundColor","activeBox","disabled","Loader","isShown","loaderStateSelector","wrapperStyle","LinearProgress","CircularProgress","subWrapper","borderRadius","submitButton","Login","changeSessionId","setSession","error","setError","isJoinButtonPressed","setIsJoinButtonPressed","sessionIdCookie","handleClickJoin","helperText","test","Divider","preventDefault","createMuiTheme","grey","secondary","overrides","MuiTypography","body1","fontFamily","h3","h4","h5","h6","App","pageSelector","handleChangePage","newPage","handleSessionReset","ThemeProvider","theme","renderPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec8d993c.chunk.js","sourcesContent":["export const ENTER_APP = 'ENTER_APP';\nexport const enterApp = (page, sessionId) => ({\n  type: ENTER_APP,\n  page,\n  sessionId,\n});\n\nexport const SET_SESSION_KEY = 'SET_SESSION_KEY';\nexport const setSessionKey = (sessionKey) => ({\n  type: SET_SESSION_KEY,\n  sessionKey,\n});\n\nexport const SET_CLIENT_ID = 'SET_CLIENT_ID';\nexport const setClientId = (clientId) => ({\n  type: SET_CLIENT_ID,\n  clientId,\n});\n\nexport const RESET_SESSION = 'RESET_SESSION';\nexport const resetSession = () => ({ type: RESET_SESSION });\n\nexport const RESET_SESSION_COMPLETE = 'RESET_SESSION_COMPLETE';\nexport const resetSessionComplete = () => ({ type: RESET_SESSION_COMPLETE });\n\nexport const CHANGE_PAGE = 'CHANGE_PAGE';\nexport const changePage = (page) => ({\n  type: CHANGE_PAGE,\n  page,\n});\n\nexport const FILTER_GHOSTS = 'FILTER_GHOSTS';\nexport const filterGhosts = (evidence, isActive) => ({\n  type: FILTER_GHOSTS,\n  evidence,\n  isActive,\n});\n\nexport const UPDATE_SELECTED_QUESTS = 'UPDATE_SELECTED_QUESTS';\nexport const updateSelectedQuests = (quest, isActive) => ({\n  type: UPDATE_SELECTED_QUESTS,\n  quest,\n  isActive,\n});\n\nexport const UPDATE_GHOST_NAME = 'UPDATE_GHOST_NAME';\nexport const updateGhostName = (name) => ({\n  type: UPDATE_GHOST_NAME,\n  name,\n});\n\nexport const UPDATE_ANSWERS_EVERYONE_BUTTON = 'UPDATE_ANSWERS_EVERYONE_BUTTON';\nexport const updateAnswersEveryoneButton = (isActive) => ({\n  type: UPDATE_ANSWERS_EVERYONE_BUTTON,\n  isActive,\n});\n\nexport const RESET_PICKER = 'RESET_PICKER';\nexport const resetPicker = () => ({ type: RESET_PICKER });\n\nexport const SET_PICKER_STATE = 'SET_PICKER_STATE';\nexport const setPickerState = (data, key) => ({\n  type: SET_PICKER_STATE,\n  data,\n  key,\n});\n\nexport const SHOW_LOADER = 'SHOW_LOADER';\nexport const showLoader = () => ({ type: SHOW_LOADER });\n\nexport const HIDE_LOADER = 'HIDE_LOADER';\nexport const hideLoader = () => ({ type: HIDE_LOADER });\n","import {\n  CHANGE_PAGE, ENTER_APP, RESET_SESSION_COMPLETE,\n  SET_SESSION_KEY, SET_CLIENT_ID,\n} from '../actions';\n\nconst defaultState = {\n  page: '',\n  sessionId: '',\n  sessionKey: null,\n  clientId: null,\n};\n\nconst app = (state = defaultState, action) => {\n  switch (action.type) {\n    case CHANGE_PAGE: {\n      const { page } = action;\n\n      return ({\n        ...state,\n        page,\n      });\n    }\n\n    case ENTER_APP: {\n      const { page, sessionId } = action;\n\n      return ({\n        page,\n        sessionId,\n      });\n    }\n\n    case SET_CLIENT_ID: {\n      const { clientId } = action;\n\n      return {\n        ...state,\n        clientId,\n      };\n    }\n\n    case RESET_SESSION_COMPLETE: {\n      return defaultState;\n    }\n\n    case SET_SESSION_KEY: {\n      const { sessionKey } = action;\n\n      return {\n        ...state,\n        sessionKey,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","export const EMF = 'EMF';\r\nexport const FINGERPRINTS = 'Fingerprints';\r\nexport const TEMPERATURE = 'Temperature';\r\nexport const GHOST_WRITING = 'Ghost Writing';\r\nexport const SPIRIT_BOX = 'Spirit Box';\r\nexport const GHOST_ORB = 'Ghost Orb';\r\n","import {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, GHOST_ORB, SPIRIT_BOX,\n} from './evidences';\n\nconst ghosts = [\n  {\n    name: 'Banshee',\n    evidences: [EMF, FINGERPRINTS, TEMPERATURE],\n    strength: 'Only targets one player at a time.',\n    weakness: 'Hates the Crucifix.',\n  },\n\n  {\n    name: 'Demon',\n    evidences: [TEMPERATURE, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely aggressive.',\n    weakness: 'Using right Ouija board questions does not drain sanity.',\n  },\n\n  {\n    name: 'Jinn',\n    evidences: [EMF, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Moves faster the further away you are from it.',\n    weakness: 'Cutting off the location’s power supply will limit the Jinn’s speed.',\n  },\n\n  {\n    name: 'Mare',\n    evidences: [TEMPERATURE, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Attacks more frequently in the dark, tends to switch off lights.',\n    weakness: 'More passive when lights are on.',\n  },\n\n  {\n    name: 'Oni',\n    evidences: [EMF, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'Extremely active and moves objects quickly.',\n    weakness: 'Extreme activity with lots of players nearby makes it easy to identify.',\n  },\n\n  {\n    name: 'Phantom',\n    evidences: [EMF, TEMPERATURE, GHOST_ORB],\n    strength: 'Looking at the Phantom will reduce your sanity.',\n    weakness: 'Capturing a photo will cause it to disappear, not during a hunt.',\n  },\n\n  {\n    name: 'Poltergeist',\n    evidences: [FINGERPRINTS, SPIRIT_BOX, GHOST_ORB],\n    strength: 'Throws multiple objects about at once.',\n    weakness: 'Rooms without any stuff in to throw.',\n  },\n\n  {\n    name: 'Revenant',\n    evidences: [EMF, FINGERPRINTS, GHOST_WRITING],\n    strength: 'Attacks anyone, regardless of sanity levels.',\n    weakness: 'Moves extremely slowly when players hide.',\n  },\n\n  {\n    name: 'Shade',\n    evidences: [EMF, GHOST_WRITING, GHOST_ORB],\n    strength: 'Minimal activity, hard to find and detect.',\n    weakness: 'Does not hunt if players are in a group.',\n  },\n\n  {\n    name: 'Spirit',\n    evidences: [FINGERPRINTS, GHOST_WRITING, SPIRIT_BOX],\n    strength: 'No strengths.',\n    weakness: 'Using smudge sticks prevent hunting for a long time.',\n  },\n\n  {\n    name: 'Wraith',\n    evidences: [FINGERPRINTS, TEMPERATURE, SPIRIT_BOX],\n    strength: 'Almost never touches the ground so it can\\'t be tracked by footsteps.',\n    weakness: 'Salt is toxic for Wraith.',\n  },\n\n  {\n    name: 'Yurei',\n    evidences: [TEMPERATURE, GHOST_WRITING, GHOST_ORB],\n    strength: 'Drains player sanity especially quickly.',\n    weakness: 'Smudge stick in the same room will stop the Yurei from moving.',\n  },\n\n  {\n    name: 'Yokai',\n    evidences: [SPIRIT_BOX, GHOST_ORB, GHOST_WRITING],\n    strength: 'Talking near a Yokai will anger it and increase it\\'s chance of attacking.',\n    weakness: 'When hunting a Yokai can only hear voices close to it.',\n  },\n\n  {\n    name: 'Hantu',\n    evidences: [FINGERPRINTS, GHOST_ORB, GHOST_WRITING],\n    strength: 'Moves faster in cooler areas.',\n    weakness: 'Moves slower in warmer areas.',\n  },\n];\n\nexport default ghosts;\n","import { filter, find, difference } from 'lodash';\nimport { customAlphabet } from 'nanoid';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nexport const filterGhostsByEvidences = (ghosts, evidences) => (\n  filter(ghosts, (ghost) => difference(evidences, ghost.evidences).length === 0)\n);\n\nexport const setSessionId = (value) => {\n  cookies.set('sessionId', value, { maxAge: 28800 });\n};\n\nexport const getSessionId = () => cookies.get('sessionId');\n\nexport const resetSessionId = () => cookies.remove('sessionId');\n\nexport const getSessionById = (id, objects) => (\n  find(objects, (el) => el.sessionId === id) || null\n);\n\nexport const generateUuid = () => {\n  const nanoid = customAlphabet('0123456789', 6);\n  return nanoid();\n};\n\nexport const generateTimestamp = () => Math.floor(Date.now() / 1000);\n\nexport const isDevEnv = () => process.env.REACT_APP_ENV === 'dev';\n","import { get, remove } from 'lodash';\n\nimport {\n  FILTER_GHOSTS, UPDATE_SELECTED_QUESTS,\n  UPDATE_GHOST_NAME, RESET_PICKER, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  SET_PICKER_STATE,\n} from '../actions';\n\nimport ghosts from '../data/ghosts';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, TEMPERATURE as TEMPERATURE_QUEST, CRUCIFIX, EVENT,\n  MOTION, PHOTO, SINK, SMUDGE, CANDLE, SALT, SANITY, HUNT, REPEL,\n} from '../data/quests';\n\nimport { filterGhostsByEvidences } from '../utils';\n\nconst defaultState = {\n  selectedEvidences: [],\n  ghosts,\n  evidenceButtons: {\n    [EMF]: false,\n    [FINGERPRINTS]: false,\n    [TEMPERATURE]: false,\n    [GHOST_WRITING]: false,\n    [SPIRIT_BOX]: false,\n    [GHOST_ORB]: false,\n  },\n  questButtons: {\n    [SINK]: false,\n    [PHOTO]: false,\n    [MOTION]: false,\n    [TEMPERATURE_QUEST]: false,\n    [CRUCIFIX]: false,\n    [EMF_QUEST]: false,\n    [SMUDGE]: false,\n    [EVENT]: false,\n    [CANDLE]: false,\n    [SALT]: false,\n    [SANITY]: false,\n    [HUNT]: false,\n    [REPEL]: false,\n  },\n  talksToEveryOne: false,\n  ghostName: '',\n  clients: [],\n};\n\nconst picker = (state = defaultState, action) => {\n  switch (action.type) {\n    case FILTER_GHOSTS: {\n      const { evidence, isActive } = action;\n      const { selectedEvidences } = state;\n\n      const updatedButtonsState = {\n        ...state.evidenceButtons,\n        [evidence]: isActive,\n      };\n\n      if (isActive) {\n        selectedEvidences.push(evidence);\n\n        const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n        return {\n          ...state,\n          ghosts: filteredGhosts,\n          selectedEvidences,\n          evidenceButtons: updatedButtonsState,\n        };\n      }\n\n      remove(selectedEvidences, (el) => el === evidence);\n\n      const filteredGhosts = filterGhostsByEvidences(ghosts, selectedEvidences);\n\n      return {\n        ...state,\n        ghosts: filteredGhosts,\n        selectedEvidences,\n        evidenceButtons: updatedButtonsState,\n      };\n    }\n\n    case UPDATE_GHOST_NAME: {\n      const { name } = action;\n\n      return {\n        ...state,\n        ghostName: name,\n      };\n    }\n\n    case UPDATE_SELECTED_QUESTS: {\n      const { quest, isActive } = action;\n\n      return {\n        ...state,\n        questButtons: {\n          ...state.questButtons,\n          [quest]: isActive,\n        },\n      };\n    }\n\n    case UPDATE_ANSWERS_EVERYONE_BUTTON: {\n      const { isActive } = action;\n\n      return {\n        ...state,\n        talksToEveryOne: isActive,\n      };\n    }\n\n    case RESET_PICKER: {\n      return {\n        ...defaultState,\n        selectedEvidences: [],\n      };\n    }\n\n    case SET_PICKER_STATE: {\n      const { data } = action;\n      const selectedEvidences = get(data, 'selectedEvidences', []);\n\n      return {\n        ...state,\n        ...data,\n        selectedEvidences,\n        ghosts: filterGhostsByEvidences(ghosts, selectedEvidences),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default picker;\n","export const SINK = 'Sink';\nexport const PHOTO = 'Photo';\nexport const EVENT = 'Event';\nexport const MOTION = 'Motion';\nexport const TEMPERATURE = 'Temperature';\nexport const CRUCIFIX = 'Crucifix';\nexport const EMF = 'EMF';\nexport const SMUDGE = 'Smudge';\nexport const CANDLE = 'Candle';\nexport const SALT = 'Salt';\nexport const SANITY = 'Sanity';\nexport const HUNT = 'Hunt';\nexport const REPEL = 'Repel';\n","import {\n  SHOW_LOADER, HIDE_LOADER,\n} from '../actions';\n\nconst loader = (state = false, action) => {\n  switch (action.type) {\n    case SHOW_LOADER: {\n      return true;\n    }\n\n    case HIDE_LOADER: {\n      return false;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default loader;\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport picker from './picker';\nimport loader from './loader';\n\nexport default combineReducers({\n  app,\n  picker,\n  loader,\n});\n","import firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\nimport { isDevEnv } from './utils';\n\nconst config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_API_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSANGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(config);\n\nif (!isDevEnv()) {\n  firebase.analytics();\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport const firebaseDB = firebase.database();\n","import { firebaseDB } from '../firebase';\nimport { generateTimestamp } from '../utils';\n\nclass FirebaseDataService {\n  getSessionById(sessionId) {\n    return firebaseDB.ref()\n      .orderByChild('sessionId')\n      .equalTo(sessionId)\n      .once('value');\n  }\n\n  createSession(session) {\n    return firebaseDB.ref().push({\n      ...session,\n      last_updated: generateTimestamp(),\n    });\n  }\n\n  updateSession(key, value) {\n    return firebaseDB.ref().child(key).update({\n      ...value,\n      last_updated: generateTimestamp(),\n    });\n  }\n\n  removeSession(key) {\n    return firebaseDB.ref().child(key).remove();\n  }\n\n  getRef() {\n    return firebaseDB.ref();\n  }\n}\n\nexport default new FirebaseDataService();\n","export const pageSelector = (state) => state.app.page;\n\nexport const sessionIdSelector = (state) => state.app.sessionId;\n\nexport const sessionKeySelector = (state) => state.app.sessionKey;\n\nexport const clientIdSelector = (state) => state.app.clientId;\n\nexport const selectedEvidencesSelector = (state) => state.picker.selectedEvidences;\n\nexport const questButtonsStateSelector = (state) => state.picker.questButtons;\n\nexport const clientsSelector = (state) => state.picker.clients;\n\nexport const isActiveButtonSelector = (state, type, name) => {\n  switch (type) {\n    case 'evidence': {\n      return state.picker.evidenceButtons[name];\n    }\n\n    case 'quest': {\n      return state.picker.questButtons[name];\n    }\n\n    case 'talksToEveryOne': {\n      return state.picker.talksToEveryOne;\n    }\n\n    default: {\n      return false;\n    }\n  }\n};\n\nexport const loaderStateSelector = (state) => state.loader;\n\nexport const pickerStateSelector = (state) => state.picker;\n","import {\n  call, put, takeEvery, select, takeLatest,\n} from 'redux-saga/effects';\n\nimport { get, remove, debounce } from 'lodash';\n\nimport firebaseDataService from '../services/firebaseData';\nimport {\n  sessionKeySelector, pickerStateSelector,\n  sessionIdSelector, clientIdSelector, clientsSelector,\n} from '../selectors';\n\nimport { getSessionById, generateUuid } from '../utils';\n\nimport {\n  ENTER_APP, RESET_SESSION, UPDATE_ANSWERS_EVERYONE_BUTTON,\n  UPDATE_SELECTED_QUESTS, UPDATE_GHOST_NAME, FILTER_GHOSTS, RESET_PICKER,\n  setPickerState, resetSessionComplete, resetPicker, setSessionKey,\n  setClientId,\n} from '../actions';\n\nconst updateDebounced = debounce(firebaseDataService.updateSession, 800);\n\nconst createPickerStateObject = (picker, sessionId) => {\n  const {\n    selectedEvidences, evidenceButtons, questButtons,\n    talksToEveryOne, ghostName,\n  } = picker;\n\n  return {\n    sessionId,\n    selectedEvidences,\n    evidenceButtons,\n    questButtons,\n    talksToEveryOne,\n    ghostName,\n  };\n};\n\nfunction* enterApp(action) {\n  const { sessionId } = action;\n  const clientId = generateUuid();\n\n  if (sessionId !== '') {\n    const data = yield call(firebaseDataService.getSessionById, sessionId);\n    const session = getSessionById(sessionId, data.val());\n\n    if (session) {\n      const key = Object.keys(data.val())[0];\n      const clients = get(session, 'clients', []);\n      clients.push(clientId);\n\n      yield call(\n        firebaseDataService.updateSession,\n        key,\n        {\n          ...session,\n          clients,\n        },\n      );\n\n      yield put(setPickerState(session));\n      yield put(setSessionKey(key));\n    } else {\n      const picker = yield select(pickerStateSelector);\n      const objectToStore = createPickerStateObject(picker, sessionId);\n\n      const newSessionKey = yield call(\n        firebaseDataService.createSession,\n        {\n          ...objectToStore,\n          clients: [clientId],\n        },\n      );\n      yield put(setSessionKey(newSessionKey.key));\n    }\n\n    yield put(setClientId(clientId));\n  }\n}\n\nfunction* removeSession() {\n  const sessionId = yield select(sessionIdSelector);\n\n  if (sessionId === '') {\n    yield put(resetSessionComplete());\n    yield put(resetPicker());\n    return;\n  }\n\n  const clientId = yield select(clientIdSelector);\n  const key = yield select(sessionKeySelector);\n  const clients = yield select(clientsSelector);\n\n  if (clients.length < 2) {\n    yield call(firebaseDataService.removeSession, key);\n  } else {\n    const picker = yield select(pickerStateSelector);\n    const objectToStore = createPickerStateObject(picker, sessionId);\n\n    remove(clients, (el) => el === clientId);\n\n    yield call(\n      firebaseDataService.updateSession,\n      key,\n      {\n        ...objectToStore,\n        clients,\n      },\n    );\n  }\n\n  yield put(resetSessionComplete());\n  yield put(resetPicker());\n}\n\nfunction* handlePickerChange() {\n  const sessionKey = yield select(sessionKeySelector);\n  const sessionId = yield select(sessionIdSelector);\n  const picker = yield select(pickerStateSelector);\n\n  const objectToStore = createPickerStateObject(picker, sessionId);\n\n  if (sessionKey && sessionId !== '') {\n    yield call(updateDebounced, sessionKey, objectToStore);\n    return;\n  }\n\n  if (!sessionKey && sessionId.length > 0) {\n    const newSessionKey = yield call(firebaseDataService.createSession, objectToStore);\n    yield put(setSessionKey(newSessionKey.key));\n  }\n}\n\nfunction* rootSaga() {\n  yield takeEvery(ENTER_APP, enterApp);\n  yield takeEvery(RESET_SESSION, removeSession);\n  yield takeLatest([\n    UPDATE_GHOST_NAME,\n    UPDATE_SELECTED_QUESTS,\n    UPDATE_ANSWERS_EVERYONE_BUTTON,\n    FILTER_GHOSTS,\n    RESET_PICKER,\n  ], handlePickerChange);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport reducer from './reducers';\nimport rootSaga from './sagas';\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n\n  const store = createStore(\n    reducer,\n    process.env.REACT_APP_ENV === 'dev'\n      ? composeWithDevTools(applyMiddleware(sagaMiddleware))\n      : applyMiddleware(sagaMiddleware),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  button: {\r\n    color: (props) => props.color,\r\n    margin: '0 5px',\r\n  },\r\n\r\n  buttonSelected: {\r\n    color: (props) => props.color,\r\n    border: '2px solid red',\r\n    margin: '0 2px',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport useStyles from './styles';\r\n\r\nimport { isActiveButtonSelector } from '../../../selectors';\r\n\r\nconst CustomButton = ({\r\n  type, text, handleClick, ...props\r\n}) => {\r\n  const css = useStyles(props);\r\n\r\n  const isActive = useSelector((state) => isActiveButtonSelector(state, type, text));\r\n\r\n  return (\r\n    <Button\r\n      className={isActive ? css.buttonSelected : css.button}\r\n      onClick={() => handleClick(text, !isActive)}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nCustomButton.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomButton;\r\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    width: 200,\n    padding: 20,\n  },\n\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  accent: {\n    color: 'green',\n  },\n\n  header: {\n    color: 'red',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport useStyles from './styles';\n\nconst GhostCard = ({ data, selectedEvidences }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const css = useStyles();\n\n  const {\n    name, strength, weakness, evidences,\n  } = data;\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return (() => {\n      setIsOpen(false);\n    });\n  }, []);\n\n  return (\n    <Fade in={isOpen} timeout={1000}>\n      <Box className={css.root}>\n        <Typography variant=\"h4\" className={css.header}>{name}</Typography>\n        <Typography variant=\"h6\" color=\"secondary\">Evidences</Typography>\n        {\n          evidences.map((el) => (\n            <Box key={el}>\n              <Typography className={selectedEvidences.includes(el) ? css.accent : ''}>{el}</Typography>\n            </Box>\n          ))\n        }\n        <Typography variant=\"h6\">Strength</Typography>\n        <Typography className={css.content}>{strength}</Typography>\n        <Typography variant=\"h6\">Weakness</Typography>\n        <Typography className={css.content}>{weakness}</Typography>\n      </Box>\n    </Fade>\n  );\n};\n\nGhostCard.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    evidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n    strength: PropTypes.string.isRequired,\n    weakness: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GhostCard;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: 0,\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 20px',\n    flexWrap: 'wrap',\n  },\n\n  evidencesButtonsWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: '20px px',\n    flexWrap: 'wrap',\n  },\n\n  ghostsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: '0 50px',\n  },\n\n  noEvidenceWrapper: {\n    padding: 50,\n  },\n\n  header: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: 40,\n  },\n\n  sessionControls: {\n    display: 'flex',\n    height: 40,\n    width: '100%',\n    background: 'rgba(33, 33, 33, .6)',\n    justifyContent: 'flex-end',\n    position: 'fixed',\n    zIndex: 10,\n  },\n\n  sessionIdWrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    marginRight: 5,\n  },\n}));\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\nimport { useSelector, useDispatch } from 'react-redux';\nimport clipboardCopy from 'clipboard-copy';\n\nimport Slide from '@material-ui/core/Slide';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../../data/evidences';\n\nimport {\n  EMF as EMF_QUEST, TEMPERATURE as TEMPERATURE_QUEST, CRUCIFIX, EVENT,\n  MOTION, PHOTO, SINK, SMUDGE, CANDLE, SALT, SANITY, HUNT, REPEL,\n} from '../../data/quests';\n\nimport { pickerStateSelector, sessionIdSelector, sessionKeySelector } from '../../selectors';\n\nimport {\n  updateGhostName, filterGhosts, updateSelectedQuests,\n  resetPicker, updateAnswersEveryoneButton, resetSession as resetSessionAction, setPickerState,\n} from '../../actions';\n\nimport CustomButton from './Buttons/CustomButton';\nimport GhostCard from './GhostCard';\n\nimport useStyles from './styles';\nimport firebaseDataService from '../../services/firebaseData';\n\nconst Picker = ({ changePage, resetSession }) => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const pickerState = useSelector((state) => pickerStateSelector(state));\n  const sessionId = useSelector((state) => sessionIdSelector(state));\n  const sessionKey = useSelector((state) => sessionKeySelector(state));\n\n  const [copyHintText, setCopyHintText] = useState('Click to copy');\n\n  useEffect(() => {\n    const onUnload = () => {\n      dispatch(resetSessionAction());\n    };\n\n    window.addEventListener('beforeunload', onUnload);\n\n    return () => {\n      window.removeEventListener('beforeunload', onUnload);\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (sessionKey) {\n      firebaseDataService.getRef().child(sessionKey).on('value', (data) => {\n        dispatch(setPickerState(data.val()));\n      });\n    }\n  }, [dispatch, sessionId, sessionKey]);\n\n  const handleGhostNameChange = (name) => {\n    dispatch(updateGhostName(name));\n  };\n\n  const handleEvidenceButtonClick = (evidence, isActive) => {\n    dispatch(filterGhosts(evidence, isActive));\n  };\n\n  const handleQuestButtonClick = (quest, isActive) => {\n    dispatch(updateSelectedQuests(quest, isActive));\n  };\n\n  const handleAnswersEveryoneButton = (text, isActive) => {\n    dispatch(updateAnswersEveryoneButton(isActive));\n  };\n\n  const handleReset = () => {\n    dispatch(resetPicker());\n  };\n\n  const handleCopySessionIdClick = () => {\n    clipboardCopy(sessionId).then(() => {\n      setCopyHintText('Copied to clipboard!');\n\n      setTimeout(() => {\n        setCopyHintText('Click to copy');\n      }, 5000);\n    });\n  };\n\n  const { ghostName, ghosts, selectedEvidences } = pickerState;\n\n  return (\n    <Slide direction=\"right\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.sessionControls}>\n          {\n            sessionId !== '' && (\n              <Box className={css.sessionIdWrapper}>\n                <Typography>Session id:</Typography>\n                <Tooltip title={copyHintText}>\n                  <Button onClick={handleCopySessionIdClick}>{sessionId}</Button>\n                </Tooltip>\n              </Box>\n            )\n          }\n          <Tooltip title=\"Exit room\">\n            <IconButton onClick={() => resetSession()}>\n              <ExitToAppIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"To questions\">\n            <IconButton onClick={() => changePage('questions')}>\n              <ArrowForwardIosIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        <Box className={css.header}>\n          <Typography variant=\"h3\">Ghost Picker</Typography>\n        </Box>\n        <Box className={css.inputWrapper}>\n          <TextField\n            id=\"ghost-name\"\n            label=\"Ghost Name\"\n            variant=\"outlined\"\n            value={ghostName}\n            onChange={(e) => handleGhostNameChange(e.target.value)}\n          />\n          <CustomButton type=\"talksToEveryOne\" color=\"grey\" text=\"Answers everyone\" handleClick={handleAnswersEveryoneButton} />\n          <CustomButton type=\"reset\" color=\"grey\" text=\"Reset\" handleClick={handleReset} />\n        </Box>\n        <Typography variant=\"h4\">Evidences</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"evidence\" color=\"red\" text={EMF} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"green\" text={FINGERPRINTS} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"dodgerblue\" text={TEMPERATURE} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"purple\" text={GHOST_WRITING} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"cadetblue\" text={SPIRIT_BOX} handleClick={handleEvidenceButtonClick} />\n          <CustomButton type=\"evidence\" color=\"brown\" text={GHOST_ORB} handleClick={handleEvidenceButtonClick} />\n        </Box>\n        <Typography variant=\"h4\">Quests</Typography>\n        <Box className={css.evidencesButtonsWrapper}>\n          <CustomButton type=\"quest\" color=\"grey\" text={CRUCIFIX} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EVENT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={MOTION} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={PHOTO} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={EMF_QUEST} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SINK} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SMUDGE} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={TEMPERATURE_QUEST} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={CANDLE} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SALT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={SANITY} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={HUNT} handleClick={handleQuestButtonClick} />\n          <CustomButton type=\"quest\" color=\"grey\" text={REPEL} handleClick={handleQuestButtonClick} />\n        </Box>\n        <Box className={css.ghostsWrapper}>\n          {\n            ghosts.map((ghost) => (\n              <GhostCard data={ghost} key={ghost.name} selectedEvidences={selectedEvidences} />\n            ))\n          }\n          {\n            isEmpty(ghosts) ? (\n              <Box className={css.noEvidenceWrapper}>\n                <Typography variant=\"h6\">\n                  No ghosts with such combination of evidences\n                </Typography>\n              </Box>\n            ) : null\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nPicker.propTypes = {\n  changePage: PropTypes.func.isRequired,\n  resetSession: PropTypes.func.isRequired,\n};\n\nexport default Picker;\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(({ palette }) => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    padding: 0,\r\n    background: palette.primary.main,\r\n    color: palette.primary.contrastText,\r\n    overflowX: 'hidden',\r\n  },\r\n\r\n  sessionControls: {\r\n    display: 'flex',\r\n    height: 40,\r\n    width: '100%',\r\n    background: 'rgba(33, 33, 33, .6)',\r\n    justifyContent: 'flex-start',\r\n    position: 'fixed',\r\n    zIndex: 10,\r\n  },\r\n\r\n  header: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginTop: 40,\r\n  },\r\n\r\n  pageLabel: {\r\n    margin: '0 auto',\r\n  },\r\n\r\n  questionsWrapper: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    width: '100%',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'space-around',\r\n    '@media screen and (max-width: 880px)': {\r\n      justifyContent: 'flex-start',\r\n    },\r\n  },\r\n\r\n  columnWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    padding: '0 30px',\r\n  },\r\n\r\n  questionHeader: {\r\n    color: 'red',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport useStyles from './styles';\r\n\r\nimport questions from '../../data/questions.json';\r\n\r\nconst Questions = ({ changePage }) => {\r\n  const css = useStyles();\r\n\r\n  return (\r\n    <Slide direction=\"left\" in mountOnEnter unmountOnExit>\r\n      <Box className={css.wrapper}>\r\n        <Box className={css.sessionControls}>\r\n          <Tooltip title=\"To Picker\">\r\n            <IconButton onClick={() => changePage('picker')}>\r\n              <ArrowBackIosIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n        <Box className={css.header}>\r\n          <Typography variant=\"h3\" className={css.pageLabel}>Questions</Typography>\r\n        </Box>\r\n        <Box className={css.questionsWrapper}>\r\n          {\r\n            Object.keys(questions).map((key) => (\r\n              <Fade in timeout={1000} key={key}>\r\n                <Box className={css.columnWrapper} key={key}>\r\n                  <Typography variant=\"h4\" className={css.questionHeader} key={key}>{key}</Typography>\r\n                  {\r\n                    questions[key].map((el) => (\r\n                      <Typography key={el}>{el}</Typography>\r\n                    ))\r\n                  }\r\n                </Box>\r\n              </Fade>\r\n            ))\r\n          }\r\n        </Box>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n};\r\n\r\nQuestions.propTypes = {\r\n  changePage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Questions;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles({\r\n  activeAbsolute: {\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: 20,\r\n    backgroundColor: 'rgba(0, 0, 0, .6)',\r\n  },\r\n\r\n  activeBox: {\r\n    width: '100%',\r\n  },\r\n\r\n  disabled: {\r\n    display: 'none',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { loaderStateSelector } from '../../selectors';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Loader = ({ type }) => {\r\n  const css = useStyles();\r\n  const isShown = useSelector((state) => loaderStateSelector(state));\r\n\r\n  const wrapperStyle = type === 'linear' ? css.activeBox : css.activeAbsolute;\r\n  const isActive = isShown ? '' : css.disabled;\r\n\r\n  return (\r\n    <div className={`${wrapperStyle} ${isActive}`}>\r\n      {\r\n        type === 'linear' ? (\r\n          <LinearProgress />\r\n        ) : (\r\n          <CircularProgress color=\"secondary\" />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(({ palette }) => ({\r\n  wrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    background: palette.primary.main,\r\n    color: palette.primary.contrastText,\r\n  },\r\n\r\n  subWrapper: {\r\n    padding: 5,\r\n    backgroundColor: 'rgba(0, 0, 0, .3)',\r\n    borderRadius: 10,\r\n  },\r\n\r\n  inputWrapper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: '10px 20px 10px 20px',\r\n  },\r\n\r\n  submitButton: {\r\n    marginTop: 5,\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { isEmpty } from 'lodash';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport Loader from '../Loader';\n\nimport { enterApp, showLoader, hideLoader } from '../../actions';\nimport { getSessionId, setSessionId, generateUuid } from '../../utils';\nimport firebaseDataService from '../../services/firebaseData';\n\nimport useStyles from './styles';\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const css = useStyles();\n\n  const [sessionId, changeSessionId] = useState('');\n  const [session, setSession] = useState({});\n  const [error, setError] = useState(null);\n  const [isJoinButtonPressed, setIsJoinButtonPressed] = useState(false);\n\n  const sessionIdCookie = getSessionId();\n\n  useEffect(() => {\n    if (sessionIdCookie || sessionIdCookie === '') {\n      dispatch(enterApp('picker', sessionIdCookie));\n    }\n  }, [dispatch, sessionIdCookie]);\n\n  useEffect(() => {\n    if (session && !isEmpty(session)) {\n      setSessionId(sessionId);\n      dispatch(enterApp('picker', sessionId));\n    }\n  });\n\n  useEffect(() => {\n    if (!session) {\n      setError('Session not found');\n    }\n  }, [session]);\n\n  const validate = () => {\n    if (sessionId.length !== 6) {\n      setError('Session id consists of 6 digits');\n      return false;\n    }\n\n    if (!(/^[0-9]+$/).test(sessionId)) {\n      setError('Wrong ID format');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSessionIdChange = (value) => {\n    setSession({});\n    setError(null);\n    changeSessionId(value);\n  };\n\n  const handleCreateClick = (e) => {\n    e.preventDefault();\n    const id = generateUuid();\n    dispatch(enterApp('picker', id));\n    setSessionId(id);\n  };\n\n  const handleClickJoin = (state) => {\n    setIsJoinButtonPressed(state);\n  };\n\n  const handleJoinSession = () => {\n    if (validate()) {\n      dispatch(showLoader());\n      firebaseDataService.getSessionById(sessionId).then((data) => {\n        dispatch(hideLoader());\n        setSession(data.val());\n      });\n    }\n  };\n\n  const handleSoloLobby = () => {\n    setSessionId('');\n    dispatch(enterApp('picker', ''));\n  };\n\n  return (\n    <Box className={css.wrapper}>\n      <Box className={css.subWrapper}>\n        {\n          isJoinButtonPressed ? (\n            <Box className={css.inputWrapper}>\n              <TextField\n                id=\"sessionID\"\n                label=\"Session ID\"\n                variant=\"outlined\"\n                value={sessionId}\n                error={!!error}\n                helperText={error}\n                onChange={(e) => handleSessionIdChange(e.target.value)}\n              />\n              <Button className={css.submitButton} onClick={handleJoinSession}>Join</Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={() => handleClickJoin(false)}\n              >\n                Back\n              </Button>\n            </Box>\n          ) : (\n            <Box className={css.inputWrapper}>\n              <Button\n                className={css.submitButton}\n                onClick={handleCreateClick}\n              >\n                Create online session\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={() => handleClickJoin(true)}\n              >\n                Join online session\n              </Button>\n              <Divider />\n              <Button\n                className={css.submitButton}\n                onClick={handleSoloLobby}\n              >\n                Enter solo session\n              </Button>\n            </Box>\n          )\n        }\n        <Loader type=\"linear\" />\n      </Box>\n    </Box>\n  );\n};\n\nexport default Login;\n","// import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport default createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n\r\n    primary: {\r\n      main: grey[900],\r\n    },\r\n\r\n    secondary: {\r\n      main: grey[50],\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiTypography: {\r\n      body1: {\r\n        fontFamily: 'SyneMono',\r\n        '@media screen and (max-width: 1000px)': {\r\n        },\r\n      },\r\n\r\n      h3: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n\r\n      h4: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n\r\n      h5: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n\r\n      h6: {\r\n        fontFamily: 'Teko-Medium',\r\n      },\r\n    },\r\n  },\r\n});\r\n","import React  from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport {\n  changePage, resetSession,\n} from '../actions';\n\nimport { pageSelector } from '../selectors';\n\nimport { resetSessionId } from '../utils';\n\nimport Picker from './Picker';\nimport Questions from './Questions';\nimport Login from './Login';\n\nimport theme from './theme';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const page = useSelector((state) => pageSelector(state));\n\n  const handleChangePage = (newPage) => {\n    dispatch(changePage(newPage));\n  };\n\n  const handleSessionReset = () => {\n    resetSessionId();\n    dispatch(resetSession());\n  };\n\n  const renderPage = () => {\n    switch (page) {\n      case 'picker':\n        return (\n          <Picker\n            changePage={handleChangePage}\n            resetSession={handleSessionReset}\n          />\n        );\n      case 'questions':\n        return <Questions changePage={handleChangePage} />;\n      default:\n        return (\n          <Login />\n        );\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {renderPage()}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport configureStore from './store';\r\n\r\nimport App from './components/App';\r\n\r\nimport './index.css';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}