{"version":3,"sources":["evidences/index.js","components/Picker/EvidenceButton/styles.js","components/Picker/EvidenceButton/index.jsx","components/Picker/GhostCard/styles.js","components/Picker/GhostCard/index.jsx","components/Picker/styles.js","components/Picker/index.jsx","components/Questions/styles.js","components/Questions/index.jsx","components/theme.js","data/ghosts/index.js","data/ghosts/Banshee.js","data/ghosts/Demon.js","data/ghosts/Jinn.js","data/ghosts/Mare.js","data/ghosts/Oni.js","data/ghosts/Phantom.js","data/ghosts/Poltergeist.js","data/ghosts/Revenant.js","data/ghosts/Shade.js","data/ghosts/Spirit.js","data/ghosts/Wraith.js","data/ghosts/Yurei.js","utils/index.js","components/App.jsx","index.jsx"],"names":["EMF","makeStyles","button","color","props","margin","buttonSelected","border","EvidenceButton","text","handleClick","isActive","css","useStyles","Button","className","onClick","defaultProps","root","width","padding","content","display","alignItems","accent","GhostCard","data","selectedEvidences","useState","isOpen","setIsOpen","name","strength","weakness","evidences","useEffect","Fade","in","timeout","Box","Typography","variant","map","el","key","includes","palette","wrapper","flexDirection","justifyContent","minHeight","background","primary","main","contrastText","inputWrapper","flexWrap","evidencesButtonsWrapper","ghostsWrapper","alignContent","noEvidenceWrapper","changePageButtonWrapper","pageLabel","Picker","changePage","updateGhostName","updateSelectedEvidences","handleAnswersButton","ghostName","filteredGhosts","buttonsState","resetPicker","Slide","direction","mountOnEnter","unmountOnExit","IconButton","TextField","id","label","value","onChange","e","target","talksToEveryOne","ghost","isEmpty","paddingBottom","questionsWrapper","columnWrapper","Questions","Object","keys","questions","createMuiTheme","type","grey","secondary","overrides","MuiTypography","body1","fontSize","fontFamily","h4","h6","filterGhostsByEvidences","ghosts","filter","difference","length","initialButtonsState","App","page","setPage","setSelectedEvidences","filterGhosts","buttons","updateButtons","changeGhostName","currentState","push","remove","filtered","newPage","ThemeProvider","theme","renderPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cb864de.chunk.js","sourcesContent":["export const EMF = 'EMF';\nexport const FINGERPRINTS = 'Fingerprints';\nexport const TEMPERATURE = 'Temperature';\nexport const GHOST_WRITING = 'Ghost Writing';\nexport const SPIRIT_BOX = 'Spirit Box';\nexport const GHOST_ORB = 'Ghost Orb';\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  button: {\n    color: (props) => props.color,\n    margin: '0 5px',\n  },\n\n  buttonSelected: {\n    color: (props) => props.color,\n    border: '2px solid red',\n    margin: '0 2px',\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@material-ui/core';\n\nimport useStyles from './styles';\n\nconst EvidenceButton = ({\n  text, handleClick, isActive, ...props\n}) => {\n  const css = useStyles(props);\n\n  return (\n    <Button\n      className={isActive ? css.buttonSelected : css.button}\n      onClick={() => handleClick(text, !isActive)}\n    >\n      {text}\n    </Button>\n  );\n};\n\nEvidenceButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  handleClick: PropTypes.func,\n};\n\nEvidenceButton.defaultProps = {\n  handleClick: () => null,\n};\n\nexport default EvidenceButton;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  root: {\n    width: 200,\n    padding: 20,\n  },\n\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n\n  accent: {\n    color: 'green',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Fade from '@material-ui/core/Fade';\n\nimport useStyles from './styles';\n\nconst GhostCard = ({ data, selectedEvidences }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const css = useStyles();\n\n  const {\n    name, strength, weakness, evidences,\n  } = data;\n\n  useEffect(() => {\n    setIsOpen(true);\n\n    return (() => {\n      setIsOpen(false);\n    });\n  }, []);\n\n  return (\n    <Fade in={isOpen} timeout={1000}>\n      <Box className={css.root}>\n        <Typography variant=\"h4\">{name}</Typography>\n        <Typography variant=\"h6\" color=\"secondary\">Evidences</Typography>\n        {\n          evidences.map((el) => (\n            <Box key={el}>\n              <Typography className={selectedEvidences.includes(el) ? css.accent : ''}>{el}</Typography>\n            </Box>\n          ))\n        }\n        <Typography variant=\"h6\">Strength</Typography>\n        <Typography className={css.content}>{strength}</Typography>\n        <Typography variant=\"h6\">Weakness</Typography>\n        <Typography className={css.content}>{weakness}</Typography>\n      </Box>\n    </Fade>\n  );\n};\n\nGhostCard.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string,\n    evidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n    strength: PropTypes.string.isRequired,\n    weakness: PropTypes.string.isRequired,\n  }).isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default GhostCard;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: '20px 0',\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  inputWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px 20px',\n    flexWrap: 'wrap',\n  },\n\n  evidencesButtonsWrapper: {\n    display: 'flex',\n    justifyContent: 'center',\n    padding: '20px px',\n    flexWrap: 'wrap',\n  },\n\n  ghostsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: '0 50px',\n  },\n\n  noEvidenceWrapper: {\n    padding: 50,\n  },\n\n  changePageButtonWrapper: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { isEmpty } from 'lodash';\n\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Slide from '@material-ui/core/Slide';\n\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../../evidences';\n\nimport EvidenceButton from './EvidenceButton';\nimport GhostCard from './GhostCard';\n\nimport useStyles from './styles';\n\nconst Picker = ({\n  changePage, updateGhostName, updateSelectedEvidences, handleAnswersButton,\n  selectedEvidences, ghostName, filteredGhosts, buttonsState, resetPicker,\n}) => {\n  const css = useStyles();\n\n  return (\n    <Slide direction=\"right\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.changePageButtonWrapper}>\n          <Typography variant=\"h3\" className={css.pageLabel}>Ghost Picker</Typography>\n          <IconButton onClick={() => changePage('questions')}>\n            <ArrowForwardIosIcon />\n          </IconButton>\n        </Box>\n        <Box className={css.inputWrapper}>\n          <TextField\n            id=\"ghost-name\"\n            label=\"Ghost Name\"\n            variant=\"outlined\"\n            value={ghostName}\n            onChange={(e) => updateGhostName(e.target.value)}\n          />\n          <EvidenceButton color=\"grey\" text=\"Answers everyone\" isActive={buttonsState.talksToEveryOne} handleClick={handleAnswersButton} />\n          <EvidenceButton color=\"grey\" text=\"Reset\" isActive={false} handleClick={resetPicker} />\n        </Box>\n\n        <Box className={css.evidencesButtonsWrapper}>\n          <EvidenceButton color=\"red\" text={EMF} isActive={buttonsState[EMF]} handleClick={updateSelectedEvidences} />\n          <EvidenceButton color=\"green\" text={FINGERPRINTS} isActive={buttonsState[FINGERPRINTS]} handleClick={updateSelectedEvidences} />\n          <EvidenceButton color=\"blue\" text={TEMPERATURE} isActive={buttonsState[TEMPERATURE]} handleClick={updateSelectedEvidences} />\n          <EvidenceButton color=\"purple\" text={GHOST_WRITING} isActive={buttonsState[GHOST_WRITING]} handleClick={updateSelectedEvidences} />\n          <EvidenceButton color=\"grey\" text={SPIRIT_BOX} isActive={buttonsState[SPIRIT_BOX]} handleClick={updateSelectedEvidences} />\n          <EvidenceButton color=\"brown\" text={GHOST_ORB} isActive={buttonsState[GHOST_ORB]} handleClick={updateSelectedEvidences} />\n        </Box>\n        <Box className={css.ghostsWrapper}>\n          {\n            filteredGhosts.map((ghost) => (\n              <GhostCard data={ghost} key={ghost.name} selectedEvidences={selectedEvidences} />\n            ))\n          }\n          {\n            isEmpty(filteredGhosts) ? (\n              <Box className={css.noEvidenceWrapper}>\n                <Typography variant=\"h6\">\n                  No ghosts with such combination of evidences\n                </Typography>\n              </Box>\n            ) : null\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nPicker.propTypes = {\n  ghostName: PropTypes.string.isRequired,\n  selectedEvidences: PropTypes.arrayOf(PropTypes.string).isRequired,\n  filteredGhosts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  buttonsState: PropTypes.shape({ talksToEveryOne: PropTypes.bool }).isRequired,\n  updateGhostName: PropTypes.func.isRequired,\n  changePage: PropTypes.func.isRequired,\n  handleAnswersButton: PropTypes.func.isRequired,\n  updateSelectedEvidences: PropTypes.func.isRequired,\n  resetPicker: PropTypes.func.isRequired,\n};\n\nexport default Picker;\n","import { makeStyles } from '@material-ui/core';\n\nexport default makeStyles(({ palette }) => ({\n  wrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n    minHeight: '100%',\n    padding: '20px 0',\n    background: palette.primary.main,\n    color: palette.primary.contrastText,\n  },\n\n  changePageButtonWrapper: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    paddingBottom: 10,\n  },\n\n  pageLabel: {\n    margin: '0 auto',\n  },\n\n  questionsWrapper: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    alignItems: 'flex-start',\n    justifyContent: 'space-around',\n  },\n\n  columnWrapper: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-start',\n  },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport Slide from '@material-ui/core/Slide';\nimport Fade from '@material-ui/core/Fade';\nimport Typography from '@material-ui/core/Typography';\n\nimport useStyles from './styles';\n\nimport questions from '../../data/questions.json';\n\nconst Questions = ({ changePage }) => {\n  const css = useStyles();\n\n  return (\n    <Slide direction=\"left\" in mountOnEnter unmountOnExit>\n      <Box className={css.wrapper}>\n        <Box className={css.changePageButtonWrapper}>\n          <IconButton onClick={() => changePage('picker')}>\n            <ArrowBackIosIcon />\n          </IconButton>\n          <Typography variant=\"h3\" className={css.pageLabel}>Questions</Typography>\n        </Box>\n        <Box className={css.questionsWrapper}>\n          {\n            Object.keys(questions).map((key) => (\n              <Fade in timeout={1000} key={key}>\n                <Box className={css.columnWrapper} key={key}>\n                  <Typography variant=\"h4\" key={key}>{key}</Typography>\n                  {\n                    questions[key].map((el) => (\n                      <Typography key={el}>{el}</Typography>\n                    ))\n                  }\n                </Box>\n              </Fade>\n            ))\n          }\n        </Box>\n      </Box>\n    </Slide>\n  );\n};\n\nQuestions.propTypes = {\n  changePage: PropTypes.func.isRequired,\n};\n\nexport default Questions;\n","// import { createMuiTheme } from '@material-ui/core/styles';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\nimport grey from '@material-ui/core/colors/grey';\n\nexport default createMuiTheme({\n  palette: {\n    type: 'dark',\n\n    primary: {\n      main: grey[900],\n    },\n\n    secondary: {\n      main: grey[50],\n    },\n  },\n\n  overrides: {\n    MuiTypography: {\n      body1: {\n        fontSize: '.8vw',\n        fontFamily: 'SyneMono',\n        '@media screen and (max-width: 1000px)': {\n          fontSize: '3vw',\n        },\n      },\n\n      h4: {\n        fontFamily: 'Teko-Medium',\n        color: 'red',\n        fontSize: '2vw',\n        '@media screen and (max-width: 1000px)': {\n          fontSize: '8vw',\n        },\n      },\n\n      h6: {\n        fontFamily: 'Teko-Medium',\n        fontSize: '1vw',\n        '@media screen and (max-width: 1000px)': {\n          fontSize: '5vw',\n        },\n      },\n    },\n  },\n});\n","import Banshee from './Banshee';\nimport Demon from './Demon';\nimport Jinn from './Jinn';\nimport Mare from './Mare';\nimport Oni from './Oni';\nimport Phantom from './Phantom';\nimport Poltergeist from './Poltergeist';\nimport Revenant from './Revenant';\nimport Shade from './Shade';\nimport Spirit from './Spirit';\nimport Wraith from './Wraith';\nimport Yurei from './Yurei';\n\nexport default [\n  Banshee,\n  Demon,\n  Jinn,\n  Mare,\n  Oni,\n  Phantom,\n  Poltergeist,\n  Revenant,\n  Shade,\n  Spirit,\n  Wraith,\n  Yurei,\n];\n","import { EMF, FINGERPRINTS, TEMPERATURE } from '../../evidences';\n\nexport default {\n  name: 'Banshee',\n  evidences: [EMF, FINGERPRINTS, TEMPERATURE],\n  strength: 'Only targets one player at a time',\n  weakness: 'Hates the Crucifix',\n};\n","import { TEMPERATURE, GHOST_WRITING, SPIRIT_BOX } from '../../evidences';\n\nexport default {\n  name: 'Demon',\n  evidences: [TEMPERATURE, GHOST_WRITING, SPIRIT_BOX],\n  strength: 'Extremely aggressive',\n  weakness: 'Using the Ouija board to ask questions does not drain sanity',\n};\n","import { EMF, SPIRIT_BOX, GHOST_ORB } from '../../evidences';\n\nexport default {\n  name: 'Jinn',\n  evidences: [EMF, SPIRIT_BOX, GHOST_ORB],\n  strength: 'Moves faster the further away you are from it',\n  weakness: 'Cutting off the location’s power supply will limit the Jinn’s speed',\n};\n","import { TEMPERATURE, SPIRIT_BOX, GHOST_ORB } from '../../evidences';\n\nexport default {\n  name: 'Mare',\n  evidences: [TEMPERATURE, SPIRIT_BOX, GHOST_ORB],\n  strength: 'Attacks more frequently in the dark, tends to switch off lights',\n  weakness: 'Keeping the lights on',\n};\n","import { EMF, GHOST_WRITING, SPIRIT_BOX } from '../../evidences';\n\nexport default {\n  name: 'Oni',\n  evidences: [EMF, GHOST_WRITING, SPIRIT_BOX],\n  strength: 'Extremely active and moves objects quickly',\n  weakness: 'Extreme activity with lots of players nearby makes it easy to identify',\n};\n","import { EMF, TEMPERATURE, GHOST_ORB } from '../../evidences';\n\nexport default {\n  name: 'Phantom',\n  evidences: [EMF, TEMPERATURE, GHOST_ORB],\n  strength: 'Looking at the Phantom will reduce your sanity',\n  weakness: 'Capturing a photo will cause it to disappear, not during a hunt',\n};\n","import { FINGERPRINTS, SPIRIT_BOX, GHOST_ORB } from '../../evidences';\n\nexport default {\n  name: 'Poltergeist',\n  evidences: [FINGERPRINTS, SPIRIT_BOX, GHOST_ORB],\n  strength: 'Throws multiple objects about at once',\n  weakness: 'Rooms without any stuff in to throw',\n};\n","import { EMF, FINGERPRINTS, GHOST_WRITING } from '../../evidences';\n\nexport default {\n  name: 'Revenant',\n  evidences: [EMF, FINGERPRINTS, GHOST_WRITING],\n  strength: 'Attacks anyone, regardless of sanity levels',\n  weakness: 'Moves extremely slowly when players hide',\n};\n","import { EMF, GHOST_WRITING, GHOST_ORB } from '../../evidences';\n\nexport default {\n  name: 'Shade',\n  evidences: [EMF, GHOST_WRITING, GHOST_ORB],\n  strength: 'Minimal activity, hard to find and detect',\n  weakness: 'Does not hunt if players are in a group',\n};\n","import { FINGERPRINTS, GHOST_WRITING, SPIRIT_BOX } from '../../evidences';\n\nexport default {\n  name: 'Spirit',\n  evidences: [FINGERPRINTS, GHOST_WRITING, SPIRIT_BOX],\n  strength: 'No strengths',\n  weakness: 'Using smudge sticks stops from starting for a long time',\n};\n","import { FINGERPRINTS, TEMPERATURE, SPIRIT_BOX } from '../../evidences';\n\nexport default {\n  name: 'Wraith',\n  evidences: [FINGERPRINTS, TEMPERATURE, SPIRIT_BOX],\n  strength: 'Can fly through walls and does not leave footprints',\n  weakness: 'Salt is toxic for Wraith',\n};\n","import { TEMPERATURE, GHOST_WRITING, GHOST_ORB } from '../../evidences';\n\nexport default {\n  name: 'Yurei',\n  evidences: [TEMPERATURE, GHOST_WRITING, GHOST_ORB],\n  strength: 'Drains player sanity especially quickly',\n  weakness: 'Smudge stick in the same room will stop the Yurei from moving',\n};\n","import { filter, difference } from 'lodash';\n\nconst filterGhostsByEvidences = (ghosts, evidences) => (\n  filter(ghosts, (ghost) => difference(evidences, ghost.evidences).length === 0)\n);\n\nexport default filterGhostsByEvidences;\n","import React, { useState } from 'react';\nimport { remove } from 'lodash';\n\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport Picker from './Picker';\nimport Questions from './Questions';\n\nimport theme from './theme';\nimport ghosts from '../data/ghosts';\nimport {\n  EMF, FINGERPRINTS, TEMPERATURE,\n  GHOST_WRITING, SPIRIT_BOX, GHOST_ORB,\n} from '../evidences';\n\nimport filterGhostsByEvidences from '../utils';\n\nconst initialButtonsState = {\n  [EMF]: false,\n  [FINGERPRINTS]: false,\n  [TEMPERATURE]: false,\n  [GHOST_WRITING]: false,\n  [SPIRIT_BOX]: false,\n  [GHOST_ORB]: false,\n  talksToEveryOne: false,\n};\n\nconst App = () => {\n  const [page, setPage] = useState('picker');\n\n  const [selectedEvidences, setSelectedEvidences] = useState([]);\n  const [filteredGhosts, filterGhosts] = useState(ghosts);\n  const [buttons, updateButtons] = useState(initialButtonsState);\n  const [ghostName, changeGhostName] = useState('');\n\n  const updateSelectedEvidences = (value, isActive) => {\n    const currentState = selectedEvidences;\n    if (isActive) {\n      currentState.push(value);\n      setSelectedEvidences(currentState);\n      updateButtons({ ...buttons, [value]: isActive });\n    } else {\n      remove(currentState, (el) => el === value);\n      setSelectedEvidences(currentState);\n      updateButtons({ ...buttons, [value]: isActive });\n    }\n\n    const filtered = filterGhostsByEvidences(ghosts, currentState);\n    filterGhosts(filtered);\n  };\n\n  const handleAnswersButton = (text, isActive) => {\n    updateButtons({ ...buttons, talksToEveryOne: isActive });\n  };\n\n  const updateGhostName = (value) => {\n    changeGhostName(value);\n  };\n\n  const resetPicker = () => {\n    setSelectedEvidences([]);\n    updateButtons(initialButtonsState);\n    changeGhostName('');\n    filterGhosts(ghosts);\n  };\n\n  const changePage = (newPage) => {\n    setPage(newPage);\n  };\n\n  const renderPage = () => {\n    switch (page) {\n      case 'picker':\n        return (\n          <Picker\n            changePage={changePage}\n            filteredGhosts={filteredGhosts}\n            selectedEvidences={selectedEvidences}\n            updateSelectedEvidences={updateSelectedEvidences}\n            buttonsState={buttons}\n            ghostName={ghostName}\n            updateGhostName={updateGhostName}\n            handleAnswersButton={handleAnswersButton}\n            resetPicker={resetPicker}\n          />\n        );\n      case 'questions':\n        return <Questions changePage={changePage} />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      {renderPage()}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}